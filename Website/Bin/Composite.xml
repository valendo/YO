<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Composite</name>
    </assembly>
    <members>
        <member name="T:Composite.AspNet.CompositeC1SiteMapProvider">
            <summary>
            CompositeC1 implementation of <see cref="T:System.Web.SiteMapProvider"/>
            </summary>
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.FindSiteMapNode(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.FindSiteMapNodeFromKey(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.FindSiteMapNodeFromKey(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.FindSiteMapNodeFromKey(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.GetParentNode(System.Web.SiteMapNode)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.GetRootNodeCore">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.GetRootNodes">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.GetCurrentNodeKey">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.FindSiteMapNode(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.ProcessUrl(System.Uri)">
            <summary>
             Fixes up the hostname when using the preview-tab in the Console, since the requested page can belong to 
            a different domain than the console was opened in
            </summary>
            <param name="uri">The URI.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.AddRolesInternal(Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer)">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.ExtranetEnabled">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.ParentProvider">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.CurrentNode">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.RootNode">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.RootProvider">
            <exclude />
        </member>
        <member name="T:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer">
            <summary>
            Wrapper for a sitemap created by <see cref="T:Composite.Data.SitemapNavigator"/>
            </summary>
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.LoadSiteMap(Composite.AspNet.CompositeC1SiteMapProvider,System.Globalization.CultureInfo,Composite.Data.PublicationScope,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.GetFromCache(System.String,System.Globalization.CultureInfo,System.Guid)">
            <summary>
            Gets sitemap from cache.
            </summary>
            <param name="host">The host.</param>
            <param name="culture">The culture.</param>
            <param name="rootPageId">The root page id.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.AddToCache(Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer,System.String,System.Globalization.CultureInfo,System.Guid)">
            <summary>
            Adds sitemap to cache.
            </summary>
            <param name="siteMap">The site map.</param>
            <param name="host">The host.</param>
            <param name="culture">The culture.</param>
            <param name="rootPageId">The root page id.</param>
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.Root">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.KeyToNodesMap">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.RawUrlToNodesMap">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.ParentNodesMap">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.ChildCollectionsMap">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapProvider.SiteMapContainer.CanCache">
            <exclude />
        </member>
        <member name="T:Composite.AspNet.Razor.RazorFunction">
            <summary>
            Base class for c1 functions based on razor 
            </summary>
        </member>
        <member name="T:Composite.AspNet.Razor.CompositeC1WebPage">
            <summary>
            Defines a composite C1 razor control
            </summary>
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.PageTemplateFeature(System.String)">
            <summary>
            Includes a named Page Template Feature. Page Template Feature are managed in '~/App_Data/PageTemplateFeatures' 
            or via the C1 Console's Layout perspective. They contain html and functional snippets.
            </summary>
            <param name="featureName">Name of the Page Template Feature to include. Names do not include an extension.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.Markup(System.Xml.Linq.XNode)">
            <summary>
            Renders the specified XNode.
            </summary>
            <param name="xNode">The <see cref="T:System.Xml.Linq.XNode">XNode</see>.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.Function(System.String)">
            <summary>
            Executes a C1 Function.
            </summary>
            <param name="name">Function name.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.Function(System.String,System.Object)">
            <summary>
            Executes a C1 Function.
            </summary>
            <param name="name">Function name.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.Function(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes a C1 Function.
            </summary>
            <param name="name">Function name.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.Dispose">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.Dispose(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.Razor.CompositeC1WebPage.Finalize">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.Razor.CompositeC1WebPage.Data">
            <summary>
            Gets a <see cref="T:Composite.Data.DataConnection"/> object.
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.CompositeC1WebPage.Sitemap">
            <summary>
            Gets a <see cref="T:Composite.Data.SitemapNavigator"/> object.
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.CompositeC1WebPage.HomePageNode">
            <summary>
            Gets the home page node.
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.CompositeC1WebPage.CurrentPageNode">
            <summary>
            Gets the current page node.
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.CompositeC1WebPage.Lang">
            <summary>
            Gets to letter ISO Language Name representing the pages language - use this like &lt;html lang="@Lang" /&gt;
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.RazorFunction.FunctionDescription">
            <summary>
            Gets the function description.
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.RazorFunction.FunctionReturnType">
            <summary>
            Returns default value for a C1 function
            </summary>
        </member>
        <member name="T:Composite.AspNet.Razor.RazorHelper">
            <summary>
            Exposes method to execute razor pages.
            </summary>
        </member>
        <member name="M:Composite.AspNet.Razor.RazorHelper.ExecuteRazorPage(System.String,System.Action{System.Web.WebPages.WebPageBase},System.Type)">
            <summary>
            Executes the razor page.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <param name="setParameters">Delegate to set the parameters.</param>
            <param name="resultType">The type of the result.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.RazorHelper.ExecuteRazorPage``1(System.String,System.Action{System.Web.WebPages.WebPageBase})">
            <summary>
            Executes the razor page.
            </summary>
            <typeparam name="ResultType">The result type.</typeparam>
            <param name="virtualPath">The virtual path.</param>
            <param name="setParameters">Delegate to set the parameters.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.AspNet.Razor.RazorPageTemplate">
            <summary>
            Base class for a razor control that represends a C1 page tempalte
            </summary>
        </member>
        <member name="T:Composite.Core.PageTemplates.IPageTemplate">
            <summary>
            Basic interface for classes that represent a page template
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.IPageTemplate.TemplateId">
            <summary>
            Gets the template id.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.IPageTemplate.TemplateTitle">
            <summary>
            Gets the template title.
            </summary>
        </member>
        <member name="M:Composite.AspNet.Razor.RazorPageTemplate.Configure">
            <summary>
            Override this method and set <see cref="P:Composite.AspNet.Razor.RazorPageTemplate.TemplateId"/> and <see cref="P:Composite.AspNet.Razor.RazorPageTemplate.TemplateTitle"/>.
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.RazorPageTemplate.TemplateId">
            <summary>
            Gets or sets the page template id. You should set this in your Configure() method override.
            </summary>
        </member>
        <member name="P:Composite.AspNet.Razor.RazorPageTemplate.TemplateTitle">
            <summary>
            Gets or sets the page template title. You should set this in your Configure() method override.
            </summary>
        </member>
        <member name="T:Composite.AspNet.CompositeC1SiteMapNode">
            <summary>
            CompositeC1 implementation of <see cref="T:System.Web.SiteMapNode"/>
            </summary>
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.#ctor(Composite.AspNet.CompositeC1SiteMapProvider,Composite.Data.PageNode,Composite.Data.DataConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.AspNet.CompositeC1SiteMapNode"/> class.
            </summary>
            <param name="provider">The provider.</param>
            <param name="node">The node.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.#ctor(Composite.AspNet.CompositeC1SiteMapProvider,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.Equals(Composite.AspNet.CompositeC1SiteMapNode)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.Clone">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.op_Equality(Composite.AspNet.CompositeC1SiteMapNode,Composite.AspNet.CompositeC1SiteMapNode)">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.CompositeC1SiteMapNode.op_Inequality(Composite.AspNet.CompositeC1SiteMapNode,Composite.AspNet.CompositeC1SiteMapNode)">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapNode.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapNode.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapNode.Depth">
            <summary>
            Gets or sets the depth.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapNode.LastModified">
            <summary>
            Gets or sets the last modified.
            </summary>
            <value>
            The last modified.
            </value>
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapNode.ChangeFrequency">
            <summary>
            Gets or sets the change frequency.
            </summary>
            <value>
            The change frequency.
            </value>
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapNode.DocumentTitle">
            <summary>
            Gets or sets the document title.
            </summary>
            <value>
            The document title.
            </value>
        </member>
        <member name="P:Composite.AspNet.CompositeC1SiteMapNode.PageNode">
            <summary>
            Gets or sets the page node.
            </summary>
            <value>
            The page node.
            </value>
        </member>
        <member name="T:Composite.AspNet.SiteMapContext">
            <summary>
            Allows switching context of SiteMap
            </summary>
        </member>
        <member name="M:Composite.AspNet.SiteMapContext.#ctor(Composite.Data.Types.IPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.AspNet.SiteMapContext"/> class.
            </summary>
            <param name="rootPage">The root page.</param>
        </member>
        <member name="M:Composite.AspNet.SiteMapContext.Dispose">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.SiteMapContext.RootPage">
            <summary>
            Gets the root page.
            </summary>
        </member>
        <member name="P:Composite.AspNet.SiteMapContext.Current">
            <summary>
            Gets the current SiteMapContext. Can be null.
            </summary>
            <value>
            The current context.
            </value>
        </member>
        <member name="T:Composite.AspNet.SiteMapHandler">
            <summary>
            Handles requests to XML Sitemaps: */sitemap.xml
            </summary>
        </member>
        <member name="T:Composite.AspNet.SiteMapNodeChangeFrequency">
            <summary>
            ChangeFrequence of a SiteMapNode
            </summary>
        </member>
        <member name="F:Composite.AspNet.SiteMapNodeChangeFrequency.Always">
            <exclude />
        </member>
        <member name="F:Composite.AspNet.SiteMapNodeChangeFrequency.Hourly">
            <exclude />
        </member>
        <member name="F:Composite.AspNet.SiteMapNodeChangeFrequency.Daily">
            <exclude />
        </member>
        <member name="F:Composite.AspNet.SiteMapNodeChangeFrequency.Weekly">
            <exclude />
        </member>
        <member name="F:Composite.AspNet.SiteMapNodeChangeFrequency.Monthly">
            <exclude />
        </member>
        <member name="F:Composite.AspNet.SiteMapNodeChangeFrequency.Yearly">
            <exclude />
        </member>
        <member name="F:Composite.AspNet.SiteMapNodeChangeFrequency.Never">
            <exclude />
        </member>
        <member name="T:Composite.AspNet.UserControlFunction">
            <summary>
            Base class for a UserControls that represents a C1 function
            </summary>
        </member>
        <member name="P:Composite.AspNet.UserControlFunction.FunctionDescription">
            <summary>
            Gets the function description.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Trees.SortDirection">
            <summary>
            Specifies how to sort tree elements
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.SortDirection.Ascending">
            <summary>
            Sort from smallest to largest. For example, A to Z.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Trees.SortDirection.Descending">
            <summary>
            Sort from largest to smallest. For example, Z to A.
            </summary>
        </member>
        <member name="T:Composite.Core.PageTemplates.ISharedCodePageTemplateProvider">
            <summary>
            Represents a page template provider with shared code files
            </summary>
        </member>
        <member name="T:Composite.Core.PageTemplates.IPageTemplateProvider">
            <summary>
            Defines page template provider
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.IPageTemplateProvider.GetPageTemplates">
            <summary>
            Gets the page template descriptors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PageTemplates.IPageTemplateProvider.BuildPageRenderer(System.Guid)">
            <summary>
            Factory that give Composite C1 a IPageLayouter capable of rendering a Composite C1 page with the specified layout ID.
            The factory will be called for each individual page rendering 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PageTemplates.IPageTemplateProvider.GetRootActions">
            <summary>
            Adds element actions on "Page templates" element
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.IPageTemplateProvider.FlushTemplates">
            <summary>
            Forces provider to reload all the page templates next time they are requested.
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.ISharedCodePageTemplateProvider.GetSharedFiles">
            <summary>
            Gets the list of shared files, those files will be shown in a "Shared code" folder under "Layout/Page Templates"
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.PageTemplates.SharedFile">
            <summary>
            Contains information about a code file shared between page template.
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.SharedFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.PageTemplates.SharedFile"/> class.
            </summary>
            <param name="relativeFilePath">The relative file path.</param>
        </member>
        <member name="M:Composite.Core.PageTemplates.SharedFile.GetActions">
            <summary>
            Gets the custom element actions.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.PageTemplates.SharedFile.RelativeFilePath">
            <summary>
            Full path to the code file.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.SharedFile.DefaultEditAction">
            <summary>
            Indicating whether the default edit action should be shown.
            </summary>
        </member>
        <member name="M:Composite.Core.ResourceSystem.Plugins.ResourceProvider.ILocalizationProvider.GetAllStrings(System.String,System.Globalization.CultureInfo)">
            <summary>
            A dictionary of stringId -> stringValue
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Threading.ThreadCultureScope">
            <summary>
            Will set the threads Culture and reset it to the original value when this is disposed of.
            <example>
            using( var cultureScope = new ThreadCultureScope( new CultureInfo("da-DK") ) )
            {
              // Code here will run in da-DK scope. 
              // Culture in effect before the using statement will be reset when exiting the using.
            }
            </example>
            </summary>
        </member>
        <member name="M:Composite.Core.Threading.ThreadCultureScope.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Constructs a new culture scope, setting the threads CurrentCulture and resetting when this is disposed. The CurrentUiCulture is not affected.
            </summary>
            <param name="culture">Desired culture to be in effect</param>
        </member>
        <member name="M:Composite.Core.Threading.ThreadCultureScope.#ctor(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Constructs a new culture scope, setting the threads CurrentCulture and CurrentUiCulture and resetting when this is disposed.
            </summary>
            <param name="culture">Desired culture to be in effect</param>
            <param name="uiCulture">Desired UI culture to be in effect</param>
        </member>
        <member name="M:Composite.Core.Threading.ThreadCultureScope.Dispose">
            <summary>
            Return thread culture settings to their original values.
            </summary>
        </member>
        <member name="P:Composite.Core.Threading.ThreadCultureScope.Culture">
            <summary>
            The culture this class was constructed to use
            </summary>
        </member>
        <member name="P:Composite.Core.Threading.ThreadCultureScope.UiCulture">
            <summary>
            The UI culture this class was constructed to use or null if none were specified.
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.BuildManagerHelper.GetCompiledType(System.String)">
            <summary>
            Gets a user control. Prevents an exception that appears in Visual Studio while debugging
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.BuildManagerHelper.DisableUrlMetadataCaching(System.Boolean)">
            <summary>
            Disabling the "url metadata caching" prevents <see cref="T:System.Web.HttpException"/> in debugger 
            </summary>
            <param name="disableCaching"></param>
        </member>
        <member name="M:Composite.Core.WebClient.BuildManagerHelper.DisableUrlMetadataCachingScope">
            <summary>
            Disabling the "url metadata caching" prevents <see cref="T:System.Web.HttpException"/> in debugger 
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.FunctionBoxHttpHandler">
            <summary>
            Renders image that shows information about a function information in Visual Editor
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Template.PageTemplateFeatureFacade">
            <summary>
            Provides access to Page Template Features
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Template.PageTemplateFeatureFacade.GetPageTemplateFeature(System.String)">
            <summary>
            Gets a Page Template Feature based on name.
            </summary>
            <param name="featureName">Name of the Page Template Feature to return.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Template.PageTemplateFeatureFacade.GetPageTemplateFeaturePath(System.String)">
            <summary>
            Gets the path of a named feature
            </summary>
            <param name="featureName">Name of the Page Template Feature to get path for.</param>
            <returns></returns>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Template.PageTemplateFeatureFacade.GetNewPageTemplateFeaturePath(System.String,System.String)">
            <summary>
            Gets the path of a named feature
            </summary>
            <param name="featureName">Name of the Page Template Feature to get path for.</param>
            <param name="extension">The extension.</param>
            <returns></returns>
            <exclude/>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Template.PageTemplateFeatureFacade.LoadPageTemplateFeature(System.String)">
            <summary>
            Loads a Page Template Feature based on name.
            </summary>
            <param name="featureName">Name of the Page Template Feature to load.</param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Template.PageTemplateFeatureFacade.FeatureNames">
            <summary>
            Gets the feature names.
            </summary>
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataFieldTreeOrderingProfile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldTreeOrderingProfile.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldTreeOrderingProfile.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldTreeOrderingProfile.FromString(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldTreeOrderingProfile.OrderPriority">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldTreeOrderingProfile.OrderDescending">
            <exclude />
        </member>
        <member name="T:Composite.Data.TreeOrderingAttribute">
            <summary>
            Assign this to properties on your IData interfaces to control default ordering of tree items.
            </summary>
            <example> This sample shows how to use the TreeOrdering attribute.
            <code>
            // data interface attributes ...
            interface IMyDataType : IData
            {
                [TreeOrdering(1)]
                [StoreFieldType(PhysicalStoreFieldType.String, 40)]
                [ImmutableFieldId("{D75EA67F-AD14-4BAB-8547-6D87002809F1}")]
                string ProductName { get; set; }
                
                // more data properties ...
                
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.TreeOrderingAttribute.#ctor(System.Int32)">
            <summary>
            Specify that this field should be used for default tree node ordering. Order is by default ascending.
            Multiple fields on a data type may have ordering. In that case the orderPriority has importance.
            </summary>
            <param name="orderPriority">Priority controls which fields are used first when ordering. Low number win.</param>
        </member>
        <member name="M:Composite.Data.TreeOrderingAttribute.#ctor(System.Int32,System.Boolean)">
            <summary>
            Specify that this field should be used for default tree node ordering. Order is by default ascending.
            Multiple fields on a data type may have ordering. In that case the orderPriority has importance.
            </summary>
            <param name="orderPriority">Priority controls which fields are used first when ordering. Low number win.</param>
            <param name="orderDescending">When true this field will be used in descending (Z-A) order.</param>
        </member>
        <member name="P:Composite.Data.TreeOrderingAttribute.Priority">
            <summary>
            Priority for ordering. When multiple fields have this attribute attached this field is used. Low number win.
            </summary>
        </member>
        <member name="P:Composite.Data.TreeOrderingAttribute.Descending">
            <summary>
            When true descending order (Z-A) will be used.
            </summary>
        </member>
        <member name="P:Composite.Data.Foundation.ProcessControllerData.InterfaceType">
            <summary>
            The interface type for the <see cref="T:Composite.Data.ProcessControlled.IProcessController"/> that will
            do the processing
            </summary>
        </member>
        <member name="P:Composite.Data.Foundation.ProcessControllerData.AttributeType">
            <summary>
            The <see cref="T:Composite.Data.ProcessControllerTypeAttribute"/> attached to the IData
            object
            </summary>
        </member>
        <member name="T:Composite.Data.StoreEventHandler">
            <summary>    
            The event handle type for data store change events. These events may be both internally and externally provoked.
            </summary>
            <param name="sender"></param>
            <param name="storeEventArgs"></param>    
        </member>
        <member name="T:Composite.Data.StoreEventArgs">
            <summary>
            This class contains information for store change events. No specifics will be given as to which data item(s) were changed, 
            but the store (type, scope, language) is available. 
            
            Property DataEventsFired indicate if detailed data events have already been fired for the data store change. In situations where data
            was changed in the physical store by another process, detailed events cannot be fired and you need to rely on the StoreChange event to do cache flushed etc.
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;().OnStoreChange += new StoreEventHandler(DataEvents_StoreChanged);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "Foo";
                  
                  connection.Add&lt;IMyDataType&gt;(myDataType); // This will fire the event - changes are made to the store!
               }
            }
            
            
            void DataEvents_StoreChanged(object sender, StoreEventArgs storeEventArgs)
            {        
               Type dataType = storeEventArgs.DataType; // This will be the type that changed
               PublicationScope scope = storeEventArgs.PublicationScope; // The scope the event happened in - published vs. administrated
               CultureInfo locale = storeEventArgs.Locale; // The culture (language) the event happened in
               bool dataEventsFired = storeEventArgs.DataEventsFired; // True is detailed data item events have fired. False if a store reload happened and detailed events cannot be fired.
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.StoreEventArgs.#ctor(System.Type,Composite.Data.PublicationScope,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Data.StoreEventArgs"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="publicationScope">The publication scope.</param>
            <param name="locale">The locale.</param>
            <param name="dataEventsFired">Value indicating whether detailed data events have been fired for this change event. 
            When <c>false</c> the change happened outside the current process 
            (in the physical store, perhaps done by another running instance). </param>
            <exclude/>
        </member>
        <member name="P:Composite.Data.StoreEventArgs.DataType">
            <summary>
            Gets the data type that is the subject of the event fired.
            </summary>
        </member>
        <member name="P:Composite.Data.StoreEventArgs.PublicationScope">
            <summary>
            Gets the data scope that is the subject of the event fired.
            </summary>
        </member>
        <member name="P:Composite.Data.StoreEventArgs.Locale">
            <summary>
            Gets the locale that is the subject of the event fired.
            </summary>
        </member>
        <member name="P:Composite.Data.StoreEventArgs.DataEventsFired">
            <summary>
            Gets a value indicating if detailed data events have been fired for this change event. When false the change happened outside the current process 
            (in the physical store, perhaps done by another running instance). You can rely on detailed data events to do precise cache management and use the StoreChange event
            when DataEventsFired is false to do a complete cache flush.
            </summary>
        </member>
        <member name="T:Composite.Data.TypeVersionAttribute">
            <exclude />
        </member>
        <member name="M:Composite.Data.TypeVersionAttribute.#ctor(System.Int32)">
            <exclude />
        </member>
        <member name="P:Composite.Data.TypeVersionAttribute.Version">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.IHooklessElementProvider">
            <summary>    
            This interface is implemented by element providers - plug-ins that can decorate the C1 Console tree structure with elements.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementProvider.IHooklessElementProvider.GetRoots(Composite.C1Console.Elements.SearchToken)">
            <summary>
            Return the providers root elements 
            </summary>
            <param name="seachToken">
            If this is null the provider should not do any filtering. If this is not null the provider
            should do the appropriate filtering on its elements. 
            If the provider does not want to be a part of a search and this variable is not null,
            the provider should return an empty list
            </param>
            <returns>Root elements</returns>
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementProvider.IHooklessElementProvider.GetChildren(Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.SearchToken)">
            <summary>
            Return the children of a given element
            </summary>
            <param name="entityToken">The parent element of the elements to return</param>
            <param name="seachToken">
            If this is null the provider should not do any filtering. If this is not null the provider
            should do the appropriate filtering on its elements. 
            If the provider does not want to be a part of a search and this variable is not null,
            the provider should return an empty list
            </param>
            <returns>Child elements</returns>
        </member>
        <member name="P:Composite.C1Console.Elements.Plugins.ElementProvider.IHooklessElementProvider.Context">
            <summary>
            The system will supply an ElementProviderContext to the provider
            to use for creating ElementHandles
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.IAuxiliarySecurityAncestorProvider">
            <summary>    
            To add a see <see cref="T:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade"/>.
            Typically added from a element provider
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.C1Console.Security.IAuxiliarySecurityAncestorProvider.GetParents(System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken})">
            <summary>
            If the entityToken do not have any parents, this method should return an entry in the dictionary with a IEnumerable
            with zero elements.
            </summary>
            <param name="entityTokens"></param>
            <returns>
            A dictionary with where child entity token is key and the value of this key
            is enumerable of the parent entity tokens - possibly empty</returns>
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.EntityToken">
            <summary>
            EntityToken is used through out Composite C1 to describe artifacts that can have security settings. Also see <see cref="T:Composite.Data.DataEntityToken"/>.
            </summary>
            <remarks>
            When subclassing this class and adding properties that have an impack when identity (equiallity)
            of the subclass, remember to overload Equal and GetHashCode!
            </remarks>
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.IsValid">
            <summary>
            The state of the EntityToken
            </summary>
            <returns>The state of the EntityToken.</returns>
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.Serialize">
            <summary>
            Serialize the EntityToken
            </summary>
            <returns>a string representation of the entity token</returns>
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.DoSerialize(System.Text.StringBuilder)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.DoSerialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.DoDeserialize(System.String,System.String@,System.String@,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.DoDeserialize(System.String,System.String@,System.String@,System.String@,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.GetPrettyHtml(System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.OnGetTypePrettyHtml">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.OnGetSourcePrettyHtml">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.OnGetIdPrettyHtml">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.OnGetExtraPrettyHtml">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.OnGetPrettyHtml(Composite.C1Console.Security.EntityTokenHtmlPrettyfier)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.Equals(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityToken.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.EntityToken.Type">
            <summary>
            A string that forms one third of the unique key for the entity being represented. Being the 'type' part of the globally unique key 'type/source/id', 
            this value should be unique for your code and not clash with 'type' strings used in other code modules.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Security.EntityToken.Source">
            <summary>
            A string that forms one third of the unique key for the entity being represented. Being the 'source' part of the globally unique key 'type/source/id', 
            this value should be unique the source (like a file name or sql connection) when whence the entity come. This field is only important if enteties of 
            this type can come from different sources.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Security.EntityToken.Id">
            <summary>
            A string that forms one third of the unique key for the entity being represented. Being the 'id' part of the globally unique key 'type/source/id', 
            this value should identify a specific entity of the given 'type' from the given 'source'.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Security.EntityToken.HashCode">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.RootFolderId">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.FeatureId">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.BuildFeatureEntityToken(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateFeatureElementProvider.PageTemplateFeatureEntityToken.FeatureName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken">
            <summary>
            Represents an entity token for a shared code file
            </summary>
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken"/> class.
            </summary>
            <param name="virtualPath">The relative file path.</param>
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageTemplateElementProvider.SharedCodeFileEntityToken.VirtualPath">
            <summary>
            Gets the relative file path.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.ISecurityAncestorProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ISecurityAncestorProvider.GetParents(Composite.C1Console.Security.EntityToken)">
            <summary>
            If the entityToken does not exists, this method should return null.
            If the entityToken do not have any parents, this method should return an IEnumerable
            with zero elements.
            </summary>
            <param name="entityToken"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OnContextSetted">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OnGetFunctionInfos(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OnGetEntityTokenTypes">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OnIsEntityOwner(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OnGetFolderActions">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OnGetFunctionActions(Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.IFunctionTreeBuilderLeafInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OnGetTreeLockBehavior">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.GetContext">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.GetRoots(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.GetChildren(Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.CreateId(Composite.Core.Collections.NamespaceTreeBuilderFolder,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.CreateId(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.GetParents(System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.GetIconHandle(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.Function">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.FunctionError">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.RootFolderLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.RootFolderToolTip">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.FolderIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.OpenFolderIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.EmptyFolderIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.FunctionIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionProviderElementProvider.Context">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.RazorFunctionElementProvider.RazorFunctionElementProvider.OnGetFolderActions">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.RazorFunctionElementProvider.RazorFunctionElementProvider.OnGetFunctionActions(Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.IFunctionTreeBuilderLeafInfo)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.IFunctionTreeBuilderLeafInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Collections.INamespaceTreeBuilderLeafInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.INamespaceTreeBuilderLeafInfo.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.INamespaceTreeBuilderLeafInfo.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.IFunctionTreeBuilderLeafInfo.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.HooklessElementProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.NameTypeManagerTypeConfigurationElement">
            <summary>
            Represents a <see cref="T:System.Configuration.ConfigurationElement"/> that has a name and type known to <see cref="T:Composite.Core.Types.TypeManager"/>.
            </summary>
            <exclude/>
        </member>
        <member name="P:Composite.Core.Configuration.NameTypeManagerTypeConfigurationElement.Type">
            <summary>
            Gets or sets the <see cref="P:Composite.Core.Configuration.NameTypeManagerTypeConfigurationElement.Type"/> the element is the configuration for.
            </summary>
            <value>
            The <see cref="P:Composite.Core.Configuration.NameTypeManagerTypeConfigurationElement.Type"/> the element is the configuration for.
            </value>
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserControlFunctionElementProvider.UserControlFunctionElementProvider.OnGetFolderActions">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserControlFunctionElementProvider.UserControlFunctionElementProvider.OnGetFunctionActions(Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.IFunctionTreeBuilderLeafInfo)">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.SimpleVirtualElement._tagProperty">
            <summary>
            Used by the client js to filter perspective related elements
            </summary>
        </member>
        <member name="T:Composite.Functions.IFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Functions.IMetaFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Functions.IMetaFunction.Name">
            <exclude />
        </member>
        <member name="P:Composite.Functions.IMetaFunction.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Functions.IMetaFunction.Description">
            <exclude />
        </member>
        <member name="P:Composite.Functions.IMetaFunction.ReturnType">
            <exclude />
        </member>
        <member name="P:Composite.Functions.IMetaFunction.ParameterProfiles">
            <exclude />
        </member>
        <member name="P:Composite.Functions.IMetaFunction.EntityToken">
            <exclude />
        </member>
        <member name="M:Composite.Functions.IFunction.Execute(Composite.Functions.ParameterList,Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.FunctionProvider.IFunctionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Functions.Plugins.FunctionProvider.IFunctionProvider.FunctionNotifier">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Plugins.FunctionProvider.IFunctionProvider.Functions">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FileBasedFunctionProvider`1.InstantiateFunction(System.String,System.String,System.String)">
            <summary>
            Instantiates the function from the file.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <param name="namespace">The namespace.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionBasedFunctionProviderHelper">
            <summary>
            Helper class for developing implementations of FileBasedFunctionProvider
            </summary>
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionBasedFunctionProviderHelper.GetDescription(System.String,System.Object)">
            <summary>
            Gets the function description from the <see cref="T:Composite.Functions.FunctionAttribute"/>.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="functionObject">The object that represents a function.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionBasedFunctionProviderHelper.GetParameters(System.Object,System.Type,System.String)">
            <summary>
            Extracts the function paramteres from an object that represents a function.
            </summary>
            <param name="functionObject">The object that represents a function.</param>
            <param name="baseFunctionType">Type of the base function.</param>
            <param name="filePath">Physical file location of the file behind the function, used for logging.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter">
            <summary>
            Represents a function parameter
            </summary>
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter.#ctor(System.String,System.Type,Composite.Functions.FunctionParameterAttribute,Composite.Functions.WidgetFunctionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="functionParameterAttribute">The function parameter attribute.</param>
            <param name="widgetProvider">The widget provider.</param>
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter.SetValue(System.Object,System.Object)">
            <summary>
            Sets the parameter value.
            </summary>
            <param name="functionObject">The function object.</param>
            <param name="parameterValue">The parameter value.</param>
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter.Name">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter.Type">
            <summary>
            Gets the parameter type.
            </summary>
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter.WidgetProvider">
            <summary>
            Gets the widget provider.
            </summary>
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.FileBasedFunctionProvider.FunctionParameter.Attribute">
            <summary>
            Gets the function parameter attribute.
            </summary>
            <value>
            The attribute.
            </value>
        </member>
        <member name="T:Composite.Functions.IFunctionInitializationInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Functions.IFunctionInitializationInfo.FunctionInitializedCorrectly">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.FunctionProvider.FunctionProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.AspNet.Razor.Functions">
            <summary>
            Utility class for working with C1 functions from Razor code
            </summary>
        </member>
        <member name="M:Composite.AspNet.Razor.Functions.ExecuteFunction(System.String)">
            <summary>
            Executes the function.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Composite.AspNet.Razor.Functions.ExecuteFunction(System.String,System.Object)">
            <summary>
            Executes the function.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.Functions.ExecuteFunction(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the function.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.Functions.ObjectToDictionary(System.Object)">
            <summary>
            Builds a dictionary for object properties' values.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.AspNet.Razor.C1HtmlHelper">
            <summary>
            Extension object to be used in Razor code
            </summary>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.#ctor(System.Web.WebPages.Html.HtmlHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.AspNet.Razor.C1HtmlHelper"/> class.
            </summary>
            <param name="helper">The helper.</param>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.PageUrl(Composite.Data.Types.IPage)">
            <summary>
            Returns a URL for a specific C1 page
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.PageUrl(Composite.Data.Types.IPage,System.Object)">
            <summary>
            Returns a URL for a specific C1 page
            </summary>
            <param name="page">The page.</param>
            <param name="querystring">The querystring object.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.PageUrl(Composite.Data.Types.IPage,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Returns a URL for a specific C1 page
            </summary>
            <param name="page">The page.</param>
            <param name="querystring">An object which properties' values will be passes as query string.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.PageUrl(System.String,System.Object)">
            <summary>
            Returns a URL for a specific C1 page
            </summary>
            <param name="pageId">The page id.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.PageUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a URL for a specific C1 page
            </summary>
            <param name="pageId">The page id.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.MediaUrl(Composite.Data.Types.IMediaFile)">
            <summary>
            Returns a media url.
            </summary>
            <param name="mediaFile">The media file.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.MediaUrl(Composite.Data.Types.IMediaFile,System.Object)">
            <summary>
            Returns a media url.
            </summary>
            <param name="mediaFile">The media file.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.MediaUrl(Composite.Data.Types.IMediaFile,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Returns a media url.
            </summary>
            <param name="mediaFile">The media file.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.MediaUrl(System.Guid,System.Object)">
            <summary>
            Returns a media url.
            </summary>
            <param name="mediaId">Id of a media file.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.MediaUrl(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Returns a media url.
            </summary>
            <param name="mediaId">Id of a media file.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.MediaUrl(System.String,System.Object)">
            <summary>
            Returns a media url.
            </summary>
            <param name="keyPath">The keyPath property of a media item.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.MediaUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a media url.
            </summary>
            <param name="keyPath">The keyPath property of a media item.</param>
            <param name="querystring">The querystring.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.Markup(System.Xml.Linq.XNode)">
            <summary>
            Renders the specified XNode.
            </summary>
            <param name="xNode">The <see cref="T:System.Xml.Linq.XNode">XNode</see>.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.GetPageTemplateFeature(System.String)">
            <summary>
            Includes a named Page Template Feature. Page Template Feature are managed in '~/App_Data/PageTemplateFeatures' 
            or via the C1 Console's Layout perspective. They contain html and functional snippets.
            </summary>
            <param name="featureName">Name of the Page Template Feature to include. Names do not include an extension.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.Markup(System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode})">
            <summary>
            Renders the specified XNode-s.
            </summary>
            <param name="xNodes">The collection of <see cref="T:System.Xml.Linq.XNode">XNode</see> objects.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.Function(System.String)">
            <summary>
            Executes a C1 Function.
            </summary>
            <param name="name">Function name.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.Function(System.String,System.Object)">
            <summary>
            Executes a C1 Function.
            </summary>
            <param name="name">Function name.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.C1HtmlHelper.Function(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes a C1 Function.
            </summary>
            <param name="name">Function name.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.AspNet.Razor.HtmlHelperExtensions">
            <summary>
            Add C1 specific extension methods for Razor functions
            </summary>
        </member>
        <member name="M:Composite.AspNet.Razor.HtmlHelperExtensions.C1(System.Web.WebPages.Html.HtmlHelper)">
            <summary>
            Exposes C1 specific functionality
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.AspNet.Razor.NoHttpRazorContext.GetDotNetSpecificVersion">
            <summary>
            Get implementation compatible with current .NET version (4.0 or 4.5)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.AspNet.Security.FileBasedFunctionEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.AspNet.Security.FileBasedFunctionEntityToken.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.AspNet.Security.FileBasedFunctionEntityToken"/> class.
            </summary>
            <param name="functionProviderName">Name of the function provider.</param>
            <param name="functionFullName">Full name of the function.</param>
        </member>
        <member name="M:Composite.AspNet.Security.FileBasedFunctionEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.AspNet.Security.FileBasedFunctionEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.Security.FileBasedFunctionEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.Security.FileBasedFunctionEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.Security.FileBasedFunctionEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.AspNet.Security.FileBasedFunctionEntityToken.FunctionProviderName">
            <summary>
            Gets the name of the function provider.
            </summary>
            <value>
            The name of the function provider.
            </value>
        </member>
        <member name="P:Composite.AspNet.Security.FileBasedFunctionEntityToken.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
            <value>
            The name of the function.
            </value>
        </member>
        <member name="T:Composite.C1Console.Actions.ActionLockingFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ActionLockingFacade.AcquireLock(Composite.C1Console.Security.EntityToken,System.Object)">
            <summary>
            
            </summary>
            <param name="entityToken"></param>
            <param name="ownerId">Should be serializable</param>
        </member>
        <member name="M:Composite.C1Console.Actions.ActionLockingFacade.ChangeLockOwner(Composite.C1Console.Security.EntityToken,System.Object)">
            <summary>
            
            </summary>
            <param name="entityToken"></param>
            <param name="newOwnerId">Should be serializable</param>
        </member>
        <member name="M:Composite.C1Console.Actions.ActionLockingFacade.ReleaseLock(Composite.C1Console.Security.EntityToken,System.Object)">
            <summary>
            
            </summary>
            <param name="entityToken"></param>
            <param name="ownerId">Should be serializable</param>
        </member>
        <member name="M:Composite.C1Console.Actions.ActionLockingFacade.ReleaseAllLocks(System.Object)">
            <summary>
            
            </summary>
            <param name="ownerId">Should be serializable</param>
        </member>
        <member name="M:Composite.C1Console.Actions.ActionLockingFacade.IsLocked(Composite.C1Console.Security.EntityToken)">
            <summary>
            
            </summary>
            <param name="entityToken">Entity token to check if it is locked.</param>
            <returns>True if the given entityToken is locked</returns>
        </member>
        <member name="M:Composite.C1Console.Actions.ActionLockingFacade.LockedBy(Composite.C1Console.Security.EntityToken)">
            <summary>
            
            </summary>
            <param name="entityToken">Entity token to check if it is locked.</param>
            <returns>Returns the name of the user who has locked the given entity token. Null if no one has a lock on it.</returns>
        </member>
        <member name="M:Composite.C1Console.Actions.ActionLockingFacade.RemoveLock(Composite.C1Console.Security.EntityToken)">
            <summary>
            This is a "non-safe" release of a lock. For safe use, use ReleaseLock
            </summary>
            <param name="entityToken"></param>        
        </member>
        <member name="P:Composite.C1Console.Actions.ActionLockingFacade.Locker">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.AddNewTreeRefresher">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.AddNewTreeRefresher.#ctor(Composite.C1Console.Security.EntityToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.AddNewTreeRefresher.PostRefreshMesseges(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.OpenExternalViewQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.IConsoleMessageQueueItem">
            <summary>    
            A message that is send to C1 console client
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.OpenExternalViewQueueItem.#ctor(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.Label">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.IconResourceHandle">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.Url">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.ViewType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenExternalViewQueueItem.UrlPostArguments">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Foundation.UiControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.IUiControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.IUiControl.BindStateToControlProperties">
            <summary>
            When invoked, UiControl Properies that expose bindable data must be updated to reflect user induced state.
            I.e. the Text property of a TextBox UiControl should be assigned the Text property of it's inner control, so
            the Composite.C1Console.Forms Manager can access the users input. 
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.IUiControl.UiControlID">
            <summary>
            UiControls are automatically assigned a unique and permanent UiControlID by the Composite.C1Console.Forms Manager. 
            Use the UiControlID to uniquely identify a UiControl instance between build ups.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.IUiControl.UiControlChannel">
            <summary>
            UiControls are automatically assigned the name of the channel they are executed within. 
            You can use the channel name when compiling embedded forms.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.IUiControl.Label">
            <summary>
            UiControl labels are used by most containers to label the control.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.IUiControl.Help">
            <summary>
            UiControl help strings are used by most containers to add context sensitive help to the control.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.IUiControl.ClientValidationRules">
            <summary>
            UiControls can use these validation rules to perform client side validaion
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.IUiControl.SourceBindingPaths">
            <summary>
            The "path to the source" that is bound to this control - i.e. the value written in the "source" property in the form markup.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.UiControl.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.UiControl.BindStateToControlProperties">
            <summary>
            When invoked, UiControl Properies that expose bindable data must be updated to reflect user induced state.
            I.e. the Text property of a TextBox UiControl should be assigned the Text property of it's inner control, so
            the Composite.C1Console.Forms Manager can access the users input. 
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.UiControl.UiControlID">
            <summary>
            The unique and permanent ID of the UiControl instance.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.UiControl.UiControlChannel">
            <summary>
            The channel name of the UiControl instance.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.UiControl.Label">
            <summary>
            The label of the UiControl. Containers may use this value when applying layout to a list of UiControls.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.UiControl.Help">
            <summary>
            Short context sensitive help relevant to the control.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.UiControl.ClientValidationRules">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.UiControl.SourceBindingPaths">
            <summary>
            A (short) message to the user relating to this control, typically information about missing or 
            bad input.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Actions.IFlowControllerService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.IActionExecutor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.IActionExecutor.Execute(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.ActionToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ActionToken.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ActionToken.PermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ActionToken.IgnoreEntityTokenLocking">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.InlineScriptActionFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.InlineScriptActionFacade.GetInlineElementActionScriptCode(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.InlineScriptActionFacade.GetInlineElementActionScriptCode(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.InlineScriptActionFacade.ExecuteElementScriptAction(System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementActionActivePosition">
            <summary>    
            Where an action should be shown visually. One or more may be selected.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ElementActionActivePosition.NavigatorTree">
            <summary>
            Available in the C1 Consoles default navigation tree.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ElementActionActivePosition.SelectorTree">
            <summary>
            Available in trees used for item selection (typically shown via pop ups).
            </summary>
        </member>
        <member name="T:Composite.C1Console.Events.SelectElementQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.SelectElementQueueItem.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.IValidatingUiControl">
            <summary>
            UiControls can be in a situation where user input can not be converted to the type the control is binding to. 
            Rather than throwing an exception, the control can declare that is is in an invalid state and give a message. 
            This allow the core to abort saving etc. 
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.IValidatingUiControl.IsValid">
            <summary>
            This field declare is your control is in a valid state. 
            If this returns true, actions like Save and Preview will be canceled.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.IValidatingUiControl.ValidationError">
            <summary>
            When in an invalid state this field is expected to describe the reason for this invalid state. The text is intended
            for the end-user and should explain what they did wrong, like "Date format is invalid, use 'yyyy-mm-dd'".
            </summary>
        </member>
        <member name="T:Composite.C1Console.Forms.ReadBindingControlValueOverload">
            <summary>
            If the "inner value" is a bindings read, then this defines an property that will be assigned to.
            This is an overload/special case handling of <see cref="T:Composite.C1Console.Forms.ControlValuePropertyAttribute"/>
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.LoginResult">
            <summary>
            Describing the result of a login validation
            </summary>
        </member>
        <member name="F:Composite.C1Console.Security.LoginResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Composite.C1Console.Security.LoginResult.IncorrectPassword">
            <summary>
            Incorrect password
            </summary>
        </member>
        <member name="F:Composite.C1Console.Security.LoginResult.UserDoesNotExist">
            <summary>
            User does not exist
            </summary>
        </member>
        <member name="F:Composite.C1Console.Security.LoginResult.PolicyViolated">
            <summary>
            Login policy violated
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.PermissionsFacade">
            <summary>
            This class can be use to get allowed permissions for current user or given UserToken and an EntityToken.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Security.PermissionsFacade.GetPermissionsForCurrentUser(Composite.C1Console.Security.EntityToken)">
            <summary>
            This method will return all allowed permission for the current logged in user given the <paramref name="entityToken"/>.
            </summary>
            <param name="entityToken">EntityToken to get permissions for.</param>
            <returns>Allowed permission types</returns>
        </member>
        <member name="M:Composite.C1Console.Security.PermissionsFacade.GetPermissions(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.EntityToken)">
            <summary>
            This method will return all allowed permission for the given <paramref name="userToken"/> and given the <paramref name="entityToken"/>.
            </summary>
            <param name="userToken">UserToken to get permissions for.</param>
            <param name="entityToken">EntityToken to get permissions for.</param>
            <returns>Allowed permission types</returns>
        </member>
        <member name="M:Composite.C1Console.Security.PermissionsFacade.IsAdministrator(System.String)">
            <summary>
            This method returns true if the given username <paramref name="username"/> has admin rights on the root element.
            This is normal way of creating a administrator in C1.
            </summary>
            <param name="username">Username to test</param>
            <returns>True if the given username has admin rights on the root element.</returns>
        </member>
        <member name="T:Composite.Core.Application.GlobalFileLocker">
            <summary>
            This class enables cross app domain/process locking using a file.
            </summary>
        </member>
        <member name="M:Composite.Core.Application.GlobalFileLocker.#ctor(System.String,System.String)">
            <summary>
            </summary>
            <param name="id">The id is used as part of a filename, so it should only contain file name valid chars.</param>
            <param name="folderPath">Default is temp directory.</param>
        </member>
        <member name="M:Composite.Core.Application.GlobalFileLocker.AquireLock(System.Int32,System.Boolean)">
            <summary>
            Consider using the <see cref="P:Composite.Core.Application.GlobalFileLocker.Lock"/> for better code safty
            </summary>
            <param name="retryCount"></param>
            <param name="thrownOnFail"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Application.GlobalFileLocker.ReleaseLock">
            <summary>
            Consider using the <see cref="P:Composite.Core.Application.GlobalFileLocker.Lock"/> for better code safty
            </summary>
        </member>
        <member name="P:Composite.Core.Application.GlobalFileLocker.LockTimeOut">
            <summary>
            Time out in seconds. Default is 5 secounds.
            </summary>
        </member>
        <member name="P:Composite.Core.Application.GlobalFileLocker.Lock">
            <summary>
            </summary>
        </member>
        <member name="T:Composite.Core.Application.GlobalFileLocker.DisposableLock">
            <summary>
            Used for implementing the disposable pattern for <see cref="T:Composite.Core.Application.GlobalFileLocker"/>
            </summary>
        </member>
        <member name="T:Composite.Core.Application.SystemGlobalSemaphore">
            <summary>
            This is a OS sytem wide named semaphore.
            </summary>
        </member>
        <member name="M:Composite.Core.Application.SystemGlobalSemaphore.#ctor(System.String)">
            <summary>
            </summary>
            <param name="id">The system wide id of the semaphore</param>
        </member>
        <member name="M:Composite.Core.Application.SystemGlobalSemaphore.Enter(System.Int32,System.Boolean)">
            <summary>
            Enter the semaphore. Blocking. Returns false if entering the semaphore failed due to timeout.
            </summary>
            <param name="timeout">Timeout in milliseconds</param>
            <param name="throwOnTimeout">If this is true, the method will throw an excepion on timeout</param>
            <returns>True if entering successed. False if entering timed out.</returns>
        </member>
        <member name="M:Composite.Core.Application.SystemGlobalSemaphore.Leave">
            <summary>
            Leave the semaphore.
            </summary>
        </member>
        <member name="P:Composite.Core.Application.SystemGlobalSemaphore.Id">
            <summary>
            The used id used for naming the semaphore.
            </summary>
        </member>
        <member name="T:Composite.Core.Configuration.C1Configuration">
            <summary>
            This class is a almost one to one version of System.Configuration.Configuration. Using this implementation instead 
            of System.Configuration.Configuration, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.Configuration.Configuration for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1Configuration"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.ImplementationContainer`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.#ctor(System.String)">
            <summary>
            Creates a C1Configuration
            </summary>
            <param name="path">Path to configuration file.</param>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.GetSection(System.String)">
            <summary>
            Gets a named configuration section.
            </summary>
            <param name="sectionName">Name of section to get.</param>
            <returns>Returns the configuration section.</returns>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.GetSectionGroup(System.String)">
            <summary>
            Gets a named configuration section group.
            </summary>
            <param name="sectionGroupName">Name of configuration section group to get.</param>
            <returns>Returns the configuration section group.</returns>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.Save">
            <summary>
            Saves the configuration.
            </summary>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.Save(System.Configuration.ConfigurationSaveMode)">
            <summary>
            Saves the configuration.
            </summary>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            Saves the configuration.
            </summary>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
            <param name="forceSaveAll">Saves all sections, even non touched.</param>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.SaveAs(System.String)">
            <summary>
            Saves the configuration to a new file.
            </summary>
            <param name="filename">Path to new configuration filename.</param>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>
            Saves the configuration to a new file.
            </summary>
            <param name="filename">Path to new configuration filename.</param>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
        </member>
        <member name="M:Composite.Core.Configuration.C1Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            Saves the configuration to a new file.
            </summary>
            <param name="filename">Path to new configuration filename.</param>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
            <param name="forceSaveAll">Saves all sections, even non touched.</param>
        </member>
        <member name="P:Composite.Core.Configuration.C1Configuration.FilePath">
            <summary>
            Gets the path to the configuration file.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.C1Configuration.HasFile">
            <summary>
            Returns true if the configuration file exists.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.C1Configuration.AppSettings">
            <summary>
            Returns the app setttings section.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.C1Configuration.ConnectionStrings">
            <summary>
            Returns the connection string section.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.C1Configuration.Sections">
            <summary>
            Returns the configuration sections.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.C1Configuration.RootSectionGroup">
            <summary>
            Returns the configuration section group.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.C1Configuration.SectionGroups">
            <summary>
            Returns the configuration slection groups.
            </summary>
        </member>
        <member name="T:Composite.Core.Configuration.FileConfigurationSource">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="T:Composite.Core.Configuration.FileConfigurationSourceImplementation">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="T:Composite.Core.Extensions.PageUrlDataExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.PageUrlDataExtensionMethods.GetPage(Composite.Core.Routing.PageUrlData)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Implementation.C1ConfigurationImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.#ctor(System.String)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.GetSection(System.String)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="sectionName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.GetSectionGroup(System.String)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="sectionGroupName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.Save">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.Save(System.Configuration.ConfigurationSaveMode)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="saveMode"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="saveMode"></param>
            <param name="forceSaveAll"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.SaveAs(System.String)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="fileName"></param>
            <param name="saveMode"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1ConfigurationImplementation.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
            <param name="fileName"></param>
            <param name="saveMode"></param>
            <param name="forceSaveAll"></param>
        </member>
        <member name="P:Composite.Core.Implementation.C1ConfigurationImplementation.FilePath">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1ConfigurationImplementation.HasFile">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1ConfigurationImplementation.AppSettings">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1ConfigurationImplementation.ConnectionStrings">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1ConfigurationImplementation.Sections">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1ConfigurationImplementation.RootSectionGroup">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1ConfigurationImplementation.SectionGroups">
            <summary>
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.C1DirectoryImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.CreateDirectory(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.Move(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="sourceDirName"></param>
            <param name="destinationDirName"></param>        
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.Delete(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.Delete(System.String,System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <param name="recursive"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.Exists(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetCurrentDirectory">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.SetCurrentDirectory(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetParent(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetDirectoryRoot(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetDirectories(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetDirectories(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <param name="searchPattern"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetDirectories(System.String,System.String,System.IO.SearchOption)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <param name="searchPattern"></param>
            <param name="searchOption"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetFiles(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetFiles(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <param name="searchPattern"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <param name="searchPattern"></param>
            <param name="searchOption"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetCreationTime(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryImplementation.GetCreationTimeUtc(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1Directory"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Implementation.C1DirectoryInfoImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.#ctor(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.GetDirectories">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.GetDirectories(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="searchPattern"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.GetDirectories(System.String,System.IO.SearchOption)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="searchPattern"></param>
            <param name="searchOption"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.GetFiles">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.GetFiles(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="searchPattern"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.GetFiles(System.String,System.IO.SearchOption)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="searchPattern"></param>
            <param name="searchOption"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.Create">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.CreateSubdirectory(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.MoveTo(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="destinationDirName"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.Delete">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.Delete(System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
            <param name="recursive"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1DirectoryInfoImplementation.Refresh">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.Name">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.FullName">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.Extension">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.Exists">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.Root">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.Parent">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.Attributes">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.CreationTime">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.CreationTimeUtc">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.LastAccessTime">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.LastAccessTimeUtc">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.LastWriteTime">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1DirectoryInfoImplementation.LastWriteTimeUtc">
            <summary>
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.C1FileImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Exists(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Touch(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Copy(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="sourceFileName"></param>
            <param name="destinationFileName"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Copy(System.String,System.String,System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="sourceFileName"></param>
            <param name="destinationFileName"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Move(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="sourceFileName"></param>
            <param name="destinationFileName"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Replace(System.String,System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="sourceFileName"></param>
            <param name="destinationFileName"></param>
            <param name="destinationBackupFileName"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Replace(System.String,System.String,System.String,System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="sourceFileName"></param>
            <param name="destinationFileName"></param>
            <param name="destinationBackupFileName"></param>
            <param name="ignoreMetadataErrors"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Delete(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Create(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Create(System.String,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="bufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Create(System.String,System.Int32,System.IO.FileOptions)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="bufferSize"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.CreateText(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.AppendText(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.AppendAllText(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Open(System.String,System.IO.FileMode)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
            <param name="access"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
            <param name="access"></param>
            <param name="share"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.OpenRead(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.OpenText(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.OpenWrite(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.ReadAllBytes(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.ReadAllLines(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.ReadAllText(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.ReadLines(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="bytes"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.WriteAllLines(System.String,System.String[])">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.WriteAllText(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.GetAttributes(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.SetAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="fileAttributes"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.GetCreationTime(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.GetCreationTimeUtc(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.SetCreationTime(System.String,System.DateTime)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="creationTime"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.SetCreationTimeUtc(System.String,System.DateTime)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="creationTimeUtc"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.GetLastAccessTime(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.GetLastAccessTimeUtc(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.SetLastAccessTime(System.String,System.DateTime)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="lastAccessTime"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="lastAccessTimeUtc"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.GetLastWriteTime(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.GetLastWriteTimeUtc(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.SetLastWriteTime(System.String,System.DateTime)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="lastWriteTime"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileImplementation.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1File"/>.
            </summary>
            <param name="path"></param>
            <param name="lastWriteTimeUtc"></param>
        </member>
        <member name="T:Composite.Core.Implementation.C1FileInfoImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.#ctor(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Create">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.CreateText">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.AppendText">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Open(System.IO.FileMode)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Open(System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="mode"></param>
            <param name="access"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="mode"></param>
            <param name="access"></param>
            <param name="share"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.OpenRead">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.OpenText">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.OpenWrite">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.CopyTo(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="destinationFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.CopyTo(System.String,System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="destinationFileName"></param>
            <param name="overwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.MoveTo(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="destinationFileName"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Replace(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="destinationFileName"></param>
            <param name="destinationBackupFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Replace(System.String,System.String,System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="destinationFileName"></param>
            <param name="destinationBackupFileName"></param>
            <param name="ignoreMetadataErrors"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Delete">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.Refresh">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileInfoImplementation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.DirectoryName">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.Directory">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.Name">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.FullName">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.Exists">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.Extension">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.IsReadOnly">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.Length">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.Attributes">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.CreationTime">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.CreationTimeUtc">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.LastAccessTime">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.LastAccessTimeUtc">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.LastWriteTime">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileInfoImplementation.LastWriteTimeUtc">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.C1FileStreamImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
            <param name="access"></param>
            <param name="share"></param>
            <param name="bufferSize"></param>
            <param name="options"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.SetLength(System.Int64)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="array"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.ReadByte">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="array"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.WriteByte(System.Byte)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="offset"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Flush">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Flush(System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="flushToDisk"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Close">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Dispose">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Finalize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.C1FileStreamImplementation.Dispose(System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Implementation.C1FileStreamImplementation.Name">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileStreamImplementation.Length">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileStreamImplementation.Position">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileStreamImplementation.CanRead">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileStreamImplementation.CanSeek">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileStreamImplementation.CanWrite">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.C1FileSystemWatcherImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileSystemWatcherImplementation.#ctor(System.String,System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
            <param name="path"></param>
            <param name="filter"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileSystemWatcherImplementation.BeginInit">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileSystemWatcherImplementation.EndInit">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileSystemWatcherImplementation.WaitForChanged(System.IO.WatcherChangeTypes)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
            <param name="changeType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1FileSystemWatcherImplementation.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
            <param name="changeType"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileSystemWatcherImplementation.EnableRaisingEvents">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileSystemWatcherImplementation.Path">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileSystemWatcherImplementation.Filter">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileSystemWatcherImplementation.IncludeSubdirectories">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.C1FileSystemWatcherImplementation.Created">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.C1FileSystemWatcherImplementation.Changed">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.C1FileSystemWatcherImplementation.Renamed">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.C1FileSystemWatcherImplementation.Deleted">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.C1FileSystemWatcherImplementation.Error">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1FileSystemWatcherImplementation.NotifyFilter">
            <summary>
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.C1StreamReaderImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <param name="detectEncodingFromByteOrderMarks"></param>
            <param name="bufferSize"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
            <param name="detectEncodingFromByteOrderMarks"></param>
            <param name="bufferSize"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.Read">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.ReadLine">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.ReadToEnd">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.ReadBlock(System.Char[],System.Int32,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.Peek">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.Close">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.Dispose">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.Finalize">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamReaderImplementation.Dispose(System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamReaderImplementation.EndOfStream">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamReaderImplementation.BaseStream">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamReaderImplementation.CurrentEncoding">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.C1StreamWriterImplementation">
            <summary>
            Implementation of <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="path"></param>
            <param name="append"></param>
            <param name="encoding"></param>
            <param name="bufferSize"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
            <param name="bufferSize"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.String,System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.String,System.Object,System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.String,System.Object[])">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Char)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Char[])">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.UInt32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Int64)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.UInt64)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Single)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Double)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Decimal)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Write(System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.String)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.String,System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.String,System.Object[])">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="format"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Char)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Char[])">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Int32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.UInt32)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Int64)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.UInt64)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Single)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Double)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Decimal)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.WriteLine(System.Object)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Flush">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Close">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Dispose">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Finalize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.C1StreamWriterImplementation.Dispose(System.Boolean)">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamWriterImplementation.NewLine">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamWriterImplementation.FormatProvider">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamWriterImplementation.AutoFlush">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamWriterImplementation.BaseStream">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.C1StreamWriterImplementation.Encoding">
            <summary>
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.DataConnectionBase">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionBase.InitializeScope">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionBase.InitializeScope(Composite.Data.PublicationScope,System.Globalization.CultureInfo)">
            <summary>
            Documentation pending
            </summary>
            <param name="scope"></param>
            <param name="locale"></param>
        </member>
        <member name="P:Composite.Core.Implementation.DataConnectionBase.PublicationScope">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.DataConnectionBase.DataScopeIdentifier">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.DataConnectionBase.Locale">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.DataConnectionImplementation">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.#ctor">
            <summary>
            Stateless constructor. This is used when implementations of static methods needs to be called
            Used when New and AllLocales are called
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.#ctor(Composite.Data.PublicationScope,System.Globalization.CultureInfo)">
            <summary>
            Documentation pending
            </summary>
            <param name="scope"></param>
            <param name="locale"></param>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Get``1">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Add``1(``0)">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Add``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Update``1(``0)">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="item"></param>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Update``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="items"></param>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Delete``1(``0)">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="item"></param>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <param name="items"></param>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.New``1">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="TData"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Dispose">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Finalize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.DataConnectionImplementation.Dispose(System.Boolean)">
            <summary>
            Documentation pending
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Composite.Core.Implementation.DataConnectionImplementation.CurrentPublicationScope">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.DataConnectionImplementation.CurrentLocale">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.DataConnectionImplementation.AllLocales">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.DataEventsImplementation`1">
            <summary>
            Implementation pending
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="E:Composite.Core.Implementation.DataEventsImplementation`1.OnBeforeAdd">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.DataEventsImplementation`1.OnAfterAdd">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.DataEventsImplementation`1.OnBeforeUpdate">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.DataEventsImplementation`1.OnAfterUpdate">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.DataEventsImplementation`1.OnDeleted">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.DataEventsImplementation`1.OnStoreChanged">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="E:Composite.Core.Implementation.DataEventsImplementation`1.OnNew">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.ImplementationFactory">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateDataConnection(System.Nullable{Composite.Data.PublicationScope},System.Globalization.CultureInfo)">
            <summary>
            Documentation pending
            </summary>
            <param name="scope"></param>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateStatelessDataEvents``1">
            <summary>
            Documentation pending
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateSitemapNavigator(Composite.Data.DataConnection)">
            <summary>
            Documentation pending
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.ResolvePublicationScope(System.Nullable{Composite.Data.PublicationScope})">
            <summary>
            Documentation pending
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.ResolveLocale(System.Globalization.CultureInfo)">
            <summary>
            Documentation pending
            </summary>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1FileInfo(System.String)">
            <summary>
            Documentation pending
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1DirectoryInfo(System.String)">
            <summary>
            Documentation pending
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1FileStream(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>
            Documentation pending
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
            <param name="access"></param>
            <param name="share"></param>
            <param name="bufferSize"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1FileSystemWatcher(System.String,System.String)">
            <summary>
            Documentation pending
            </summary>
            <param name="path"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1StreamReader(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Documentation pending
            </summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <param name="detectEncodingFromByteOrderMarks"></param>
            <param name="bufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1StreamReader(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Documentation pending
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
            <param name="detectEncodingFromByteOrderMarks"></param>
            <param name="bufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1StreamWriter(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
            <summary>
            Documentation pending
            </summary>
            <param name="path"></param>
            <param name="append"></param>
            <param name="encoding"></param>
            <param name="bufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1StreamWriter(System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>
            Documentation pending
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
            <param name="bufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.ImplementationFactory.CreateC1Configuration(System.String)">
            <summary>
            Documentation pending
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.CurrentFactory">
            <summary>
            Use this to change the current factory;
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.StatelessLog">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.StatelessDataConnection">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.StatelessSitemapNavigator">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.StatelessC1Directory">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.StatelessC1File">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.StatelessPackageLicenseHelper">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.ImplementationFactory.StatelessPackageUtils">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="T:Composite.Core.Implementation.LogImplementation">
            <summary>
            Implementation pending
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.#ctor">
            <summary>
            Stateless constructor. This is used when implementations of static methods needs to be called        
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogInformation(System.String,System.String)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="message"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogInformation(System.String,System.String,System.Object[])">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogVerbose(System.String,System.String)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="message"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogVerbose(System.String,System.String,System.Object[])">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogWarning(System.String,System.String)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="message"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogWarning(System.String,System.String,System.Object[])">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogWarning(System.String,System.Exception)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogError(System.String,System.String)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="message"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogError(System.String,System.String,System.Object[])">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogError(System.String,System.Exception)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogCritical(System.String,System.String)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="message"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogCritical(System.String,System.String,System.Object[])">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Composite.Core.Implementation.LogImplementation.LogCritical(System.String,System.Exception)">
            <summary>
            Implementation pending
            </summary>
            <param name="title"></param>
            <param name="exception"></param>
        </member>
        <member name="T:Composite.Core.Implementation.PackageLicenseHelperImplementation">
            <summary>
            This is the default implementation of PackageLicenseHelper <see cref="T:Composite.Core.PackageSystem.PackageLicenseHelper"/>
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.PackageLicenseHelperImplementation.GetLicenseDefinition(System.Guid)">
            <summary>
            <see cref="T:Composite.Core.PackageSystem.PackageLicenseHelper"/>
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.PackageLicenseHelperImplementation.StoreLicenseDefinition(Composite.Core.PackageSystem.PackageLicenseDefinition)">
            <summary>
            <see cref="T:Composite.Core.PackageSystem.PackageLicenseHelper"/>
            </summary>
            <param name="licenseDefinition"></param>
        </member>
        <member name="M:Composite.Core.Implementation.PackageLicenseHelperImplementation.RemoveLicenseDefinition(System.Guid)">
            <summary>
            <see cref="T:Composite.Core.PackageSystem.PackageLicenseHelper"/>
            </summary>
            <param name="productId"></param>
        </member>
        <member name="M:Composite.Core.Implementation.PackageLicenseHelperImplementation.CreateSignatureHashAlgorithm(System.String)">
            <summary>
            <see cref="T:Composite.Core.PackageSystem.PackageLicenseHelper"/>
            </summary>
            <param name="publicKeyXml"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.PackageLicenseHelperImplementation.GetLicenseKeyBytes(System.String)">
            <summary>
            <see cref="T:Composite.Core.PackageSystem.PackageLicenseHelper"/>
            </summary>
            <param name="licenseKey"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.PackageLicenseHelperImplementation.CreateSignatureBytes(System.String)">
            <summary>
            <see cref="T:Composite.Core.PackageSystem.PackageLicenseHelper"/>
            </summary>
            <param name="signatureString"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Implementation.PackageUtilsImplementation">
            <summary>
            This is the default implementaion for PackageUtils <see cref="T:Composite.Core.PackageSystem.PackageUtils"/>
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.PackageUtilsImplementation.GetInstalledPackageEntityToken(System.Guid,System.String)">
            <summary>
            </summary>
            <param name="packageId"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Implementation.PageDataConnectionImplementation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.PageDataConnectionImplementation.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.PageDataConnectionImplementation.#ctor(Composite.Data.PublicationScope,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.PageDataConnectionImplementation.Dispose">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.PageDataConnectionImplementation.Finalize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Implementation.PageDataConnectionImplementation.Dispose(System.Boolean)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Implementation.SitemapNavigatorImplementation">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.SitemapNavigatorImplementation.#ctor">
            <summary>
            Stateless constructor. This is used when implementations of static methods needs to be called
            Used when CurrentPageId and CurrentHomePageId are called
            </summary>
        </member>
        <member name="M:Composite.Core.Implementation.SitemapNavigatorImplementation.#ctor(Composite.Data.DataConnection)">
            <summary>
            Documentation pending
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Composite.Core.Implementation.SitemapNavigatorImplementation.GetPageNodeById(System.Guid)">
            <summary>
            Documentation pending
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Implementation.SitemapNavigatorImplementation.GetPageNodeByHostname(System.String)">
            <summary>
            Documentation pending
            </summary>
            <param name="hostname"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.HomePageNodes">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.HomePageIds">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.CurrentPageNode">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.CurrentHomePageNode">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.AllSitemapsXml">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.SitemapXml">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.CurrentPageId">
            <summary>
            Documentation pending
            </summary>
        </member>
        <member name="P:Composite.Core.Implementation.SitemapNavigatorImplementation.CurrentHomePageId">
            <summary>        
            Documentation pending
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1Directory">
            <summary>
            This class is a almost one to one version of System.IO.Directory. Using this implementation instead 
            of System.IO.Directory, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.Directory for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1Directory"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.CreateDirectory(System.String)">
            <summary>
            Creates a directory.
            </summary>
            <param name="path">Path to directory to create.</param>
            <returns>Returns a C1DirectoryInfo to the specified path.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.Move(System.String,System.String)">
            <summary>
            Moves a file or directory from the given source path to the given destination path.
            </summary>
            <param name="sourceDirName">Path of file or directory to move.</param>
            <param name="destDirName">Target path of file or directory to be moved to.</param>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.Delete(System.String)">
            <summary>
            Deletes an empty directory on the given path.
            </summary>
            <param name="path">Path of empty directory to delete.</param>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.Delete(System.String,System.Boolean)">
            <summary>
            Deletes the directory and if specified subdirectories and file on the given path.
            </summary>
            <param name="path">Path of directory to delete.</param>
            <param name="recursive">Include subdirectories and files.</param>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.Exists(System.String)">
            <summary>
            Determines if the directory in the given path exists or not.
            </summary>
            <param name="path">Path to directory to test.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetCurrentDirectory">
            <summary>
            Returns the current directory.
            </summary>
            <returns>The current directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.SetCurrentDirectory(System.String)">
            <summary>
            Sets the current directory
            </summary>
            <param name="path">Path to new current directory.</param>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetParent(System.String)">
            <summary>
            Gets the parent of the given directory.
            </summary>
            <param name="path">Path of directory to get parent of.</param>
            <returns>The parent of the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetDirectoryRoot(System.String)">
            <summary>
            Returns volume and/or root information of the given directory.
            </summary>
            <param name="path">Path of directory to get root information of.</param>
            <returns>Volume and/or root information.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetDirectories(System.String)">
            <summary>
            Gets the subdirectories of the given directory.
            </summary>
            <param name="path">Path to directory to get subdirectories.</param>
            <returns>Subdirectories of the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetDirectories(System.String,System.String)">
            <summary>
            Gets the subdirectories of the given directory with the given search pattern.
            </summary>
            <param name="path">Path to directory to get subdirectories.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <returns>Subdirectories of the given directory with the given search parrern.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets the subdirectories of the given directory with the given search pattern and options.
            </summary>
            <param name="path">Path to directory to get subdirectories.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <param name="searchOption">Search options to use.</param>
            <returns>Subdirectories of the given directory with the given search parrern and options.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetFiles(System.String)">
            <summary>
            Gets the files in the given directory.
            </summary>
            <param name="path">Path to directory go get files from.</param>
            <returns>Files in the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetFiles(System.String,System.String)">
            <summary>
            Gets the files in the given directory with the given search pattern.
            </summary>
            <param name="path">Path to directory go get files from.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <returns>Files in the given directory with the given search pattern.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets the files in the given directory with the given search pattern and options.
            </summary>
            <param name="path">Path to directory go get files from.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <param name="searchOption">Search options to use.</param>
            <returns>Files in the given directory with the given search pattern and options.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetCreationTime(System.String)">
            <summary>
            Returns the creation date and time of the given directory.
            </summary>
            <param name="path">Path of directory.</param>
            <returns>Creation date and time of the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1Directory.GetCreationTimeUtc(System.String)">
            <summary>
            Returns the creation date and utc time of the given directory.
            </summary>
            <param name="path">Path of directory.</param>
            <returns>Creation date and time of the given directory.</returns>
        </member>
        <member name="T:Composite.Core.IO.C1DirectoryInfo">
            <summary>
            This class is a almost one to one version of System.IO.DirectoryInfo. Using this implementation instead 
            of System.IO.DirectoryInfo, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.DirectoryInfo for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo"/>. 
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1FileSystemInfo">
            <summary>
            This class is a almost one to one version of System.IO.FileSystemInfo. Using this implementation instead 
            of System.IO.FileSystemInfo, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.FileSystemInfo for more documentation on the methods of this class.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemInfo.Delete">
            <summary>
            Deletes the file system item.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemInfo.Refresh">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.FullName">
            <summary>
            Full path name.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.Extension">
            <summary>
            Extension.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.Exists">
            <summary>
            Returns true if the file system item exitst.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.Attributes">
            <summary>
            File attributes of the file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.CreationTime">
            <summary>
            Gets or sets the creation time of the file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.CreationTimeUtc">
            <summary>
            Gets or sets the creation utc time of the file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.LastAccessTime">
            <summary>
            Gets or sets the last access time of the file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.LastAccessTimeUtc">
            <summary>
            Gets or sets the last access utc time of the file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.LastWriteTime">
            <summary>
            Gets or sets the last write time of the file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemInfo.LastWriteTimeUtc">
            <summary>
            Gets or sets the last write utc time of the file system item.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.#ctor(System.String)">
            <summary>
            Creates and initialize a new C1DirectoryInfo.
            </summary>
            <param name="path">Path to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.GetDirectories">
            <summary>
            Returns the subdirectories of the directory.
            </summary>
            <returns>Subdirectories of the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.GetDirectories(System.String)">
            <summary>
            Returns the subdirectores of the directory given the search pattern.
            </summary>
            <param name="searchPattern">Search pattern to use.</param>
            <returns>Subdirectories of the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
            <summary>
            Returns the subdirectores of the directory given the search pattern and options.
            </summary>
            <param name="searchPattern">The search pattern to use.</param>
            <param name="searchOption">The search options to use.</param>
            <returns>Subdirectories of the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.GetFiles">
            <summary>
            Returns the files in the directory.
            </summary>
            <returns>Files in the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.GetFiles(System.String)">
            <summary>
            Returns the files in the directory given the search pattern.
            </summary>
            <param name="searchPattern">The search pattern to use.</param>
            <returns>Files in the directory given the search pattern.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
            <summary>
            Returns the files in the directory given the search pattern and options.
            </summary>
            <param name="searchPattern">The search pattern to use.</param>
            <param name="searchOption">The search options to use.</param>
            <returns>Files in the directory given the search pattern and options.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.Create">
            <summary>
            Creates the directory.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.CreateSubdirectory(System.String)">
            <summary>
            Creates a subdirectory.
            </summary>
            <param name="path">Path to directory to create.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.MoveTo(System.String)">
            <summary>
            Moves the directory to the given path.
            </summary>
            <param name="destDirName">Destination directory name.</param>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.Delete">
            <summary>
            Deletes the directory if empty.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.Delete(System.Boolean)">
            <summary>
            Deletes the directory, files and subdirectories if specified.
            </summary>
            <param name="recursive">If true, a recursive delete will be performced.</param>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1DirectoryInfo.Refresh">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.Name">
            <summary>
            The name of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.FullName">
            <summary>
            Full path of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.Extension">
            <summary>
            The extension of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.Exists">
            <summary>
            Tells if the directory exists or not.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.Root">
            <summary>
            The root directory of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.Parent">
            <summary>
            The parent directory of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.Attributes">
            <summary>
            File attributes of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.CreationTime">
            <summary>
            The creation time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.CreationTimeUtc">
            <summary>
            The creation utc time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.LastAccessTime">
            <summary>
            Last access time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.LastAccessTimeUtc">
            <summary>
            Last access utc time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.LastWriteTime">
            <summary>
            Last write time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1DirectoryInfo.LastWriteTimeUtc">
            <summary>
            Last write utc time of the directory.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1File">
            <summary>
            This class is a almost one to one version of System.IO.File. Using this implementation instead 
            of System.IO.File, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.File for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1File"/>. 
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1File.Exists(System.String)">
            <summary>
            Determins if the given file exists or not.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>Returns true if the file exists, false if not.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.Touch(System.String)">
            <summary>
            This is not a port of the System.IO.File. This method can be used to 'touch' an
            existing file. This is a way of telling the C1 IO system that the file has been 
            touched and C1 uses this to handle other than standard Windows deployments, like
            Windows Azure.
            </summary>
            <param name="path">Path to file to touch.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Copy(System.String,System.String)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFileName">Source path of file to copy.</param>
            <param name="destFileName">Target path of the file to be copied to.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Copy(System.String,System.String,System.Boolean)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFileName">Source path of file to copy.</param>
            <param name="destFileName">Target path of the file to be copied to.</param>
            <param name="overwrite">If this is true and the target path exists, it will be overwritten without any exceptions.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Move(System.String,System.String)">
            <summary>
            Moves a file.
            </summary>
            <param name="sourceFileName">Path of file to move.</param>
            <param name="destFileName">Destination path to move the file to.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Replace(System.String,System.String,System.String)">
            <summary>
            Replace a file with another file.
            </summary>
            <param name="sourceFileName">Path to source file.</param>
            <param name="destinationFileName">Path to file to replace.</param>
            <param name="destinationBackupFileName"></param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Replace(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Replace a file with another file.
            </summary>
            <param name="sourceFileName">Path to source file.</param>
            <param name="destinationFileName">Path to file to replace.</param>
            <param name="destinationBackupFileName"></param>
            <param name="ignoreMetadataErrors"></param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Delete(System.String)">
            <summary>
            Deletes the given file.
            </summary>
            <param name="path">Path to file to delete.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Create(System.String)">
            <summary>
            Creates a new file and returns a file stream to it <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1FileStream"/> stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.Create(System.String,System.Int32)">
            <summary>
            Creates a new file and returns a file stream to it <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <param name="bufferSize">Buffer size of returned stream.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1FileStream"/> stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.Create(System.String,System.Int32,System.IO.FileOptions)">
            <summary>
            Creates a new file and returns a file stream to it <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <param name="bufferSize">Buffer size of returned stream.</param>
            <param name="options">File options of returned stream.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1FileStream"/> stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.CreateText(System.String)">
            <summary>
            Creates a new file and returns a stream writer to it <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.AppendText(System.String)">
            <summary>
            Opens a <see cref="T:Composite.Core.IO.C1StreamWriter"/> for appending.
            </summary>
            <param name="path">Path to file to append to.</param>
            <returns>Returns the newly opned <see cref="T:Composite.Core.IO.C1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.AppendAllText(System.String,System.String)">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>        
        </member>
        <member name="M:Composite.Core.IO.C1File.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>        
            <param name="encoding">Encoding to use when appending.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>        
            <param name="encoding">Encoding to use when appending.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.Open(System.String,System.IO.FileMode)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <param name="mode">File mode to use.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.OpenRead(System.String)">
            <summary>
            Opens a file for reading.
            </summary>
            <param name="path">Path to file to open.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.OpenText(System.String)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1StreamReader"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.OpenWrite(System.String)">
            <summary>
            Opens a file for writing.
            </summary>
            <param name="path">Path to file to open.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.ReadAllBytes(System.String)">
            <summary>
            Read all bytes from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>Returns read bytes.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.ReadAllLines(System.String)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>Returns read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <returns>Returns read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.ReadAllText(System.String)">
            <summary>
            Read all text from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>The content of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Read all text from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <returns>The content of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.ReadLines(System.String)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>Returns all read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <returns>Returns all read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Writes bytes to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="bytes">Bytes to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.WriteAllLines(System.String,System.String[])">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
            <param name="encoding">Encoding to use when writing.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
            <param name="encoding">Encoding to use when writing.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.WriteAllText(System.String,System.String)">
            <summary>
            Writes text to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Text to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes text to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Text to write.</param>
            <param name="encoding">Encoding to use when writing.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.GetAttributes(System.String)">
            <summary>
            Gets the file attributes.
            </summary>
            <param name="path">Path to file to get attributes from.</param>
            <returns>Returns the file attributes. See System.IO.FileAttributes</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.SetAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            Sets the file attributes.
            </summary>
            <param name="path">Path to file to set attributes on.</param>
            <param name="fileAttributes">File attributes to set.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.GetCreationTime(System.String)">
            <summary>
            Gets the creation time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the creation time of the given file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.GetCreationTimeUtc(System.String)">
            <summary>
            Gets the creation utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the creation utc time of the given file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.SetCreationTime(System.String,System.DateTime)">
            <summary>
            Sets the creation time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="creationTime">New creation time.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.SetCreationTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the creation utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="creationTimeUtc">New creation utc time.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.GetLastAccessTime(System.String)">
            <summary>
            Gets the last access time.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last access time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.GetLastAccessTimeUtc(System.String)">
            <summary>
            Gets the last access utc time.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last access utc time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.SetLastAccessTime(System.String,System.DateTime)">
            <summary>
            Sets the last access time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastAccessTime">New last access time.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the last access utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastAccessTimeUtc">New last access utc time.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.GetLastWriteTime(System.String)">
            <summary>
            Get last write time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last write time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.GetLastWriteTimeUtc(System.String)">
            <summary>
            Get last write utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last write utc time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1File.SetLastWriteTime(System.String,System.DateTime)">
            <summary>
            Sets the last write time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastWriteTime">New last write time.</param>
        </member>
        <member name="M:Composite.Core.IO.C1File.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the last write utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastWriteTimeUtc">New last write utc time.</param>
        </member>
        <member name="T:Composite.Core.IO.C1FileInfo">
            <summary>
            This class is a almost one to one version of System.IO.FileInfo. Using this implementation instead 
            of System.IO.FileInfo, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.FileInfo for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo"/>. 
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.#ctor(System.String)">
            <summary>
            Creates a C1FileInfo.
            </summary>
            <param name="fileName">Path to file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Create">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.CreateText">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.AppendText">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1StreamWriter"/> for appending.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1StreamWriter"/> for appending.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Open(System.IO.FileMode)">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="mode">File mode to use.</param>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.OpenRead">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/> for reading.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.OpenText">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1StreamReader"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.OpenWrite">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/> for writing.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.CopyTo(System.String)">
            <summary>
            Copies the file to the given path.
            </summary>
            <param name="destFileName">Destination path.</param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.CopyTo(System.String,System.Boolean)">
            <summary>
            Copies the file to the given path and overwrites any existing file if specified.
            </summary>
            <param name="destFileName">Destination path.</param>
            <param name="overwrite">If true, any existing file will be overwritten.</param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.MoveTo(System.String)">
            <summary>
            Moves the file to the given path.
            </summary>
            <param name="destFileName">Destination path.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Replace(System.String,System.String)">
            <summary>
            Replaces the given file with this one.
            </summary>
            <param name="destinationFileName">Destination path to file to replace.</param>
            <param name="destinationBackupFileName">Path to backup file.</param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Replace(System.String,System.String,System.Boolean)">
            <summary>
            Replaces the given file with this one.
            </summary>
            <param name="destinationFileName">Destination path to file to replace.</param>
            <param name="destinationBackupFileName">Path to backup file.</param>
            <param name="ignoreMetadataErrors"></param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Delete">
            <summary>
            Deletes the file.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.Refresh">
            <summary>
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.DirectoryName">
            <summary>
            Returns the directory name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.Directory">
            <summary>
            Returns a <see cref="T:Composite.Core.IO.C1DirectoryInfo"/> of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.Name">
            <summary>
            Returns the name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.FullName">
            <summary>
            Returns the full path and name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.Exists">
            <summary>
            Returns true if the file exists. Otherwise false.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.Extension">
            <summary>
            Returns the extension of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.IsReadOnly">
            <summary>
            Returns true if and only if the file is read only.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.Length">
            <summary>
            Returns the size of the file in bytes.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.Attributes">
            <summary>
            Gets or sets the file attributes on the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.CreationTime">
            <summary>
            Gets or sets the creation time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.CreationTimeUtc">
            <summary>
            Gets or sets the creation utc time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.LastAccessTime">
            <summary>
            Gets or sets the last access time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.LastAccessTimeUtc">
            <summary>
            Gets or sets the last access utc time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.LastWriteTime">
            <summary>
            Gets or sets the last write time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileInfo.LastWriteTimeUtc">
            <summary>
            Gets or sets the last write utc time of the file.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1FileStream">
            <summary>
            This class is a almost one to one version of System.IO.FileStream. Using this implementation instead 
            of System.IO.FileStream, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.FileStream for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileStream"/>. 
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.#ctor(System.String,System.IO.FileMode)">
            <summary>
            Creates a new C1FileStream.
            </summary>
            <param name="path">Path to file.</param>
            <param name="mode">File mode to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Creates a new C1FileStream.
            </summary>
            <param name="path">Path to file.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Creates a new C1FileStream.
            </summary>
            <param name="path">Path to file.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
            <summary>
            Creates a new C1FileStream.
            </summary>
            <param name="path">Path to file.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
            <param name="bufferSize">Buffer size to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>
            Creates a new C1FileStream.
            </summary>
            <param name="path">Path to file.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
            <param name="bufferSize">Buffer size to use.</param>
            <param name="options">File options to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the file in bytes.
            </summary>
            <param name="value">New length of file stream.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a block of bytes from the file stream.
            </summary>
            <param name="array">Target buffer of read bytes.</param>
            <param name="offset">Offset in the buffer to put read bytes.</param>
            <param name="count">Number of bytes to read.</param>
            <returns>Number of bytes read.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.ReadByte">
            <summary>
            Reads a byte form the file stream.
            </summary>
            <returns>The read byte value.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a block of bytes to the file stream.
            </summary>
            <param name="array">Bytes to write to the file.</param>
            <param name="offset">Offset in buffer to write from.</param>
            <param name="count">Number of bytes to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the file stream.
            </summary>
            <param name="value">Byte value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeks to a position in the file stream.
            </summary>
            <param name="offset">Offset to seek.</param>
            <param name="origin">Origin to seek from.</param>
            <returns>The new position in the stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Flush">
            <summary>
            Flushes the buffered bytes to the file.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Flush(System.Boolean)">
            <summary>
            Flushes the buffered bytes to the file.
            </summary>
            <param name="flushToDisk"></param>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Close">
            <summary>
            Closes the file stream.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileStream.Dispose(System.Boolean)">
            <summary>
            Disposes the file stream.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Composite.Core.IO.C1FileStream.Name">
            <summary>
            Name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileStream.Length">
            <summary>
            Size of the file in bytes.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileStream.Position">
            <summary>
            Gets or sets the current read/write position in the file stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileStream.CanRead">
            <summary>
            Returns true if its possible to read from the stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileStream.CanSeek">
            <summary>
            Returns true if its possible to seek in the stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileStream.CanWrite">
            <summary>
            Returns true if its possible to write to the stream.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1FileSystemWatcher">
            <summary>
            This class is a almost one to one version of System.IO.FileSystemWatcher. Using this implementation instead 
            of System.IO.FileSystemWatcher, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.FileSystemWatcher for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileStream"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemWatcher.#ctor(System.String)">
            <summary>
            Creates a new file system watcher given the path.
            </summary>
            <param name="path">Path to watch.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemWatcher.#ctor(System.String,System.String)">
            <summary>
            Creates a new file system watcher given the path.
            </summary>
            <param name="path">Path to watch.</param>
            <param name="filter">Filter to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemWatcher.BeginInit">
            <summary>
            Begins the initialization.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemWatcher.EndInit">
            <summary>
            Ends the initialization.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
            <summary>
            </summary>
            <param name="changeType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.C1FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
            <summary>
            </summary>
            <param name="changeType"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemWatcher.EnableRaisingEvents">
            <summary>
            Gets or sets if events should be raised or not.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemWatcher.Path">
            <summary>
            Path to watch.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemWatcher.Filter">
            <summary>
            Filter to use.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemWatcher.IncludeSubdirectories">
            <summary>
            Gets or sets of subdirectories should also be watched.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.C1FileSystemWatcher.Created">
            <summary>
            Adds or removes an event handler when new items are created.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.C1FileSystemWatcher.Changed">
            <summary>
            Adds or removes an event handler when new items changed.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.C1FileSystemWatcher.Renamed">
            <summary>
            Adds or removes an event handler when new items are renamed.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.C1FileSystemWatcher.Deleted">
            <summary>
            Adds or removes an event handler when new items are deleted.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.C1FileSystemWatcher.Error">
            <summary>
            Adds or removes an event handler when an error occure.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1FileSystemWatcher.NotifyFilter">
            <summary>
            Gets or sets the notify filter.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1StreamReader">
            <summary>
            This class is a almost one to one version of System.IO.StreamReader. Using this implementation instead 
            of System.IO.StreamReader, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.StreamReader for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.String)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="path">Path to file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="path">Path to file.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, the encoding will be deteced by the content of the file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, the encoding will be deteced by the content of the file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, the encoding will be deteced by the content of the file.</param>
            <param name="bufferSize">Buffer size to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.IO.Stream)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="stream">Stream to ream from.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="stream">Stream to ream from.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, the encoding will be deteced by the content of the file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="stream">Stream to ream from.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="stream">Stream to ream from.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, the encoding will be deteced by the content of the file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Creates a C1StreamReader.
            </summary>
            <param name="stream">Stream to ream from.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, the encoding will be deteced by the content of the file.</param>
            <param name="bufferSize">Buffer size to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.Read">
            <summary>
            Reads a byte from the stream.
            </summary>
            <returns>Returns the read byte.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a block from the file.
            </summary>
            <param name="buffer">Buffer to read into.</param>
            <param name="index">Index in buffer to start storing bytes.</param>
            <param name="count">Number of bytes to read.</param>
            <returns>Returns the number read bytes.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.ReadLine">
            <summary>
            Read a line from the file.
            </summary>
            <returns>Returns the read line.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.ReadToEnd">
            <summary>
            Read all the content of the file into a strng.
            </summary>
            <returns>The content of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a block from the file.
            </summary>
            <param name="buffer">Buffer to store read chars.</param>
            <param name="index">Index in buffer to start storing chars.</param>
            <param name="count">Number of chars to read.</param>
            <returns>Returns the number of read chars.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.Peek">
            <summary>
            Peeks the current byte.
            </summary>
            <returns>The current byte.</returns>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.Close">
            <summary>
            Closes the stream.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamReader.Dispose(System.Boolean)">
            <summary>
            Disposes the stream.
            </summary>
            <param name="disposing">Ttrue if the stream is disposing.</param>
        </member>
        <member name="P:Composite.Core.IO.C1StreamReader.EndOfStream">
            <summary>
            Returns true if the stream is at the end of stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1StreamReader.BaseStream">
            <summary>
            Returns the base stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1StreamReader.CurrentEncoding">
            <summary>
            Returns the current encoding of the stream.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1StreamWriter">
            <summary>
            This class is a almost one to one version of System.IO.StreamWriter. Using this implementation instead 
            of System.IO.StreamWriter, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.StreamWriter for more documentation on the methods of this class.
            See <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.#ctor(System.String)">
            <summary>
            Creates a C1StreamWriter.
            </summary>
            <param name="path">Path to file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a C1StreamWriter.
            </summary>
            <param name="path">Path to file.</param>
            <param name="append">If this is true, any writing will be appended to the file.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a C1StreamWriter.
            </summary>
            <param name="path">Path to file.</param>
            <param name="append">If this is true, any writing will be appended to the file.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
            <summary>
            Creates a C1StreamWriter.
            </summary>
            <param name="path">Path to file.</param>
            <param name="append">If this is true, any writing will be appended to the file.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="bufferSize">Buffer size to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.#ctor(System.IO.Stream)">
            <summary>
            Creates a C1StreamWriter.
            </summary>
            <param name="stream">Stream to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a C1StreamWriter.
            </summary>
            <param name="stream">Stream to use.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>
            Creates a C1StreamWriter.
            </summary>
            <param name="stream">Stream to use.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="bufferSize">Buffer size to use.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.String)">
            <summary>
            Writes a string to the stream.
            </summary>
            <param name="value">String to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.String,System.Object)">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
            <param name="arg2">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.String,System.Object[])">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg">String format arguments.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Char)">
            <summary>
            Writes a char to the stream.
            </summary>
            <param name="value">The char value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Char[])">
            <summary>
            Writes a char array to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a char array to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
            <param name="index">Start index in the buffer to start writing from.</param>
            <param name="count">Number of chars to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Boolean)">
            <summary>
            Writes a boolean to the stream.
            </summary>
            <param name="value">Boolean value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Int32)">
            <summary>
            Writes an integer to the stream.
            </summary>
            <param name="value">Integer value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.UInt32)">
            <summary>
            Writes an unsigned integer to the stream.
            </summary>
            <param name="value">Unsigned integer value to write</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Int64)">
            <summary>
            Writes a long to the stream.
            </summary>
            <param name="value">Long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.UInt64)">
            <summary>
            Writes a unsigned long to the stream.
            </summary>
            <param name="value">Unsigned long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Single)">
            <summary>
            Writes a float to the stream.
            </summary>
            <param name="value">Float value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Double)">
            <summary>
            Writes a double to the stream.
            </summary>
            <param name="value">Double value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Decimal)">
            <summary>
            Writes a decimal to the stream.
            </summary>
            <param name="value">Decimal value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Write(System.Object)">
            <summary>
            Write an object to the stream.
            </summary>
            <param name="value">Object value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine">
            <summary>
            Writes a line break to the stream.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.String)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="value">String value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.String,System.Object)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
            <param name="arg2">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg">String format arguments.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Char)">
            <summary>
            Writes a char with a line break to the stream.
            </summary>
            <param name="value">Char value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Char[])">
            <summary>
            Writes a char array with a line break to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a char array with a line break to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
            <param name="index">Index in the char array to start writing from.</param>
            <param name="count">Number of chars to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Boolean)">
            <summary>
            Writes a bool with a line break to the stream.
            </summary>
            <param name="value">Bool value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Int32)">
            <summary>
            Writes a integer with a line break to the stream.
            </summary>
            <param name="value">Integer value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.UInt32)">
            <summary>
            Writes a unsigned integer with a line break to the stream.
            </summary>
            <param name="value">Unsigned integer to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Int64)">
            <summary>
            Writes a long with a line break to the stream.
            </summary>
            <param name="value">Long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.UInt64)">
            <summary>
            Writes a unsigned long with a line break to the stream.
            </summary>
            <param name="value">Unsigned long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Single)">
            <summary>
            Writes a float with a line break to the stream.
            </summary>
            <param name="value">Float value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Double)">
            <summary>
            Writes a double with a line break to the stream.
            </summary>
            <param name="value">Double value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Decimal)">
            <summary>
            Writes a decimal with a line break to the stream.
            </summary>
            <param name="value">Decimal value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.WriteLine(System.Object)">
            <summary>
            Writes an object with a line break to the stream.
            </summary>
            <param name="value">Object value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Flush">
            <summary>
            Flushes the stream.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Close">
            <summary>
            Closes the stream.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Finalize">
            <summary>
            Desctructor.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.C1StreamWriter.Dispose(System.Boolean)">
            <summary>
            Disposes the stream.
            </summary>
            <param name="disposing">True if the stream is disposing.</param>
        </member>
        <member name="P:Composite.Core.IO.C1StreamWriter.NewLine">
            <summary>
            Gets or sets the line break value.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1StreamWriter.FormatProvider">
            <summary>
            Gets the format provider used.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1StreamWriter.AutoFlush">
            <summary>
            Gets or sets whether the stream is auto flushed or not
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1StreamWriter.BaseStream">
            <summary>
            The base streawm.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1StreamWriter.Encoding">
            <summary>
            Gets the encoding used.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.C1WaitForChangedResult">
            <summary>
            This class is a almost one to one version of System.IO.WaitForChangedResult. Using this implementation instead 
            of System.IO.WaitForChangedResult, will ensure that your code will work both on Standard Windows deployment 
            and Windows Azure deployment.
            See System.IO.WaitForChangedResult for more documentation on the methods of this class.
            Used by <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1WaitForChangedResult.Name">
            <summary>
            Gets or sets the name of the changed file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1WaitForChangedResult.OldName">
            <summary>
            Gets or sets the old name of the changed file system item.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1WaitForChangedResult.ChangeType">
            <summary>
            Gets or sets the type of the change.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.C1WaitForChangedResult.TimedOut">
            <summary>
            Gets or sets whether the operation timed out.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1Configuration">
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.Configuration.C1Configuration"/>.
            See <see cref="T:Composite.Core.Configuration.C1Configuration"/> for more information.
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.GetSection(System.String)">
            <summary>
            Gets a named configuration section.
            </summary>
            <param name="sectionName">Name of section to get.</param>
            <returns>Returns the configuration section.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.GetSectionGroup(System.String)">
            <summary>
            Gets a named configuration section group.
            </summary>
            <param name="sectionGroupName">Name of configuration section group to get.</param>
            <returns>Returns the configuration section group.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.Save">
            <summary>
            Saves the configuration.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.Save(System.Configuration.ConfigurationSaveMode)">
            <summary>
            Saves the configuration.
            </summary>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            Saves the configuration.
            </summary>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
            <param name="forceSaveAll">Saves all sections, even non touched.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.SaveAs(System.String)">
            <summary>
            Saves the configuration to a new file.
            </summary>
            <param name="filename">Path to new configuration filename.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>
            Saves the configuration to a new file.
            </summary>
            <param name="filename">Path to new configuration filename.</param>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            Saves the configuration to a new file.
            </summary>
            <param name="filename">Path to new configuration filename.</param>
            <param name="saveMode">Save mode to use when saving the configuration.</param>
            <param name="forceSaveAll">Saves all sections, even non touched.</param>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.FilePath">
            <summary>
            Gets the path to the configuration file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.HasFile">
            <summary>
            Returns true if the configuration file exists.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.AppSettings">
            <summary>
            Returns the app setttings section.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.ConnectionStrings">
            <summary>
            Returns the connection string section.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.Sections">
            <summary>
            Returns the configuration sections.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.RootSectionGroup">
            <summary>
            Returns the configuration section group.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1Configuration.SectionGroups">
            <summary>
            Returns the configuration slection groups.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1Directory">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1Directory"/>.
            See <see cref="T:Composite.Core.IO.C1Directory"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.CreateDirectory(System.String)">
            <summary>
            Creates a directory.
            </summary>
            <param name="path">Path to directory to create.</param>
            <returns>Returns a C1DirectoryInfo to the specified path.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.Delete(System.String)">
            <summary>
            Deletes an empty directory on the given path.
            </summary>
            <param name="path">Path of empty directory to delete.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.Delete(System.String,System.Boolean)">
            <summary>
            Deletes the directory and if specified subdirectories and file on the given path.
            </summary>
            <param name="path">Path of directory to delete.</param>
            <param name="recursive">Include subdirectories and files.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.Move(System.String,System.String)">
            <summary>
            Moves a file or directory from the given source path to the given destination path.
            </summary>
            <param name="sourceDirName">Path of file or directory to move.</param>
            <param name="destDirName">Target path of file or directory to be moved to.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.Exists(System.String)">
            <summary>
            Determines if the directory in the given path exists or not.
            </summary>
            <param name="path">Path to directory to test.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetCurrentDirectory">
            <summary>
            Returns the current directory.
            </summary>
            <returns>The current directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.SetCurrentDirectory(System.String)">
            <summary>
            Sets the current directory
            </summary>
            <param name="path">Path to new current directory.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetParent(System.String)">
            <summary>
            Gets the parent of the given directory.
            </summary>
            <param name="path">Path of directory to get parent of.</param>
            <returns>The parent of the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetDirectoryRoot(System.String)">
            <summary>
            Returns volume and/or root information of the given directory.
            </summary>
            <param name="path">Path of directory to get root information of.</param>
            <returns>Volume and/or root information.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetDirectories(System.String)">
            <summary>
            Gets the subdirectories of the given directory.
            </summary>
            <param name="path">Path to directory to get subdirectories.</param>
            <returns>Subdirectories of the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetDirectories(System.String,System.String)">
            <summary>
            Gets the subdirectories of the given directory with the given search pattern.
            </summary>
            <param name="path">Path to directory to get subdirectories.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <returns>Subdirectories of the given directory with the given search parrern.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets the subdirectories of the given directory with the given search pattern and options.
            </summary>
            <param name="path">Path to directory to get subdirectories.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <param name="searchOption">Search options to use.</param>
            <returns>Subdirectories of the given directory with the given search parrern and options.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetFiles(System.String)">
            <summary>
            Gets the files in the given directory.
            </summary>
            <param name="path">Path to directory go get files from.</param>
            <returns>Files in the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetFiles(System.String,System.String)">
            <summary>
            Gets the files in the given directory with the given search pattern.
            </summary>
            <param name="path">Path to directory go get files from.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <returns>Files in the given directory with the given search pattern.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets the files in the given directory with the given search pattern and options.
            </summary>
            <param name="path">Path to directory go get files from.</param>
            <param name="searchPattern">Search pattern to use.</param>
            <param name="searchOption">Search options to use.</param>
            <returns>Files in the given directory with the given search pattern and options.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetCreationTime(System.String)">
            <summary>
            Returns the creation date and time of the given directory.
            </summary>
            <param name="path">Path of directory.</param>
            <returns>Creation date and time of the given directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1Directory.GetCreationTimeUtc(System.String)">
            <summary>
            Returns the creation date and utc time of the given directory.
            </summary>
            <param name="path">Path of directory.</param>
            <returns>Creation date and time of the given directory.</returns>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>.
            See <see cref="T:Composite.Core.IO.C1DirectoryInfo"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.GetDirectories">
            <summary>
            Returns the subdirectories of the directory.
            </summary>
            <returns>Subdirectories of the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.GetDirectories(System.String)">
            <summary>
            Returns the subdirectores of the directory given the search pattern.
            </summary>
            <param name="searchPattern">Search pattern to use.</param>
            <returns>Subdirectories of the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
            <summary>
            Returns the subdirectores of the directory given the search pattern and options.
            </summary>
            <param name="searchPattern">The search pattern to use.</param>
            <param name="searchOption">The search options to use.</param>
            <returns>Subdirectories of the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.GetFiles">
            <summary>
            Returns the files in the directory.
            </summary>
            <returns>Files in the directory.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.GetFiles(System.String)">
            <summary>
            Returns the files in the directory given the search pattern.
            </summary>
            <param name="searchPattern">The search pattern to use.</param>
            <returns>Files in the directory given the search pattern.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
            <summary>
            Returns the files in the directory given the search pattern and options.
            </summary>
            <param name="searchPattern">The search pattern to use.</param>
            <param name="searchOption">The search options to use.</param>
            <returns>Files in the directory given the search pattern and options.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Create">
            <summary>
            Creates the directory.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.CreateSubdirectory(System.String)">
            <summary>
            Creates a subdirectory.
            </summary>
            <param name="path">Path to directory to create.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.MoveTo(System.String)">
            <summary>
            Moves the directory to the given path.
            </summary>
            <param name="destDirName">Destination directory name.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Delete">
            <summary>
            Deletes the directory if empty.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Delete(System.Boolean)">
            <summary>
            Deletes the directory, files and subdirectories if specified.
            </summary>
            <param name="recursive">If true, a recursive delete will be performced.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Refresh">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Name">
            <summary>
            The name of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.FullName">
            <summary>
            Full path of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Extension">
            <summary>
            The extension of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Exists">
            <summary>
            Tells if the directory exists or not.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Root">
            <summary>
            The root directory of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Parent">
            <summary>
            The parent directory of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.Attributes">
            <summary>
            File attributes of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.CreationTime">
            <summary>
            The creation time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.CreationTimeUtc">
            <summary>
            The creation utc time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.LastAccessTime">
            <summary>
            Last access time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.LastAccessTimeUtc">
            <summary>
            Last access utc time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.LastWriteTime">
            <summary>
            Last write time of the directory.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo.LastWriteTimeUtc">
            <summary>
            Last write utc time of the directory.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1File">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1File"/>.
            See <see cref="T:Composite.Core.IO.C1File"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Exists(System.String)">
            <summary>
            Determins if the given file exists or not.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>Returns true if the file exists, false if not.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Touch(System.String)">
            <summary>
            This is not a port of the System.IO.File. This method can be used to 'touch' an
            existing file. This is a way of telling the C1 IO system that the file has been 
            touched and C1 uses this to handle other than standard Windows deployments, like
            Windows Azure.
            </summary>
            <param name="path">Path to file to touch.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Copy(System.String,System.String)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFileName">Source path of file to copy.</param>
            <param name="destFileName">Target path of the file to be copied to.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Copy(System.String,System.String,System.Boolean)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceFileName">Source path of file to copy.</param>
            <param name="destFileName">Target path of the file to be copied to.</param>
            <param name="overwrite">If this is true and the target path exists, it will be overwritten without any exceptions.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Move(System.String,System.String)">
            <summary>
            Moves a file.
            </summary>
            <param name="sourceFileName">Path of file to move.</param>
            <param name="destFileName">Destination path to move the file to.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Replace(System.String,System.String,System.String)">
            <summary>
            Replace a file with another file.
            </summary>
            <param name="sourceFileName">Path to source file.</param>
            <param name="destinationFileName">Path to file to replace.</param>
            <param name="destinationBackupFileName"></param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Replace(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Replace a file with another file.
            </summary>
            <param name="sourceFileName">Path to source file.</param>
            <param name="destinationFileName">Path to file to replace.</param>
            <param name="destinationBackupFileName"></param>
            <param name="ignoreMetadataErrors"></param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Delete(System.String)">
            <summary>
            Deletes the given file.
            </summary>
            <param name="path">Path to file to delete.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Create(System.String)">
            <summary>
            Creates a new file and returns a file stream to it <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1FileStream"/> stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Create(System.String,System.Int32)">
            <summary>
            Creates a new file and returns a file stream to it <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <param name="bufferSize">Buffer size of returned stream.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1FileStream"/> stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Create(System.String,System.Int32,System.IO.FileOptions)">
            <summary>
            Creates a new file and returns a file stream to it <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <param name="bufferSize">Buffer size of returned stream.</param>
            <param name="options">File options of returned stream.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1FileStream"/> stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.CreateText(System.String)">
            <summary>
            Creates a new file and returns a stream writer to it <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <param name="path">Path to file to create.</param>
            <returns>Returns the newly created <see cref="T:Composite.Core.IO.C1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.AppendText(System.String)">
            <summary>
            Opens a <see cref="T:Composite.Core.IO.C1StreamWriter"/> for appending.
            </summary>
            <param name="path">Path to file to append to.</param>
            <returns>Returns the newly opned <see cref="T:Composite.Core.IO.C1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.AppendAllText(System.String,System.String)">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>        
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>        
            <param name="encoding">Encoding to use when appending.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends content to a file.
            </summary>
            <param name="path">Path to file to append to.</param>
            <param name="contents">Content to append to file.</param>        
            <param name="encoding">Encoding to use when appending.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Open(System.String,System.IO.FileMode)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <param name="mode">File mode to use.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.OpenRead(System.String)">
            <summary>
            Opens a file for reading.
            </summary>
            <param name="path">Path to file to open.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.OpenText(System.String)">
            <summary>
            Opens a file.
            </summary>
            <param name="path">Path to file to open.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1StreamReader"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.OpenWrite(System.String)">
            <summary>
            Opens a file for writing.
            </summary>
            <param name="path">Path to file to open.</param>
            <returns>Returns the newly opened <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.ReadAllBytes(System.String)">
            <summary>
            Read all bytes from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>Returns read bytes.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.ReadAllLines(System.String)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>Returns read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <returns>Returns read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.ReadAllText(System.String)">
            <summary>
            Read all text from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>The content of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Read all text from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <returns>The content of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.ReadLines(System.String)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <returns>Returns all read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            Read all lines from a file.
            </summary>
            <param name="path">Path to file to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <returns>Returns all read lines.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Writes bytes to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="bytes">Bytes to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
            <param name="encoding">Encoding to use when writing.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.WriteAllLines(System.String,System.String[])">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Writes lines to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Lines to write.</param>
            <param name="encoding">Encoding to use when writing.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.WriteAllText(System.String,System.String)">
            <summary>
            Writes text to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Text to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes text to a file.
            </summary>
            <param name="path">Path to file to write to.</param>
            <param name="contents">Text to write.</param>
            <param name="encoding">Encoding to use when writing.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.GetAttributes(System.String)">
            <summary>
            Gets the file attributes.
            </summary>
            <param name="path">Path to file to get attributes from.</param>
            <returns>Returns the file attributes. See System.IO.FileAttributes</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.SetAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            Sets the file attributes.
            </summary>
            <param name="path">Path to file to set attributes on.</param>
            <param name="fileAttributes">File attributes to set.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.GetCreationTime(System.String)">
            <summary>
            Gets the creation time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the creation time of the given file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.GetCreationTimeUtc(System.String)">
            <summary>
            Gets the creation utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the creation utc time of the given file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.SetCreationTime(System.String,System.DateTime)">
            <summary>
            Sets the creation time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="creationTime">New creation time.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.SetCreationTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the creation utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="creationTimeUtc">New creation utc time.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.GetLastAccessTime(System.String)">
            <summary>
            Gets the last access time.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last access time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.GetLastAccessTimeUtc(System.String)">
            <summary>
            Gets the last access utc time.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last access utc time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.SetLastAccessTime(System.String,System.DateTime)">
            <summary>
            Sets the last access time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastAccessTime">New last access time.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the last access utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastAccessTimeUtc">New last access utc time.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.GetLastWriteTime(System.String)">
            <summary>
            Get last write time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last write time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.GetLastWriteTimeUtc(System.String)">
            <summary>
            Get last write utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Returns the last write utc time of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.SetLastWriteTime(System.String,System.DateTime)">
            <summary>
            Sets the last write time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastWriteTime">New last write time.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1File.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the last write utc time of the file.
            </summary>
            <param name="path">Path to file.</param>
            <param name="lastWriteTimeUtc">New last write utc time.</param>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1FileInfo"/>.
            See <see cref="T:Composite.Core.IO.C1FileInfo"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Create">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.CreateText">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.AppendText">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1StreamWriter"/> for appending.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1StreamWriter"/> for appending.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Open(System.IO.FileMode)">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="mode">File mode to use.</param>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.OpenRead">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/> for reading.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.OpenText">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1StreamReader"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.OpenWrite">
            <summary>
            Creates a file stream <see cref="T:Composite.Core.IO.C1FileStream"/>.
            </summary>
            <returns>Returns a newly created <see cref="T:Composite.Core.IO.C1FileStream"/> for writing.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.CopyTo(System.String)">
            <summary>
            Copies the file to the given path.
            </summary>
            <param name="destFileName">Destination path.</param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.CopyTo(System.String,System.Boolean)">
            <summary>
            Copies the file to the given path and overwrites any existing file if specified.
            </summary>
            <param name="destFileName">Destination path.</param>
            <param name="overwrite">If true, any existing file will be overwritten.</param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.MoveTo(System.String)">
            <summary>
            Moves the file to the given path.
            </summary>
            <param name="destFileName">Destination path.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Replace(System.String,System.String)">
            <summary>
            Replaces the given file with this one.
            </summary>
            <param name="destinationFileName">Destination path to file to replace.</param>
            <param name="destinationBackupFileName">Path to backup file.</param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Replace(System.String,System.String,System.Boolean)">
            <summary>
            Replaces the given file with this one.
            </summary>
            <param name="destinationFileName">Destination path to file to replace.</param>
            <param name="destinationBackupFileName">Path to backup file.</param>
            <param name="ignoreMetadataErrors"></param>
            <returns>A new <see cref="T:Composite.Core.IO.C1FileInfo"/> for the destination file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Delete">
            <summary>
            Deletes the file.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Refresh">
            <summary>
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.DirectoryName">
            <summary>
            Returns the directory name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Directory">
            <summary>
            Returns a <see cref="T:Composite.Core.IO.C1DirectoryInfo"/> of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Name">
            <summary>
            Returns the name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.FullName">
            <summary>
            Returns the full path and name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Exists">
            <summary>
            Returns true if the file exists. Otherwise false.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Extension">
            <summary>
            Returns the extension of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.IsReadOnly">
            <summary>
            Returns true if and only if the file is read only.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Length">
            <summary>
            Returns the size of the file in bytes.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.Attributes">
            <summary>
            Gets or sets the file attributes on the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.CreationTime">
            <summary>
            Gets or sets the creation time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.CreationTimeUtc">
            <summary>
            Gets or sets the creation utc time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.LastAccessTime">
            <summary>
            Gets or sets the last access time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.LastAccessTimeUtc">
            <summary>
            Gets or sets the last access utc time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.LastWriteTime">
            <summary>
            Gets or sets the last write time of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo.LastWriteTimeUtc">
            <summary>
            Gets or sets the last write utc time of the file.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1FileStream">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1FileStream"/>.
            See <see cref="T:Composite.Core.IO.C1FileStream"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the file in bytes.
            </summary>
            <param name="value">New length of file stream.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a block of bytes from the file stream.
            </summary>
            <param name="array">Target buffer of read bytes.</param>
            <param name="offset">Offset in the buffer to put read bytes.</param>
            <param name="count">Number of bytes to read.</param>
            <returns>Number of bytes read.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.ReadByte">
            <summary>
            Reads a byte form the file stream.
            </summary>
            <returns>The read byte value.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a block of bytes to the file stream.
            </summary>
            <param name="array">Bytes to write to the file.</param>
            <param name="offset">Offset in buffer to write from.</param>
            <param name="count">Number of bytes to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the file stream.
            </summary>
            <param name="value">Byte value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeks to a position in the file stream.
            </summary>
            <param name="offset">Offset to seek.</param>
            <param name="origin">Origin to seek from.</param>
            <returns>The new position in the stream.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Flush">
            <summary>
            Flushes the buffered bytes to the file.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Flush(System.Boolean)">
            <summary>
            Flushes the buffered bytes to the file.
            </summary>
            <param name="flushToDisk"></param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Close">
            <summary>
            Closes the file stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Name">
            <summary>
            Name of the file.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Length">
            <summary>
            Size of the file in bytes.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.Position">
            <summary>
            Gets or sets the current read/write position in the file stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.CanRead">
            <summary>
            Returns true if its possible to read from the stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.CanSeek">
            <summary>
            Returns true if its possible to seek in the stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileStream.CanWrite">
            <summary>
            Returns true if its possible to write to the stream.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>.
            See <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.BeginInit">
            <summary>
            Begins the initialization.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.EndInit">
            <summary>
            Ends the initialization.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
            <summary>
            </summary>
            <param name="changeType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
            <summary>
            </summary>
            <param name="changeType"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.EnableRaisingEvents">
            <summary>
            Gets or sets if events should be raised or not.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.Path">
            <summary>
            Path to watch.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.Filter">
            <summary>
            Filter to use.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.IncludeSubdirectories">
            <summary>
            Gets or sets of subdirectories should also be watched.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.Created">
            <summary>
            Adds or removes an event handler when new items are created.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.Changed">
            <summary>
            Adds or removes an event handler when new items changed.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.Renamed">
            <summary>
            Adds or removes an event handler when new items are renamed.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.Deleted">
            <summary>
            Adds or removes an event handler when new items are deleted.
            </summary>
        </member>
        <member name="E:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.Error">
            <summary>
            Adds or removes an event handler when an error occure.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher.NotifyFilter">
            <summary>
            Gets or sets the notify filter.
            </summary>        
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1StreamReader"/>.
            See <see cref="T:Composite.Core.IO.C1StreamReader"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.Read">
            <summary>
            Reads a byte from the stream.
            </summary>
            <returns>Returns the read byte.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a block from the file.
            </summary>
            <param name="buffer">Buffer to read into.</param>
            <param name="index">Index in buffer to start storing bytes.</param>
            <param name="count">Number of bytes to read.</param>
            <returns>Returns the number read bytes.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.ReadLine">
            <summary>
            Read a line from the file.
            </summary>
            <returns>Returns the read line.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.ReadToEnd">
            <summary>
            Read all the content of the file into a strng.
            </summary>
            <returns>The content of the file.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a block from the file.
            </summary>
            <param name="buffer">Buffer to store read chars.</param>
            <param name="index">Index in buffer to start storing chars.</param>
            <param name="count">Number of chars to read.</param>
            <returns>Returns the number of read chars.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.Peek">
            <summary>
            Peeks the current byte.
            </summary>
            <returns>The current byte.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.Close">
            <summary>
            Closes the stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.EndOfStream">
            <summary>
            Returns true if the stream is at the end of stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.BaseStream">
            <summary>
            Returns the base stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader.CurrentEncoding">
            <summary>
            Returns the current encoding of the stream.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter">
            <summary>
            Implementations of this interface is used by C1 through <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> 
            to provide the behavior of <see cref="T:Composite.Core.IO.C1StreamWriter"/>.
            See <see cref="T:Composite.Core.IO.C1StreamWriter"/> for more information.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.String)">
            <summary>
            Writes a string to the stream.
            </summary>
            <param name="value">String to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.String,System.Object[])">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg">String format arguments.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.String,System.Object)">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
            <param name="arg2">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Char)">
            <summary>
            Writes a char to the stream.
            </summary>
            <param name="value">The char value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Char[])">
            <summary>
            Writes a char array to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a char array to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
            <param name="index">Start index in the buffer to start writing from.</param>
            <param name="count">Number of chars to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Boolean)">
            <summary>
            Writes a boolean to the stream.
            </summary>
            <param name="value">Boolean value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Int32)">
            <summary>
            Writes an integer to the stream.
            </summary>
            <param name="value">Integer value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.UInt32)">
            <summary>
            Writes an unsigned integer to the stream.
            </summary>
            <param name="value">Unsigned integer value to write</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Int64)">
            <summary>
            Writes a long to the stream.
            </summary>
            <param name="value">Long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.UInt64)">
            <summary>
            Writes a unsigned long to the stream.
            </summary>
            <param name="value">Unsigned long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Single)">
            <summary>
            Writes a float to the stream.
            </summary>
            <param name="value">Float value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Double)">
            <summary>
            Writes a double to the stream.
            </summary>
            <param name="value">Double value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Decimal)">
            <summary>
            Writes a decimal to the stream.
            </summary>
            <param name="value">Decimal value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Write(System.Object)">
            <summary>
            Write an object to the stream.
            </summary>
            <param name="value">Object value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine">
            <summary>
            Writes a line break to the stream.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.String)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="value">String value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.String,System.Object)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg0">String format argument.</param>
            <param name="arg1">String format argument.</param>
            <param name="arg2">String format argument.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes a string with a line break to the stream.
            </summary>
            <param name="format">String with formatting to write.</param>
            <param name="arg">String format arguments.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Char)">
            <summary>
            Writes a char with a line break to the stream.
            </summary>
            <param name="value">Char value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Char[])">
            <summary>
            Writes a char array with a line break to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a char array with a line break to the stream.
            </summary>
            <param name="buffer">Char array to write.</param>
            <param name="index">Index in the char array to start writing from.</param>
            <param name="count">Number of chars to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Boolean)">
            <summary>
            Writes a bool with a line break to the stream.
            </summary>
            <param name="value">Bool value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Int32)">
            <summary>
            Writes a integer with a line break to the stream.
            </summary>
            <param name="value">Integer value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.UInt32)">
            <summary>
            Writes a unsigned integer with a line break to the stream.
            </summary>
            <param name="value">Unsigned integer to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Int64)">
            <summary>
            Writes a long with a line break to the stream.
            </summary>
            <param name="value">Long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.UInt64)">
            <summary>
            Writes a unsigned long with a line break to the stream.
            </summary>
            <param name="value">Unsigned long value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Single)">
            <summary>
            Writes a float with a line break to the stream.
            </summary>
            <param name="value">Float value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Double)">
            <summary>
            Writes a double with a line break to the stream.
            </summary>
            <param name="value">Double value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Decimal)">
            <summary>
            Writes a decimal with a line break to the stream.
            </summary>
            <param name="value">Decimal value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.WriteLine(System.Object)">
            <summary>
            Writes an object with a line break to the stream.
            </summary>
            <param name="value">Object value to write.</param>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Flush">
            <summary>
            Flushes the stream.
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Close">
            <summary>
            Closes the stream.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.NewLine">
            <summary>
            Gets or sets the line break value.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.FormatProvider">
            <summary>
            Gets the format provider used.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.AutoFlush">
            <summary>
            Gets or sets whether the stream is auto flushed or not
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.BaseStream">
            <summary>
            The base streawm.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter.Encoding">
            <summary>
            Gets the encoding used.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider">
            <summary>
            Implement this interface to overwrite the default behavior of IO in C1.
            This provides implementations of the following classes:
            <see cref="T:Composite.Core.IO.C1Directory"/>
            <see cref="T:Composite.Core.IO.C1DirectoryInfo"/>
            <see cref="T:Composite.Core.IO.C1File"/>
            <see cref="T:Composite.Core.IO.C1FileInfo"/>
            <see cref="T:Composite.Core.IO.C1FileStream"/>
            <see cref="T:Composite.Core.IO.C1FileSystemWatcher"/>
            <see cref="T:Composite.Core.IO.C1StreamReader"/>
            <see cref="T:Composite.Core.IO.C1StreamWriter"/>
            <see cref="T:Composite.Core.Configuration.C1Configuration"/>
            <example>
            Here is an minimal implementaion example:
            <code>
            [ConfigurationElementType(typeof(NonConfigurableIOProvider))]
            internal class LocalIOProvider : IIOProvider
            {
                /* Implementation goes here */
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateFileInfo(System.String)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo"/>.
            </summary>
            <param name="fileName">Path to file to use.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileInfo"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateDirectoryInfo(System.String)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo"/>.
            </summary>
            <param name="path">Path to directory to use.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1DirectoryInfo"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateFileStream(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileStream"/>.
            </summary>
            <param name="path">Path to file.</param>
            <param name="mode">File mode to use.</param>
            <param name="access">File access to use.</param>
            <param name="share">File share to use.</param>
            <param name="bufferSize">Buffer size to use.</param>
            <param name="options">File options to use.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileStream"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateFileSystemWatcher(System.String,System.String)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher"/>.
            </summary>
            <param name="path">Path to file or directory to watch.</param>
            <param name="filter">Filter to use.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1FileSystemWatcher"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateStreamReader(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader"/>.
            </summary>
            <param name="path">Path to file to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, encoding will be detected from the file stream.</param>
            <param name="bufferSize">Buffer size to use when reading.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateStreamReader(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader"/>.
            </summary>
            <param name="stream">Stream to read from.</param>
            <param name="encoding">Encoding to use when reading.</param>
            <param name="detectEncodingFromByteOrderMarks">If true, encoding will be detected from the file stream.</param>
            <param name="bufferSize">Buffer size to use when reading.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamReader"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateStreamWriter(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter"/>.
            </summary>
            <param name="path">Path of file to write to.</param>
            <param name="append">If true, writte data will be appended to the end of the file.</param>
            <param name="encoding">Encoding to use when writing.</param>
            <param name="bufferSize">Buffer size to use when writing.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateStreamWriter(System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter"/>.
            </summary>
            <param name="stream">Stream to write to.</param>
            <param name="encoding">Encoding to use when writing.</param>
            <param name="bufferSize">Buffer size to use when writing.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1StreamWriter"/>.</returns>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.IIOProvider.CreateConfiguration(System.String)">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1Configuration"/>.
            </summary>
            <param name="path">Path of configuration file.</param>
            <returns>Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1Configuration"/>.</returns>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IIOProvider.C1Directory">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1Directory"/>.
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.IIOProvider.C1File">
            <summary>
            Returns a custom implementation of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IC1File"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.IOProviderData">
            <summary>
            Use this to make custom configuration of an <see cref="T:Composite.Core.IO.Plugins.IOProvider.IIOProvider"/> implementation.
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.NonConfigurableIOProvider">
            <summary>    
            This is a default non configurable version of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IOProviderData"/>
            </summary>
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.NonConfigurableIOProviderAssembler">
            <summary>    
            This is a default non configurable assembler version of <see cref="T:Composite.Core.IO.Plugins.IOProvider.IOProviderData"/>
            </summary>
        </member>
        <member name="M:Composite.Core.IO.Plugins.IOProvider.NonConfigurableIOProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.Core.IO.Plugins.IOProvider.IOProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.Core.IO.Plugins.IOProvider.Runtime.IOProviderSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.IO.Plugins.IOProvider.Runtime.IOProviderSettings.SectionName">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.Runtime.IOProviderSettings.DefaultIOProvider">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Core.IO.Plugins.IOProvider.Runtime.IOProviderSettings.IOProviderPlugins">
            <summary>
            </summary>
        </member>
        <member name="T:Composite.Core.IO.StreamUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.StreamUtils.CopyStream(System.IO.Stream,System.IO.Stream)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Log">
            <summary>
            Provide write access to the Composite C1 log. Note that 'verbose' messages are typically only shown in run-time log viewers.
            </summary>
        </member>
        <member name="M:Composite.Core.Log.LogInformation(System.String,System.String)">
            <summary>
            Logs a 'information' message to the Composite C1 log.
            </summary>
            <param name="title">Title of log message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Composite.Core.Log.LogInformation(System.String,System.String,System.Object[])">
            <summary>
            Logs a 'information' message to the Composite C1 log.
            </summary>
            <param name="title">Title of log message</param>
            <param name="messageFormat">Message to log in a String.Format() style using {0} etc.</param>
            <param name="args">Arguments to put into the message</param>
        </member>
        <member name="M:Composite.Core.Log.LogVerbose(System.String,System.String)">
            <summary>
            Logs a 'verbose' message to the Composite C1 log. Verbose messages are typically only shown in developer log viewers.
            </summary>
            <param name="title">Title of log message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Composite.Core.Log.LogVerbose(System.String,System.String,System.Object[])">
            <summary>
            Logs a 'verbose' message to the Composite C1 log.
            </summary>
            <param name="title">Title of log message</param>
            <param name="messageFormat">Message to log in a String.Format() style using {0} etc.</param>
            <param name="args">Arguments to put into the message</param>
        </member>
        <member name="M:Composite.Core.Log.LogWarning(System.String,System.String)">
            <summary>
            Logs a 'warning' message to the Composite C1 log. 
            </summary>
            <param name="title">Title of log message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Composite.Core.Log.LogWarning(System.String,System.String,System.Object[])">
            <summary>
            Logs a 'warning' message to the Composite C1 log.
            </summary>
            <param name="title">Title of log message</param>
            <param name="messageFormat">Message to log in a String.Format() style using {0} etc.</param>
            <param name="args">Arguments to put into the message</param>
        </member>
        <member name="M:Composite.Core.Log.LogWarning(System.String,System.Exception)">
            <summary>
            Logs a 'verbose' message to the Composite C1 log. 
            </summary>
            <param name="title">Title of log message</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:Composite.Core.Log.LogError(System.String,System.String)">
            <summary>
            Logs a 'error' message to the Composite C1 log. 
            </summary>
            <param name="title">Title of log message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Composite.Core.Log.LogError(System.String,System.String,System.Object[])">
            <summary>
            Logs a 'error' message to the Composite C1 log.
            </summary>
            <param name="title">Title of log message</param>
            <param name="messageFormat">Message to log in a String.Format() style using {0} etc.</param>
            <param name="args">Arguments to put into the message</param>
        </member>
        <member name="M:Composite.Core.Log.LogError(System.String,System.Exception)">
            <summary>
            Logs a 'error' message to the Composite C1 log. 
            </summary>
            <param name="title">Title of log message</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="M:Composite.Core.Log.LogCritical(System.String,System.String)">
            <summary>
            Logs a 'critical' message to the Composite C1 log. You should only use 'critical' when a major system failure occur.
            </summary>
            <param name="title">Title of log message</param>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Composite.Core.Log.LogCritical(System.String,System.String,System.Object[])">
            <summary>
            Logs a 'critical' message to the Composite C1 log. You should only use 'critical' when a major system failure occur.
            </summary>
            <param name="title">Title of log message</param>
            <param name="messageFormat">Message to log in a String.Format() style using {0} etc.</param>
            <param name="args">Arguments to put into the message</param>
        </member>
        <member name="M:Composite.Core.Log.LogCritical(System.String,System.Exception)">
            <summary>
            Logs a 'critical' message to the Composite C1 log. You should only use 'critical' when a major system failure occur.
            </summary>
            <param name="title">Title of log message</param>
            <param name="exception">Exception to log</param>
        </member>
        <member name="T:Composite.Core.PackageSystem.LicenseDefinitionUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.LicenseDefinitionUtils.CreateSignatureHashAlgorithm(System.String)">
            <summary>
            </summary>
            <param name="publicKeyXml"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.LicenseDefinitionUtils.GetLicenseKeyBytes(System.String)">
            <summary>
            </summary>
            <param name="licenseKey"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.LicenseDefinitionUtils.CreateSignatureBytes(System.String)">
            <summary>
            </summary>
            <param name="signatureString"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.PackageSystem.LicenseServerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageLicenseFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.IPackageFragmentInstaller.Install">
            <summary>
            
            </summary>
            <returns>
            Returns uninstall information
            </returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentInstaller.Initialize(Composite.Core.PackageSystem.PackageInstallerContext,System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentInstaller.InstallerContext">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentInstaller.Configuration">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentInstaller.ConfigurationParent">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageLicenseFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageLicenseFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageLicenseFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentUninstaller.Initialize(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},Composite.Core.PackageSystem.PackageUninstallerContext)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentUninstaller.Configuration">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentInstallers.BasePackageFragmentUninstaller.UninstallerContext">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageLicenseFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageLicenseFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.RebootingConsoleFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.RebootingConsoleFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.RebootingConsoleFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.RebootingConsoleFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.RebootingConsoleFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.RebootingConsoleFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.XmlFileMergePackageFragmentInstaller">
            <summary>
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.XmlFileMergePackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.XmlFileMergePackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.XmlFileMergePackageFragmentUninstaller">
            <summary>
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.XmlFileMergePackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.XmlFileMergePackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageLicenseDefinition">
            <summary>
            A package license key definition
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.ProductName">
            <summary>
            The name of the package.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.LicenseFileName">
            <summary>
            The local path of the license file. A serialized version of this class.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.Permanent">
            <summary>
            False if the license is a trail license. True if its a permanent license.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.InstallationId">
            <summary>
            The id of the C1 installation where the package was installed.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.ProductId">
            <summary>
            The id of the pacakge.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.LicenseKey">
            <summary>
            A RSA signed license key. This is used to verify that the license file has not been tampered with.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.PurchaseUrl">
            <summary>
            Url to where to buy a license for the pacakge.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.Expires">
            <summary>
            If its a trail license this property contains the date when the pacakge experies in UTC.
            </summary>
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageLicenseDefinition.LicenseKeyBytes">
            <summary>
            The <see cref="P:Composite.Core.PackageSystem.PackageLicenseDefinition.LicenseKey"/> serizlied to byte array.
            </summary>
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageLicenseHelper">
            <summary>
            This class contains methods for handling package licenses
            <example>
            Here is an example of how a pacakge could validat if there is a valid license installed for the pacakge.
            This code should be compiled into the pacakge itself to prevent spoofing.
            <code>                
            Guid productId = ...; // A package should have this compiled into its assembly.
            string publicKeyXml = ...; // A package should have this compiled into its assembly.
            
            PackageLicenseDefinition licenseDefinition = PackageLicenseHelper.GetLicenseDefinition(productId);
            Guid installationId = licenseDefinition.InstallationId; 
            bool isPermanent = licenseDefinition.Permanent;
            DateTime expiresTime = licenseDefinition.Expires;
            
            byte[] signedSignature = licenseDefinition.LicenseKeyBytes;
            
            // Create the signature string
            string signatureString;
            if (isPermanent)
            {
                signatureString = string.Format("{0}#{1}#{2}", installationId, productId, isPermanent);
            }
            else
            {
                signatureString = string.Format("{0}#{1}#{2}#{3}", installationId, productId, isPermanent, new XAttribute("date", expiresTime).Value);
            }
            byte[] signature = PackageLicenseHelper.CreateSignatureBytes(signatureString);
            
            // Create the provider to verify the signature string
            RSACryptoServiceProvider provider = new RSACryptoServiceProvider();
            provider.FromXmlString(publicKeyXml);
            
            object hashAlgorithm = PackageLicenseHelper.CreateSignatureHashAlgorithm(publicKeyXml);
            
            // isValidKey tells if the package license xml file has been tampered with
            bool isValidKey = provider.VerifyData(signature, hashAlgorithm, signedSignature);
            
            // isExpried tells if a trail license is expired, false if its a permanent license
            bool isExpired = !isPermanent &lt; expiresTime &lt; DateTime.Now;
            
            // isLicenseValid is a combination of isValidKey and isExpired and is only true if the package license xml file has not been tampered with and the license is not expired
            bool isLicenseValid = isValidKey &amp; !isExpired;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageLicenseHelper.GetLicenseDefinition(System.Guid)">
            <summary>
            This method returns a license defintion for the given pacakge id
            </summary>        
            <param name="productId">The package id to locate licende definition for.</param>
            <returns>The data for the license definition found. Null if no license is found.</returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageLicenseHelper.StoreLicenseDefinition(Composite.Core.PackageSystem.PackageLicenseDefinition)">
            <summary>
            Stores the given license defintion.
            </summary>
            <param name="licenseDefinition">The license definition to store</param>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageLicenseHelper.RemoveLicenseDefintion(System.Guid)">
            <summary>
            Removes a license definition given the pacakge id
            </summary>
            <param name="productId">Package id to which the license definition is to be removed</param>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageLicenseHelper.CreateSignatureHashAlgorithm(System.String)">
            <summary>
            This method returns a hash algorithm that can be used when validateting a package license definition. 
            </summary>
            <param name="publicKeyXml">This is the public key to the private key used by the pacakge server to generate the license key</param>
            <returns>A hash algorithm object</returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageLicenseHelper.CreateSignatureBytes(System.String)">
            <summary>
            This method returns a byte representation of the <paramref name="signatureString"/>.
            Here is an example of how to create an signature string:
            <example>
            <code>
            string signatureString;
            if (isPermanent)
            {
                signatureString = string.Format("{0}#{1}#{2}", installationId, productId, isPermanent);
            }
            else
            {
                signatureString = string.Format("{0}#{1}#{2}#{3}", installationId, productId, isPermanent, new XAttribute("date", expiresTime).Value);
            }
            </code>
            </example>
            </summary>
            <param name="signatureString">A signature string</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageUtils">
            <summary>
            This class contains helper methods for handling packages
            </summary>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageUtils.GetInstalledPackageEntityToken(System.Guid,System.String)">
            <summary>
            This method returns an entity token for a install package in the C1 console.
            </summary>
            <param name="packageId">The id of the package.</param>
            <param name="groupName">The group name of the package.</param>
            <returns>Returns an entity token for a installed package.</returns>
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.RaisePropertyChanged(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.ExtensionData">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.InstallationId">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.ProductId">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.Permanent">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.Expires">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.LicenseKey">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.PurchaseUrl">
            <exclude />
        </member>
        <member name="E:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor.PropertyChanged">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoap">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoap.ValidateTrialLicenseDefinitionRequest(Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoap.GetTrialLicenseDefinition(Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequest)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequest">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequest.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequest.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequest.#ctor(Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequestBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequestBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequestBody.installationId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequestBody.productId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequestBody.publicKeyXml">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequestBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequestBody.#ctor(System.Guid,System.Guid,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponse">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponse.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponse.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponse.#ctor(Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponseBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponseBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponseBody.ValidateTrialLicenseDefinitionRequestResult">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponseBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestResponseBody.#ctor(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequest">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequest.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequest.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequest.#ctor(Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequestBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequestBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequestBody.installationId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequestBody.productId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequestBody.publicKeyXml">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequestBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequestBody.#ctor(System.Guid,System.Guid,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponse">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponse.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponse.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponse.#ctor(Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponseBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponseBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponseBody.GetTrialLicenseDefinitionResult">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponseBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionResponseBody.#ctor(Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionDescriptor)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapChannel">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.Composite#Core#PackageSystem#WebServiceClient#LicenseDefinitionServiceSoap#ValidateTrialLicenseDefinitionRequest(Composite.Core.PackageSystem.WebServiceClient.ValidateTrialLicenseDefinitionRequestRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.ValidateTrialLicenseDefinitionRequest(System.Guid,System.Guid,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.Composite#Core#PackageSystem#WebServiceClient#LicenseDefinitionServiceSoap#GetTrialLicenseDefinition(Composite.Core.PackageSystem.WebServiceClient.GetTrialLicenseDefinitionRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.LicenseDefinitionServiceSoapClient.GetTrialLicenseDefinition(System.Guid,System.Guid,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Instrumentation.Measurement">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.Measurement.#ctor(System.String)">
            <exclude />
        </member>
        <member name="F:Composite.Core.Instrumentation.Measurement.TotalTime">
            <summary>
            Total execution time in microseconds (10^-6)
            </summary>
        </member>
        <member name="P:Composite.Core.Instrumentation.Measurement.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.Instrumentation.Measurement.Nodes">
            <exclude />
        </member>
        <member name="P:Composite.Core.Instrumentation.Measurement.SyncRoot">
            <exclude />
        </member>
        <member name="P:Composite.Core.Instrumentation.Measurement.ParallelNodes">
            <exclude />
        </member>
        <member name="T:Composite.Core.Instrumentation.Profiler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.Profiler.BeginProfiling">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.Profiler.EndProfiling">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.Profiler.Measure(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Instrumentation.ProfilerReport">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.ProfilerReport.BuildReportXml(Composite.Core.Instrumentation.Measurement)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PageTemplates.Foundation.PageTemplateProviderRegistry">
            <exclude />
        </member>
        <member name="M:Composite.Core.PageTemplates.Foundation.PageTemplateProviderRegistry.GetProviderByTemplateId(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PageTemplates.Foundation.PageTemplateProviderRegistry.FlushTemplates">
            <summary>
            Flushes list of registered page templates
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.Foundation.PageTemplateProviderRegistry.ProviderNames">
            <exclude />
        </member>
        <member name="P:Composite.Core.PageTemplates.Foundation.PageTemplateProviderRegistry.PageTemplates">
            <exclude />
        </member>
        <member name="T:Composite.Core.PageTemplates.IPageRenderer">
            <summary>
            This class is responsible for rendering the provided job onto the provided asp.net web forms page. 
            The AttachToPage method is called at page construction  and is expected to hook on to asp.net page events (like PreInit) to drive the rendering. 
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.IPageRenderer.AttachToPage(System.Web.UI.Page,Composite.Core.PageTemplates.PageContentToRender)">
            <summary>
            Attaches rendering code to an instace of <c cref="T:System.Web.UI.Page"></c>.
            </summary>
            <param name="renderTaget">The render taget.</param>
            <param name="contentToRender">The render job.</param>
        </member>
        <member name="T:Composite.Core.PageTemplates.PageContentToRender">
            <summary>
            Describe the page and content desired to be rendered.
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageContentToRender.#ctor(Composite.Data.Types.IPage,System.Collections.Generic.IEnumerable{Composite.Data.Types.IPagePlaceholderContent},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.PageTemplates.PageContentToRender"/> class.
            </summary>
            <param name="page">The page.</param>
            <param name="contents">The contents.</param>
            <param name="isPreview">if set to <c>true</c> the page should be rendered in preview mode.</param>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageContentToRender.Page">
            <summary>
            The page to be rendered 
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageContentToRender.IsPreview">
            <summary>
            Determines whether page is rendered in a preview mode
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageContentToRender.Contents">
            <summary>
            Page placeholders' content
            </summary>
        </member>
        <member name="T:Composite.Core.PageTemplates.PageTemplateDescriptor">
            <summary>
            Describes a page layout to the Composite C1 core so it may set up editing UI
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateDescriptor.GetEntityToken">
            <summary>
            Gets the entity token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateDescriptor.GetActions">
            <summary>
            Appends actions to a visual element.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateDescriptor.Id">
            <summary>
            Used to identify page layouts. The value has to be unique for each page template.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateDescriptor.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
            
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateDescriptor.PlaceholderDescriptions">
            <summary>
            Gets or sets the placeholder descriptions.
            </summary>
            <value>
            The placeholder descriptions.
            </value>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateDescriptor.DefaultPlaceholderId">
            <summary>
            The default is the placeholder to focus/use when users edit a page or a layout is used in ad hoc renderings.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateDescriptor.LoadingException">
            <summary>
            Gets or sets an exception that occured during loading the template.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateDescriptor.IsValid">
            <summary>
            Gets a value indicating whether page template is loaded correctly.
            Not valid templates should not be used in data as they can not be used in rendering and their IDs may not be valid.
            </summary>
            <value>
              <c>true</c> if template is loaded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Composite.Core.PageTemplates.PageTemplateEntityToken">
            <summary>
            Entity token of a page template
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateEntityToken.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.PageTemplates.PageTemplateEntityToken"/> class.
            </summary>
            <param name="templateId">The template id.</param>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateEntityToken.TemplateId">
            <summary>
            Gets the template id.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Core.PageTemplates.PageTemplateFacade">
            <summary>
            Facade for accessing page templates
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateFacade.GetPageTemplates">
            <summary>
            Gets the page templates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateFacade.GetSharedFiles">
            <summary>
            Gets the shared files.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateFacade.BuildPageRenderer(System.Guid)">
            <summary>
            Builds the page renderer.
            </summary>
            <param name="pageTemplateId">The page template id.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PageTemplates.PageTemplateFacade.GetPageTemplate(System.Guid)">
            <summary>
            Gets the page template.
            </summary>
            <param name="pageTemplateId">The page template id.</param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.PageTemplates.PageTemplateFacade.ValidTemplateExists">
            <summary>
            Returns <c>true</c> is there's at least one valid page template.
            </summary>
        </member>
        <member name="T:Composite.Core.PageTemplates.PlaceholderAttribute">
            <summary>
            Defines a placeholder property
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PlaceholderAttribute.Id">
            <summary>
            Placeholder's ID. If this parameter is not set, the property name will be the ID
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PlaceholderAttribute.Title">
            <summary>
            Placeholder's label. Is used f.e. in EditPageWorkflow
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PlaceholderAttribute.IsDefault">
            <summary>
            Determines whether current placeholder is the default placeholder
            </summary>
        </member>
        <member name="T:Composite.Core.PageTemplates.PlaceholderDescriptor">
            <summary>
            Describe a placeholder on a page template.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PlaceholderDescriptor.Id">
            <summary>
            Used to identify a layout placeholder. This has to be unique only within a page template.
            </summary>
        </member>
        <member name="P:Composite.Core.PageTemplates.PlaceholderDescriptor.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:Composite.Core.PageTemplates.Plugins.NonConfigurablePageTemplateProvider">
            <exclude />
        </member>
        <member name="T:Composite.Core.PageTemplates.Plugins.PageTemplateProviderData">
            <exclude />
        </member>
        <member name="T:Composite.Core.PageTemplates.Plugins.NonConfigurablePageTemplateProviderAssembler">
            <exclude />
        </member>
        <member name="M:Composite.Core.PageTemplates.Plugins.NonConfigurablePageTemplateProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.Core.PageTemplates.Plugins.PageTemplateProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PageTemplates.TemplateDefinitionHelper">
            <summary>
            Helper class for working with page template definitions based on <see cref="T:Composite.Core.PageTemplates.IPageTemplate"/>
            </summary>
        </member>
        <member name="M:Composite.Core.PageTemplates.TemplateDefinitionHelper.BuildPageTemplateDescriptor``1(Composite.Core.PageTemplates.IPageTemplate,System.Func{``0},System.Collections.Generic.IDictionary{System.String,System.Reflection.PropertyInfo}@)">
            <summary>
            Builds a page template descriptor. Extracts template's properties and content placeholder properties.
            </summary>
            <param name="templateDefinition">The template definition.</param>
            <param name="descriptorConstructor">The descriptor constructor.</param>
            <param name="placeholderProperties">The placeholder properties.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PageTemplates.TemplateDefinitionHelper.BindPlaceholders(Composite.Core.PageTemplates.IPageTemplate,Composite.Core.PageTemplates.PageContentToRender,System.Collections.Generic.IDictionary{System.String,System.Reflection.PropertyInfo},Composite.Functions.FunctionContextContainer)">
            <summary>
            Binds placeholders' content to the related properties on a template definition
            </summary>
            <param name="template">The template.</param>
            <param name="pageContentToRender">The page rendering job.</param>
            <param name="placeholderProperties">The placeholder properties.</param>
            <param name="functionContextContainer">The function context container, if not null, nested functions fill be evaluated.</param>
        </member>
        <member name="T:Composite.Core.Routing.Foundation.PluginFacades.PageUrlProviderPluginFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Foundation.PluginFacades.PageUrlProviderPluginFacade.GetDefaultProvider">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.MediaUrlData">
            <summary> 
            Information stored in a media url
            </summary>
        </member>
        <member name="P:Composite.Core.Routing.MediaUrlData.MediaId">
            <summary>
            Gets or sets the media id.
            </summary>
            <value>
            The media id.
            </value>
        </member>
        <member name="P:Composite.Core.Routing.MediaUrlData.MediaStore">
            <summary>
            Gets or sets the media store.
            </summary>
            <value>
            The media store.
            </value>
        </member>
        <member name="P:Composite.Core.Routing.MediaUrlData.QueryParameters">
            <summary>
            Gets or sets the query parameters.
            </summary>
            <value>
            The query parameters.
            </value>
        </member>
        <member name="T:Composite.Core.Routing.MediaUrls">
            <summary>    
            Responsible for parsing and building media urls
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.MediaUrls.ParseUrl(System.String)">
            <summary>
            Parses the URL.
            </summary>
            <param name="relativeUrl">The relative URL.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Routing.MediaUrls.ParseUrl(System.String,Composite.Core.Routing.UrlKind@)">
            <summary>
            Parses the URL.
            </summary>
            <param name="relativeUrl">The relative URL.</param>
            <param name="urlKind">Kind of the URL.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Routing.MediaUrls.BuildUrl(Composite.Core.Routing.MediaUrlData,Composite.Core.Routing.UrlKind)">
            <summary>
            Builds the URL.
            </summary>
            <param name="mediaUrlData">The media URL data.</param>
            <param name="urlKind">Kind of the URL.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Routing.Plugins.UrlFormatters.IUrlFormatter">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.UrlFormatters.IUrlFormatter.FormatUrl(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Plugins.UrlFormatters.Runtime.NonConfigurableUrlFormatter">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Plugins.UrlFormatters.Runtime.UrlFormatterData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Routing.Plugins.UrlFormatters.Runtime.UrlFormatterData.Mandatory">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Plugins.UrlFormatters.Runtime.NonConfigurableUrlFormatterAssembler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.UrlFormatters.Runtime.NonConfigurableUrlFormatterAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.Core.Routing.Plugins.UrlFormatters.Runtime.UrlFormatterData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Foundation.PluginFacades.UrlFormattersPluginFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Foundation.PluginFacades.UrlFormattersPluginFacade.FormatUrl(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.UrlKind">
            <summary>
            Url kind
            </summary>
        </member>
        <member name="F:Composite.Core.Routing.UrlKind.Undefined">
            <exclude />
        </member>
        <member name="F:Composite.Core.Routing.UrlKind.Public">
            <summary>
            A main, human friendly url by which a resource is accessed. F.e.:
            Page: "/Home/About"
            An image: "/media/6fb4c70b-12a6-4522-add6-1f40828c5452/Sample images/Colors of Inspiration.jpg"
            </summary>
        </member>
        <member name="F:Composite.Core.Routing.UrlKind.Renderer">
            <summary>
            Url to an ASP.NET handler. F.e. link to a page: "/Renderers/Page.aspx?id=7446ceda-df90-49f0-a183-4e02ed6f6eec"
            Renderer url is expected to be handled without routing.
            </summary>
        </member>
        <member name="F:Composite.Core.Routing.UrlKind.Internal">
            <summary>
            The way links are kept in html content
            For pages 
              Short: ~/page({Page id})
              Full:  ~/page({Page id})[ /c1mode(unpublished) ][ /{PathInfo} ][ ?{Query string} ]
            For media archive
              Short: ~/media({Media file Id})
              Full:  ~/media([{Media store}:]{Media file Id})[ ?{Query string} ]
            </summary>
        </member>
        <member name="F:Composite.Core.Routing.UrlKind.Friendly">
            <summary>
            Friendly url. A short url, by accessing which C1 will make a redirect to related "public" url
            </summary>
        </member>
        <member name="F:Composite.Core.Routing.UrlKind.Redirect">
            <summary>
            Redirect url. As in the case of "friendly urls", is used for supporting obsolete urls 
            </summary>
        </member>
        <member name="T:Composite.Core.Routing.PageUrlData">
            <summary>
            Information stored in a Composite C1 page url
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.PageUrlData.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.PageUrlData.#ctor(Composite.Data.Types.IPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.Routing.PageUrlData"/> class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Composite.Core.Routing.PageUrlData.#ctor(System.Guid,Composite.Data.PublicationScope,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.Routing.PageUrlData"/> class.
            </summary>
            <param name="pageId">The page id.</param>
            <param name="publicationScope">The publication scope.</param>
            <param name="localizationScope">The localization scope.</param>
        </member>
        <member name="P:Composite.Core.Routing.PageUrlData.PageId">
            <summary>
            Gets or sets the page id.
            </summary>
            <value>
            The page id.
            </value>
        </member>
        <member name="P:Composite.Core.Routing.PageUrlData.PublicationScope">
            <summary>
            Gets or sets the publication scope.
            </summary>
            <value>
            The publication scope.
            </value>
        </member>
        <member name="P:Composite.Core.Routing.PageUrlData.LocalizationScope">
            <summary>
            Gets or sets the localization scope.
            </summary>
            <value>
            The localization scope.
            </value>
        </member>
        <member name="P:Composite.Core.Routing.PageUrlData.PathInfo">
            <summary>
            Gets or sets the path info.
            </summary>
            <value>
            The path info.
            </value>
        </member>
        <member name="P:Composite.Core.Routing.PageUrlData.QueryParameters">
            <summary>
            Gets or sets the query parameters.
            </summary>
            <value>
            The query parameters.
            </value>
        </member>
        <member name="T:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlBuilder">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlBuilder.BuildUrlSet(Composite.Data.Types.IPage,System.Guid)">
            <summary>
            Gets url information for a page
            </summary>
            <param name="page">A page</param>
            <param name="parentPageId">Id of parent page, to be used for optimization purposes</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlProvider.CreateUrlBuilder(Composite.Data.PublicationScope,System.Globalization.CultureInfo,Composite.Core.Routing.UrlSpace)">
            <summary>
            Creates a new instance of PageUrlBuilder which will be used while building a C1 pages sitemap
            </summary>
            <param name="publicationScope">The publication scope.</param>
            <param name="localizationScope">The localization scope.</param>
            <param name="urlSpace">The URL space. Is used for providing different urls for f.e. different hostnames, etc.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlProvider.IsInternalUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlProvider.ParseInternalUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlProvider.ParseUrl(System.String,Composite.Core.Routing.UrlSpace,Composite.Core.Routing.UrlKind@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlProvider.ParseUrl(System.String,Composite.Core.Routing.UrlKind@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.IPageUrlProvider.BuildUrl(Composite.Core.Routing.PageUrlData,Composite.Core.Routing.UrlKind,Composite.Core.Routing.UrlSpace)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Plugins.PageUrlsProviders.PageUrlSet">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Routing.Plugins.PageUrlsProviders.PageUrlSet.PublicUrl">
            <summary>
            Url by which page will be accessable
            </summary>
        </member>
        <member name="P:Composite.Core.Routing.Plugins.PageUrlsProviders.PageUrlSet.FriendlyUrl">
            <summary>
            Friendly url, requesting this url will lead to a redirect to PublicUrl
            </summary>
        </member>
        <member name="T:Composite.Core.Routing.Plugins.PageUrlsProviders.Runtime.NonConfigurablePageUrlProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Plugins.PageUrlsProviders.Runtime.PageUrlProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Plugins.PageUrlsProviders.Runtime.NonConfigurablePageUrlProviderAssembler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Plugins.PageUrlsProviders.Runtime.NonConfigurablePageUrlProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.Core.Routing.Plugins.PageUrlsProviders.Runtime.PageUrlProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.Plugins.Runtime.UrlsConfiguration">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.Routing.Plugins.Runtime.UrlsConfiguration.SectionName">
            <exclude />
        </member>
        <member name="P:Composite.Core.Routing.Plugins.Runtime.UrlsConfiguration.DefaultPageUrlProviderName">
            <exclude />
        </member>
        <member name="P:Composite.Core.Routing.Plugins.Runtime.UrlsConfiguration.PageUrlProviders">
            <exclude />
        </member>
        <member name="P:Composite.Core.Routing.Plugins.Runtime.UrlsConfiguration.UrlFormatters">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.PageUrls">
            <summary> 
            Responsible for parsing and building page urls
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.PageUrls.ParseUrl(System.String)">
            <summary>
            Parses the URL.
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Routing.PageUrls.ParseUrl(System.String,Composite.Core.Routing.UrlKind@)">
            <summary>
            Parses the URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="urlKind">Kind of the URL.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Routing.PageUrls.ParseUrl(System.String,Composite.Core.Routing.UrlSpace,Composite.Core.Routing.UrlKind@)">
            <summary>
            Parses the URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="urlSpace">The URL space.</param>
            <param name="urlKind">Kind of the URL.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Routing.PageUrls.BuildUrl(Composite.Core.Routing.PageUrlData,Composite.Core.Routing.UrlKind,Composite.Core.Routing.UrlSpace)">
            <summary>
            Builds the URL.
            </summary>
            <param name="pageUrlData">The page URL data.</param>
            <param name="urlKind">Kind of the URL.</param>
            <param name="urlSpace">The URL space.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Routing.PageUrls.BuildUrl(Composite.Data.Types.IPage,Composite.Core.Routing.UrlKind,Composite.Core.Routing.UrlSpace)">
            <summary>
            Builds the URL.
            </summary>
            <param name="page">The page.</param>
            <param name="urlKind">Kind of the URL.</param>
            <param name="urlSpace">The URL space.</param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.Routing.PageUrls.UrlProvider">
            <exclude />
        </member>
        <member name="T:Composite.Core.Routing.UrlSpace">
            <summary>    
            Describes a set of page urls, generated specifictly. F.e. for a specific hostname or for previewing.
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.UrlSpace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.Routing.UrlSpace"/> class.
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.UrlSpace.#ctor(System.Web.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.Routing.UrlSpace"/> class.
            </summary>
            <param name="httpContext">The HTTP context.</param>
        </member>
        <member name="M:Composite.Core.Routing.UrlSpace.#ctor(System.Web.HttpContextBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Core.Routing.UrlSpace"/> class.
            </summary>
            <param name="httpContextBase">The HTTP context base.</param>
        </member>
        <member name="P:Composite.Core.Routing.UrlSpace.Hostname">
            <summary>
            Gets or sets the hostname.
            </summary>
            <value>
            The hostname.
            </value>
        </member>
        <member name="P:Composite.Core.Routing.UrlSpace.ForceRelativeUrls">
            <summary>
            Disables hostname bindings, so all output urls will be relative. Is used in in-console preview.
            </summary>
        </member>
        <member name="M:Composite.Core.Serialization.CodeGeneration.PropertySerializerManager.GetPropertySerializer(System.Type)">
            <summary>
            Returns a property serializer for the given property type.
            If no serializer exists, one will be runtime code generated.
            </summary>
            <param name="propertyClassType"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Serialization.PrettyPrinter">
            <summary>    
            Used for printing a value to a string in a nice way.
            The result string will contain line feeds etc.
            It handles IData, Lists, Dictionaries, KeyValyePairs, Tupples etc.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.PrettyPrinter.Print(System.Object)">
            <summary>        
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Sql.SqlConnectionManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Sql.SqlConnectionManager.GetConnection(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Threading.TwoPhaseFileLock">
            <summary>
            Algorithm
            
            Initial:  None of the files exists. Enter is allowed. Leave is an exception.
               - Write phase one file
               - Delete phase two file
            
            Enter: Wait until phase two file exists and phase one does not exist. Other AD/Thread has left.
                   Exception: Only wait for max ms
                   - Write phase one file (Preventing other Enter's)
                   - Delete phase two file
            
            Leave: If phase one file exists (if not => I have timed out)
                   - Write phase two file (Allowes other Enter's)
                   - Delete phase one file
            
            </summary>
        </member>
        <member name="M:Composite.Core.Threading.TwoPhaseFileLock.Acquire">
            <summary>
            Acquires the lock.
            </summary>
            <returns>
            Returns true if the lock was obtained successfully. 
            Returns false if the lock was acquried due to timeout.
            </returns>
        </member>
        <member name="M:Composite.Core.Threading.TwoPhaseFileLock.Release">
            <summary>
            Releases the lock.
            </summary>
        </member>
        <member name="P:Composite.Core.Threading.TwoPhaseFileLock.Timeout">
            <summary>
            Time out time in ms. Default is 10000
            </summary>
        </member>
        <member name="T:Composite.Core.Types.AssemblyLocationExtensions">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyLocationExtensions.AddRangeIfNotContained(System.Collections.Specialized.StringCollection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds assembly locations to a string collection of the collection does not already has them.
            Note: Case insensitive
            </summary>
            <param name="stringCollection"></param>
            <param name="assemblyLocations"></param>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyLocationExtensions.AddIfNotContained(System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            Adds a assembly location to a string collection of the collection does not already has it.
            Note: Case insensitive
            </summary>
            <param name="stringCollection"></param>
            <param name="assemblyLocation"></param>
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.CodeCompatibilityChecker">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeCompatibilityChecker.CheckCompatibilityWithAppCodeFolder(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            This method will try to compile the given type to see if any changes done to the type
            will conflict with code in App_Code
            </summary>
            <param name="dataTypeDescriptorToTest"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Types.CodeCompatibilityChecker.CheckIfAppCodeDependsOnInterface(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            This method will check if any code in en App_Code folder depends on the given data interface.
            </summary>
            <param name="dataTypeDescriptorToTest"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Types.CodeCompatibilityChecker.CheckAgainsAppCode(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <summary>
            This method checks to see if any change in the given data type descriptor will make code 
            in App_Code fail and hence the site will fail.
            </summary>
            <param name="dataTypeDescriptorToTest"></param>
            <param name="includeDataTypeDescriptor">
            If true, the data type descriptor will be used instead of the original.
            If false, it will be excluded.
            </param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Types.CodeGenerationBuilder">
            <summary> 
            This class is used when compiling new types at run time in C1.
            It is used in two way. The first usage is for creating types that is located in temp assemblies. 
            Normaly when temp assemblies has ben made a restart of C1 is done. And this leads into the second
            usage which is when the Composite.Generated.dll is compiled. This is done through the implementation
            and adding of the interface <see cref="T:Composite.Core.Types.ICodeProvider"/> and <see cref="T:Composite.Core.Types.CodeGenerationManager"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationBuilder.#ctor(System.String)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="debugLabel">This label will be used for logging when compiling the types.</param>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationBuilder.AddReference(System.Reflection.Assembly)">
            <summary>
            Adds a referenced assembly to be used in the compilation.
            </summary>
            <param name="assembly">The referenced assembly.</param>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationBuilder.AddReference(System.String)">
            <summary>
            Adds a referenced assembly to be used in the compilation.
            </summary>
            <param name="assemblyLocation">The location of the referenced assembly.</param>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationBuilder.AddNamespace(System.CodeDom.CodeNamespace)">
            <summary>
            Adds a code namespace containing types to compile.
            </summary>
            <param name="codeNamespace">Code namespace to add.</param>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationBuilder.AddType(System.String,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Adds a new type declaration to compile. If the type name already exists in
            the given namespace. The type is skipped!
            </summary>
            <param name="namespaceName">Namespace to add the type to.</param>
            <param name="codeTypeDeclaration">Type declaration to compile.</param>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationBuilder.AddTypes(System.String,System.Collections.Generic.IEnumerable{System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Adds new type declarations to compile. If a type name already exists in
            the given namespace. The type is skipped!
            </summary>
            <param name="namespaceName"></param>
            <param name="codeTypeDeclarations"></param>
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.CodeGenerationBuilder.AssemblyLocations">
            <summary>
            Added assembly locations
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.CodeGenerationBuilder.Namespaces">
            <summary>
            Added namespaces
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.CodeGenerationCommon">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationCommon.AddAssemblyLocationsFromBin(System.CodeDom.Compiler.CompilerParameters)">
            <summary>
            Adds all assemblies from bin, except Composite.Generated.dll
            </summary>
            <param name="compilerParameters"></param>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationCommon.AddLoadedAssemblies(System.CodeDom.Compiler.CompilerParameters,System.Boolean)">
            <summary>
            Add assemblies that are loaded in the app domain.
            </summary>
            <param name="compilerParameters">The compiler parameters.</param>
            <param name="includeAppCode">if set to <c>true</c> reference to App_Code will be included to results.</param>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationCommon.AddCommonAssemblies(System.CodeDom.Compiler.CompilerParameters)">
            <summary>
            Add common used assemblies
            </summary>
            <param name="compilerParameters"></param>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationCommon.RemoveGeneratedAssemblies(System.CodeDom.Compiler.CompilerParameters)">
            <summary>
            Removes generated assemblies including Composite.Generated.dll
            </summary>
            <param name="compilerParameters"></param>
        </member>
        <member name="T:Composite.Core.Types.CodeGenerationManager">
            <summary>
            Handles all dynamic type compilations and the generation of Composite.Generated.dll
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationManager.ValidateCompositeGenerate(System.DateTime)">
            <summary>
            Validates that the current Composite.Generated.dll is not compiled after the given 
            time. If it is compiled after the given time. Any attempts to recompile Composite.Generated.dll
            will be ignored. This is used to stop app domains from shutting each other down by recompiles.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationManager.GenerateCompositeGeneratedAssembly(System.Boolean)">
            <summary>
            This method will recompile Composite.Generated.dll and drop it into bin.
            </summary>
            <param name="forceGeneration"></param>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationManager.CompileRuntimeTempTypes(Composite.Core.Types.CodeGenerationBuilder,System.Boolean)">
            <summary>
            This method will compile the type defined in <paramref name="codeGenerationBuilder"/>
            and return the result types. These types exists in a temp assembly, that will be
            deleted when the app domain is terminated.
            </summary>
            <param name="codeGenerationBuilder"></param>
            <param name="verbose"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationManager.IsCompiledAtRuntime(System.Type)">
            <summary>
            This method returns true if the given type <paramref name="type"/> is
            compiled at runetime. Otherwice false.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationManager.IsRecompileNeeded(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            This method returns true if the types given by <paramref name="dependingTypes"/> needs a recompile because
            they either is null or the type given by <paramref name="dependableType"/> has changed and there for
            exists in a compiled at runtime assembly.
            </summary>
            <param name="dependableType">A type that all the types given by <paramref name="dependingTypes"/> depends on. </param>
            <param name="dependingTypes">All types in this enumerable should either be null or depend on the typoe given by <paramref name="dependableType"/></param>
            <returns>Returns true if the types given by <paramref name="dependingTypes"/> needs a recompile.</returns>
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationManager.AddAssemblyCodeProvider(Composite.Core.Types.ICodeProvider)">
            <summary>
            Use this method to add a <see cref="T:Composite.Core.Types.ICodeProvider"/> impelementation
            that will be used when (and only) generating the final Composite.Generated.dll.
            </summary>
            <param name="codeProvider"></param>
        </member>
        <member name="P:Composite.Core.Types.CodeGenerationManager.SuppressGeneration">
            <summary>
            If set to <c>true</c>, /Bin/Composite.Generated.dll won't be overwritten on shutdown
            </summary>
        </member>
        <member name="P:Composite.Core.Types.CodeGenerationManager.CompiledAssemblies">
            <summary>
            Returns all currently temp compiled assemblies.
            </summary>
        </member>
        <member name="T:Composite.Core.Types.ICodeProvider">
            <summary>
            Implementing this interface and regitre an instance with the method <see cref="M:Composite.Core.Types.CodeGenerationManager.AddAssemblyCodeProvider(Composite.Core.Types.ICodeProvider)"/>
            you can get code compiled when C1 shuts down or restarts. 
            Use the <see cref="T:Composite.Core.Types.CodeGenerationBuilder"/> to add code to compile.
            Compiling code when C1 is running see the method <see cref="M:Composite.Core.Types.CodeGenerationManager.CompileRuntimeTempTypes(Composite.Core.Types.CodeGenerationBuilder,System.Boolean)"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.Core.Types.ICodeProvider.GetCodeToCompile(Composite.Core.Types.CodeGenerationBuilder)">
            <summary>
            Add code namespaces and types and references you want to have compiled
            to the builder.
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Composite.Core.WebClient.ApplicationLevelEventHandlers">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ApplicationLevelEventHandlers.Application_Start(System.Object,System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ApplicationLevelEventHandlers.Application_End(System.Object,System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ApplicationLevelEventHandlers.Application_BeginRequest(System.Object,System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ApplicationLevelEventHandlers.Application_EndRequest(System.Object,System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ApplicationLevelEventHandlers.Application_Error(System.Object,System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ApplicationLevelEventHandlers.GetVaryByCustomString(System.Web.HttpContext,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ApplicationLevelEventHandlers.ApplicationStartInitialize(System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.ApplicationLevelEventHandlers.LogRequestDetails">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.ApplicationLevelEventHandlers.LogApplicationLevelErrors">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Media.ResizingAction">
            <summary>    
            Resizing action for <see ref="Composite.Core.WebClient.Media.ImageResizer" />
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Media.ResizingAction.Stretch">
            <summary>
            Stretches image so it fills the specified area. The result image dimensions are newer bigger than original dimensions.
            It is the default action
            </summary>
        </member>
        <member name="F:Composite.Core.WebClient.Media.ResizingAction.Fit">
            <summary>
            Scales image proportionally down (if necessary) so it fits the specified area.
            Also knows as "touch from inside";
            </summary>
        </member>
        <member name="F:Composite.Core.WebClient.Media.ResizingAction.Fill">
            <summary>
            Scales image proportionally down (if necessary) so it fills the specified area. 
            </summary>
        </member>
        <member name="F:Composite.Core.WebClient.Media.ResizingAction.Crop">
            <summary>
            Scales image proportionally down (if necessary) so it fills the specified area, and crops the parts that are outside area's boundaries.
            Also knows as "touch from outside";
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Media.ImageResizer">
            <summary>
            Class that performs image resizing
            </summary>
             <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Media.ImageResizer.GetResizedImage(System.Web.HttpServerUtility,Composite.Data.Types.IMediaFile,Composite.Core.WebClient.Media.ResizingOptions,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets the resized image.
            </summary>
            <param name="httpServerUtility">An instance of <see cref="T:System.Web.HttpServerUtility"/>.</param>
            <param name="file">The media file.</param>
            <param name="resizingOptions">The resizing options.</param>
            <param name="targetImageFormat">The target image format.</param>
            <returns>A full file path to a resized image; null if there's no need to resize the image</returns>
        </member>
        <member name="M:Composite.Core.WebClient.Media.ImageResizer.DrawWithoutBlending(System.Drawing.Graphics,System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a bitmap without background blending on first row and first column
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Media.ImageResizer.SupportedImageFormats">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Media.ImageResizer.SupportedImageFormats.JPG">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Media.ImageResizer.SupportedImageFormats.PNG">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Media.ImageResizer.SupportedImageFormats.TIFF">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Media.ImageResizer.SupportedImageFormats.GIF">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Media.ImageResizer.SupportedImageFormats.BMP">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Media.ResizingOptions">
            <summary>    
            Resizing options for <see ref="Composite.Core.WebClient.Media.ImageResizer" />
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Media.ResizingOptions.Parse(System.Web.HttpServerUtility,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Parses resizing options from query string collection
            </summary>
            <param name="httpServerUtility">An instance of <see ref="System.Web.HttpServerUtility" />.</param>
            <param name="queryString">The query string.</param>
            <returns>Resizing options</returns>
        </member>
        <member name="M:Composite.Core.WebClient.Media.ResizingOptions.FromQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets resizing options from query string
            </summary>
            <param name="queryString">The query string.</param>
            <returns>Resizing options</returns>
        </member>
        <member name="P:Composite.Core.WebClient.Media.ResizingOptions.Height">
            <summary>
            Image heigth
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Media.ResizingOptions.Width">
            <summary>
            Image width
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Media.ResizingOptions.MaxHeight">
            <summary>
            Maximum height
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Media.ResizingOptions.MaxWidth">
            <summary>
            Maximum width
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Media.ResizingOptions.ResizingAction">
            <summary>
            Resizing action
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Media.ResizingOptions.IsEmpty">
            <summary>
            Indicates whether any options were specified
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Data.XhtmlRenderingEncoding">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Renderings.Data.XhtmlRenderingEncoding.None">
            <summary>Do not encode (data fields are parsable as xml snippet)</summary>
        </member>
        <member name="F:Composite.Core.WebClient.Renderings.Data.XhtmlRenderingEncoding.AttributeContent">
            <summary>Data fields should be parsed for use in xml attribute values</summary>
        </member>
        <member name="F:Composite.Core.WebClient.Renderings.Data.XhtmlRenderingEncoding.TextContent">
            <summary>Data fields should be parsed for use xml text</summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Page.PagePreviewBuilder">
            <summary>
            Allow previewing a page 'in mem' in a simulated GET request. Limited information is passed from original client to this request when 
            running in 'classic mode'. In pipeline mode the original context is available for the preview rendering.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PagePreviewBuilder.RenderPreview(Composite.Data.Types.IPage,System.Collections.Generic.IList{Composite.Data.Types.IPagePlaceholderContent})">
            <summary>
            Execute an 'im mem' preview request of the provided page and content. The execution depends on the hosting environment.
            Then running in pipeline mode the current HttpContext is 
            </summary>
            <param name="selectedPage">Page to render. Functionality reading the rendered page ID will get the ID from this object.</param>
            <param name="contents">Content to render on the page</param>
            <returns>The page html as a string when running in classic mode. In Pipeline mode the content is written directly to the HttpContext and an empty string is returned.</returns>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PagePreviewBuilder.AllowChildRequestSessionAccess(System.Web.HttpContext)">
            <summary>
            sigh - this fixes a fucked up issue, where previewing pages containing code writing to Session, 
            will breake all subsequent page previews regardless of content. Should you obtain the wisdom as
            to what exactly is the trick here, I'd love to now. I will leave it as "well, this fix the issue 
            and pass testing. Hurray for Harry Potter and magic!". Oh how I loathe doing that :(
            </summary>
            <param name="ctx">the Http context that will be shared between master and child process</param>
        </member>
        <member name="T:Composite.Core.Routing.Pages.C1PageRoute">
            <summary>
            Implements C1 page route for ASP.NET routing
            </summary>
        </member>
        <member name="F:Composite.Core.Routing.Pages.C1PageRoute.RouteDate_PageUrl">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Pages.C1PageRoute.GetPathInfo">
            <summary>
            Get the additional information that was passed in URL along with page url
            </summary>
            <returns>The PathInfo url part.</returns>
        </member>
        <member name="M:Composite.Core.Routing.Pages.C1PageRoute.RegisterPathInfoUsage">
            <summary>
            This method has to be called to notify the system that PathInfo was used, and the request will not be redirected to "Page not found" page
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.Pages.C1PageRoute.PathInfoHasBeenUsed">
            <exclude/>
        </member>
        <member name="M:Composite.Core.Routing.Pages.C1PageRoute.GetRouteData(System.Web.HttpContextBase)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Pages.C1PageRoute.Dispose">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Pages.C1PageRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Routing.Pages.C1PageRoute.PageUrlData">
            <exclude />
        </member>
        <member name="P:Composite.Core.Routing.Pages.C1PageRoute.PathInfoUsed">
            <summary>
            Gets a value indicating whether path info part of C1 page url has been used.
            </summary>
            <value>
              <c>true</c> if path info has been used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Composite.Core.Routing.Routes">
            <summary>
            Allows adding custom routes with a priority in relation to defined by CompositeC1 routes.
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.Routes.Register">
            <exclude />
        </member>
        <member name="M:Composite.Core.Routing.Routes.RegisterPageRoute(System.Web.Routing.RouteCollection)">
            <summary>
            Registers C1's page route.
            </summary>
        </member>
        <member name="M:Composite.Core.Routing.Routes.Register404Route(System.Web.Routing.RouteCollection)">
            <summary>
            Registers C1's 404 route that catches all requests. 
            This method should be called only after all other routes are registered.
            </summary>
        </member>
        <member name="E:Composite.Core.Routing.Routes.OnBeforePageRouteAdded">
            <summary>
            Occurs before C1 page route is added.
            </summary>
        </member>
        <member name="E:Composite.Core.Routing.Routes.OnAfterPageRouteAdded">
            <summary>
            Occurs after C1 page route is added.
            </summary>
        </member>
        <member name="T:Composite.Core.Routing.Routes.RouteRegistration">
            <summary>
            Handles route registration
            </summary>
            <param name="routeCollection">The route collection.</param>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.RenderingContext">
            <summary>
            Rendering context
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.InitializeFromHttpContext">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.RunResponseHandlers">
            <summary>
            Runs the response handlers.
            </summary>
            <returns><c>true</c> if a handler has already processed the request and no further writing to response should be done; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.GetPagePlaceholderContents">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.ConvertInternalLinks(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.FormatXhtml(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.BuildProfilerReport">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.PreRenderRedirectCheck">
            <summary>
            Redirects to 404 page if PathInfo wasn't used. Adds 404 status code if the current page is specified as 404 page in hostname binding.
            Note that all C1 functions on page have to be executed before calling this method.
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingContext.Dispose">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingContext.ProfilingEnabled">
            <summary>
            Indicates whether performance profiling is enabled.
            </summary>
            <value><c>true</c> if profiling is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingContext.PreviewMode">
            <summary>
            Indicates whether page is shown in preview mode.
            </summary>
            <value><c>true</c> if page is shown in preview mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingContext.Page">
            <summary>
            Gets the current c1 page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingContext.CachingDisabled">
            <summary>
            Indicates whether page caching is disabled.
            </summary>
            <value><c>true</c> if page caching is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.Label">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.Image">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.Url">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.ViewType">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenExternalViewParams.UrlPostArguments">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.SelectElementParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.SelectElementParams.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.DocumentDirtyEvent">
            <summary>
            When added to a document, the document will be marked as 'dirty' and the save button will be enabled.
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.Foundation.BaseControl">
            <summary>
            A generic control with support for client identifiers.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Foundation.BaseControl.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Foundation.BaseControl.OnInit(System.EventArgs)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Foundation.BaseControl.ClientID">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.DocumentDirtyEvent.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.DocumentDirtyEvent.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XhtmlErrorFormatter">
            <summary>
            Provide html formatting for errors
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XhtmlErrorFormatter.GetErrorDescriptionXhtmlDocument(System.Exception,System.String)">
            <summary>
            Create a XhtmlDocument documenting an exception. If the page being rendered is requested by an authenticated C1 Console user the 
            exception information is more verbose.
            </summary>
            <param name="ex"></param>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Xml.XhtmlErrorFormatter.GetErrorDescriptionHtmlElement(System.Exception,System.String)">
            <summary>
            Create a html element documenting an exception. If the page being rendered is requested by an authenticated C1 Console user the 
            exception information is more verbose.
            </summary>
            <param name="ex"></param>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Xml.XDocumentUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XDocumentUtils.Load(System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
            <param name="inputUri">This could be a file or a url</param>
        </member>
        <member name="M:Composite.Core.Xml.XDocumentUtils.Save(System.Xml.Linq.XDocument,System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XDocumentUtils.SaveToFile(System.Xml.Linq.XDocument,System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XDocumentUtils.GetDocumentAsString(System.Xml.Linq.XDocument)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XElementUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.Load(System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
            <param name="inputUri">This could be a file or a url</param>
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.SaveToPath(System.Xml.Linq.XElement,System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.HasSameSiblings(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.GetSameSiblingsBeforeCount(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.GetAttributeValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            Returns the value of the XElement attribute with the specified name. 
            </summary>
            <param name="element"></param>
            <param name="attributeName">The name of the attribute to (try to) get</param>
            <returns>The value of the attribute or null if the attribute does not exist.</returns>
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.GetAttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
            <summary>
            Returns the value of the XElement attribute with the specified name.
            </summary>
            <param name="element">The element.</param>
            <param name="attributeXName">XName of the attribute.</param>
            <returns>
            The value of the attribute or null if the attribute does not exist.
            </returns>
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.ImportSubtree(System.Xml.Linq.XElement,System.Xml.Linq.XElement)">
            <summary>
            Merge in elements and attributes. New child elements and new attibutes are imported to the source. Conflicts are ignored (not merged).
            </summary>
            <param name="source">the structure to add new elements and attributes to</param>
            <param name="toBeImported">what to import</param>
            <returns>The modified source.</returns>
        </member>
        <member name="M:Composite.Core.Xml.XElementUtils.RemoveMatches(System.Xml.Linq.XElement,System.Xml.Linq.XElement)">
            <summary>
            Removes atributes and child elements from source which match ditto 100% in tatoBeExcludedget. Elements in source which has other child elements or attributes are not removed.
            </summary>
            <param name="source">XElement to modify</param>
            <param name="toBeExcluded">what to locate and remove</param>
            <returns>The modified source.</returns>
        </member>
        <member name="T:Composite.Core.Xml.XhtmlWriterExtensions">
            <summary>
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriterExtensions.CreateXhtmlWriter(System.Xml.Linq.XContainer)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XhtmlWriter">
            <summary>
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.#ctor(System.Xml.XmlWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.Close">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.Flush">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.LookupPrefix(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteCData(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteCharEntity(System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteComment(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteEndAttribute">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteEndDocument">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteEndElement">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteEntityRef(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteFullEndElement">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteProcessingInstruction(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteRaw(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteStartDocument(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteStartDocument">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteStartElement(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteString(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlWriter.WriteWhitespace(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.XhtmlWriter.WriteState">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XmlDocumentUtil">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XmlReaderUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XmlReaderUtils.Create(System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XmlReaderUtils.Create(System.String,System.Xml.XmlReaderSettings)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="T:Composite.Core.Xml.XmlSchemaSetUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XmlSchemaSetUtils.AddFromPath(System.Xml.Schema.XmlSchemaSet,System.String,System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="T:Composite.Core.Xml.XmlWriterUtils">
            <summary>   
            This class contains Composite IO versions of System.Xml.XmlWriter/System.Xml.XmlTextWriter Create.
            These method should be used instead of the ones in System.Xml.XmlWriter/System.Xml.XmlTextWriter.
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XmlWriterUtils.Create(System.String)">
            <summary>
            Creates a new XmlWriter
            </summary>
            <param name="path">Path to file</param>
            <returns>Returns the newly created XmlWriter</returns>
        </member>
        <member name="M:Composite.Core.Xml.XmlWriterUtils.Create(System.String,System.Xml.XmlWriterSettings)">
            <summary>
            Creates a new XmlWriter
            </summary>
            <param name="path">Path to file</param>
            <param name="settings">An instance to XmlWriterSettings</param>
            <returns>Returns the newly created XmlWriter</returns>
        </member>
        <member name="T:Composite.Core.Xml.XslCompiledTransformUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XslCompiledTransformUtils.LoadFromPath(System.Xml.Xsl.XslCompiledTransform,System.String)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XslCompiledTransformUtils.LoadFromPath(System.Xml.Xsl.XslCompiledTransform,System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
            <summary>
            This should be a part of the I/O layer
            </summary>
        </member>
        <member name="T:Composite.Data.DataEventArgs">
            <summary>
            This class contains information for data events. See also <see cref="T:Composite.Data.StoreEventArgs"/>.
            </summary>
        </member>
        <member name="M:Composite.Data.DataEventArgs.#ctor(System.Type,Composite.Data.IData)">
            <summary>        
            </summary>
            <param name="dataType"></param>
            <param name="data"></param>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventArgs.GetData``1">
            <summary>
            This is the data item that is the subject of the event fired.
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;().OnBeforeAdd += new DataEventHandler(DataEvents_OnBeforeAdd);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "Foo";
                  
                  connection.Add&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnBeforeAdd(DataEventArgs dataEventArgs)
            {        
               IMyDataType myDataType = dataEventArgs.GetData&lt;IMyDataType&gt;(); // This will be the myDataType instance just created
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <returns>Returns a casted version of the data item that is the suvject of the event fired.</returns>
        </member>
        <member name="P:Composite.Data.DataEventArgs.Data">
            <summary>
            This is the data item that is the subject of the event fired.
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;().OnBeforeAdd += new DataEventHandler(DataEvents_OnBeforeAdd);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "Foo";
                  
                  connection.Add&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnBeforeAdd(object sender, DataEventArgs dataEventArgs)
            {        
               IData myData = dataEventArgs.Data; // This will be the myDataType instance just created
            }
            </code>
            </example>
        </member>
        <member name="P:Composite.Data.DataEventArgs.DataType">
            <summary>
            This is the type of the data item that is the subject of the event fired.
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;().OnBeforeAdd += new DataEventHandler(DataEvents_OnBeforeAdd);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "Foo";
                  
                  connection.Add&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnBeforeAdd(object sender, DataEventArgs dataEventArgs)
            {        
               Type type = dataEventArgs.DataType; // This will be the type of myDataType instance. E.i. IMyDataType
            }
            </code>
            </example>
        </member>
        <member name="T:Composite.Data.DataEventHandler">
            <summary>    
            The event handle type for detailed data change events which fire in-process. See also 
            </summary>
            <param name="sender"></param>
            <param name="dataEventArgs"></param>    
        </member>
        <member name="T:Composite.Data.DataEvents`1">
            <summary>
            This class contains all the event fired by Composite C1 when changes are made to data items. 
            
            Use <see cref="E:Composite.Data.DataEvents`1.OnStoreChanged"/> to catch any data change event, including events originating from other servers in a load balance setup
            or changes made directly to a store (which Composite C1 can detect). This event do not contain details about the specific data item changed and is raised after the fact.
            
            Use the more detailed operations to catch data events that happen in the current website process. The 'OnBefore' events enable you to manipulate data before they are stored. 
            The 'OnAfter' events let you react to data changes in detail, for instance updating a cache.
            
            A combination of <see cref="E:Composite.Data.DataEvents`1.OnStoreChanged"/> and the detailed data events can be used to create a highly optimized cache.
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnBeforeAdd += new DataEventHandler(DataEvents_OnBeforeAdd);
               DataEvents&lt;IMyDataType&gt;.OnStoreChanged += new StoreEventHandler(DataEvents_OnStoreChanged);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "Foo";
                  
                  connection.Add&lt;IMyDataType&gt;(myDataType); // This will fire both of the the events in the local process!
                  // if other servers share data store with this site they will see OnStoreChanged fire.
               }
            }
            
            
            void DataEvents_OnBeforeAdd(object sender, DataEventArgs dataEventArgs)
            {        
                // here a minor update to the cache could be done (like adding info about the new element only).
            }
            
            
            void DataEvents_OnStoreChanged(object sender, StoreEventArgs storeEventArgs)
            {        
                if (!storeEventArgs.DataEventsFired)
                {
                    // an external update event happened - DataEvents_OnBeforeAdd not fired
                    // here a complete cache flush could be done
                }
            }
            </code>
            </example>
            <typeparam name="TData">Data type to attach events to</typeparam>
        </member>
        <member name="E:Composite.Data.DataEvents`1.OnBeforeAdd">
            <summary>
            This event is fired just before a data item is added to the Composite C1 data store.
            See <see cref="M:Composite.Data.DataConnection.Add``1(``0)"/>
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnBeforeAdd += new DataEventHandler(DataEvents_OnBeforeAdd);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "Foo";
                  
                  connection.Add&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnBeforeAdd(object sender, DataEventArgs dataEventArgs)
            {        
            }
            </code>
            </example>
        </member>
        <member name="E:Composite.Data.DataEvents`1.OnAfterAdd">
            <summary>
            This event is fired just after a data item has been added to the Composite C1 data store.
            See <see cref="M:Composite.Data.DataConnection.Add``1(``0)"/>
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnAfterAdd += new DataEventHandler(DataEvents_OnAfterAdd);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "Foo";
                  
                  connection.Add&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnAfterAdd(object sender, DataEventArgs dataEventArgs)
            {        
            }
            </code>
            </example>
        </member>
        <member name="E:Composite.Data.DataEvents`1.OnBeforeUpdate">
            <summary>
            This event is fired just before a data item is updated in the Composite C1 data store.
            See <see cref="M:Composite.Data.DataConnection.Update``1(``0)"/>
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnBeforeUpdate += new DataEventHandler(DataEvents_OnBeforeUpdate);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = 
                     (from item in connection.get&lt;IMyDataType&gt;()
                      where item.Id == 1
                      select item).First();
                      
                  myDataType.Name = "Foo";
                  
                  connection.Update&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnBeforeUpdate(object sender, DataEventArgs dataEventArgs)
            {        
            }
            </code>
            </example>
        </member>
        <member name="E:Composite.Data.DataEvents`1.OnAfterUpdate">
            <summary>
            This event is fired just after a data item has been updated in the Composite C1 data store.
            See <see cref="M:Composite.Data.DataConnection.Update``1(``0)"/>
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnAfterUpdate += new DataEventHandler(DataEvents_OnAfterUpdate);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = 
                     (from item in connection.get&lt;IMyDataType&gt;()
                      where item.Id == 1
                      select item).First();
                      
                  myDataType.Name = "Foo";
                  
                  connection.Update&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnAfterUpdate(object sender, DataEventArgs dataEventArgs)
            {        
            }
            </code>
            </example>
        </member>
        <member name="E:Composite.Data.DataEvents`1.OnDeleted">
            <summary>
            This event is fired after a data item has been deleted from the Composite C1 data store.
            See <see cref="M:Composite.Data.DataConnection.Delete``1(``0)"/>
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnDeleted+= new DataEventHandler(DataEvents_OnDeleted);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = 
                     (from item in connection.get&lt;IMyDataType&gt;()
                      where item.Id == 1
                      select item).First();
                      
                  connection.Delete&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnDeleted(object sender, DataEventArgs dataEventArgs)
            {        
            }
            </code>
            </example>
        </member>
        <member name="E:Composite.Data.DataEvents`1.OnStoreChanged">
            <summary>
            This event is fired after changes has happened to the Composite C1 data store. This may be atomic actions or a larger change to the underlying
            data store. The <see cref="T:Composite.Data.StoreEventArgs"/> class describe the change in broad terms, including a flag indicating is detailed data
            event have been raised or not. 
            
            You can use this event as a simple way to react to data changes (like clearing a cache) or you can mix this with atomic data events (add, delete, update)
            to make a build a more advanced cache.
            
            You should listen to this event in order to support scale out across multiple servers, since this event is meant to be signaled when changes happen
            on another server. In such situations detailed data events will not fire on other machines.
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnStoreChanged+= new StoreEventHandler(DataEvents_OnStoreChanged);
               
               using (DataConnection connection = new DataConnection())
               {
                  IMyDataType myDataType = 
                     (from item in connection.get&lt;IMyDataType&gt;()
                      where item.Id == 1
                      select item).First();
                      
                  connection.Delete&lt;IMyDataType&gt;(myDataType); // This will fire the event!
               }
            }
            
            
            void DataEvents_OnStoreChanged(object sender, StoreEventArgs storeEventArgs)
            {        
            }
            </code>
            </example>
        </member>
        <member name="E:Composite.Data.DataEvents`1.OnNew">
            <summary>
            This event is fired just after a new data item is created.
            See <see cref="M:Composite.Data.DataConnection.New``1"/>
            </summary>
            <example>
            <code>
            void MyMethod()
            {
               DataEvents&lt;IMyDataType&gt;.OnNew += new DataEventHandler(DataEvents_OnNew);
               
               IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;(); // This will fire the event!
            }
            
            
            void DataEvents_OnNew(object sender, DataEventArgs dataEventArgs)
            {        
            }
            </code>
            </example>
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeValidationRegistry">
            <summary>    
            Used to keep information about the validation state of data types.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeValidationRegistry.Validate(System.Type,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            
            </summary>
            <param name="interfaceType"></param>
            <param name="existingDataTypeDescriptor">Use null to get existing data type descriptor</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeValidationRegistry.Validate(System.Type,Composite.Data.DynamicTypes.DataTypeDescriptor,System.String@)">
            <summary>
            
            </summary>
            <param name="interfaceType"></param>
            <param name="existingDataTypeDescriptor">Use null to get existing data type descriptor</param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeValidator">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeValidator.Validate(System.Type,Composite.Data.DynamicTypes.DataTypeDescriptor,System.String@)">
            <summary>
            This method validates if the existing .NET runtime type match the recorded meta data (DataTypeDescriptor).
            In case there is a mismatch, changes might have been done to the runtime type and an update on 
            the existing store(s)could not be performed.
            </summary>
            <param name="interfaceType"></param>
            <param name="existingDataTypeDescriptor"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor">
            <summary>    
            This is a helper class to use when making changes to a data type descriptor.
            It is mainly used by data providers when they have to update the under laying stores.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.#ctor(Composite.Data.DynamicTypes.DataTypeDescriptor,Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <summary>
            </summary>
            <param name="oldDataTypeDescriptor"></param>
            <param name="newDataTypeDescriptor"></param>
            <param name="originalTypeHasData"></param>
        </member>
        <member name="M:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.CreateDataTypeChangeDescriptor">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.OldDataTypeDescriptor">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.NewDataTypeDescriptor">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.OriginalTypeHasData">
            <summary>
            If this is true, extra validation on what things are changed on 
            the data type. Some operation are not allowed if data exists.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.ProviderName">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.LocalesToCopyTo">
            <summary>
            This is only used when enabling localization for the data type in question
            If this empty or contains any cultues, data from existing locale(s) (published/unpublished)
            will be copied to these locales.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.LocaleToCopyFrom">
            <summary>
            This is only used when disabling localization for the data type in question
            Data from this locale (published/unpublished) will be copied to the non-localized store(s).
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.OldSupportedDataScopeIdentifiers">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.PublicationAdded">
            <summary>
            This is true if publication is added from the data type (IPublishControlled added).
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.PublicationRemoved">
            <summary>
            This is true if publication is removed from the data type (IPublishControlled removed).
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.UpdateDataTypeDescriptor.NewHasPublication">
            <summary>
            This is true if the new data type description has publication.
            </summary>
        </member>
        <member name="T:Composite.Data.Foundation.CodeGeneration.DataWrapperCodeGenerator">
            <summary>
            This class genereated code for data wrapper classes.
            </summary>
        </member>
        <member name="M:Composite.Data.Foundation.CodeGeneration.DataWrapperCodeGenerator.CreateCodeTypeDeclaration(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Type,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="interfaceTypeFullName"></param>
            <param name="properties">Tuple(string propertyName, Type propertyType, bool readOnly)</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Foundation.CodeGeneration.DataWrapperCodeGenerator.AddInterfaceProperties(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Type,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="declaration"></param>
            <param name="properties">Tuple(string propertyName, Type propertyType, bool readOnly)</param>
        </member>
        <member name="M:Composite.Data.Foundation.CodeGeneration.DataWrapperCodeGenerator.AddMethods(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Type,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="declaration"></param>
            <param name="properties">Tuple(string propertyName, Type propertyType, bool readOnly)</param>
        </member>
        <member name="T:Composite.Data.GeneratedTypes.InterfaceCodeManager">
            <summary>
            This class handles the caching of code generated data interface.
            It also through <see cref="T:Composite.Data.GeneratedTypes.InterfaceCodeGenerator"/> generated data interfaces,
            that does not exist.    
            </summary>
        </member>
        <member name="M:Composite.Data.GeneratedTypes.InterfaceCodeManager.GetType(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <summary>
            This method will return type given by the dataTypeDescriptor.
            If the data type does not exist, one will be dynamically
            runtime code generated.
            </summary>
            <param name="dataTypeDescriptor"></param>
            <param name="forceReCompilation">If this is true a new type will be compiled regardless if one already exists.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.DataTypeTypesManager">
            <summary>
            This class handles data type specific types:
            - Getting a data type from dataTypeId or data type descriptor
            - Getting a data type empty class from type or data type descriptor
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataTypeTypesManager.GetDataType(System.Guid)">
            <summary>
            Gets the runtime data type for the given data type id.
            In case of generated types, this call might result in a interface code compilation.
            </summary>
            <param name="dataTypeId">The id of the data type.</param>
            <returns>Returns the data type. Never null.</returns>
        </member>
        <member name="M:Composite.Data.DataTypeTypesManager.GetDataType(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            Gets the runtime data type for the given data type id.
            In case of generated types, this call might result in a interface code compilation.
            </summary>
            <param name="dataTypeDescriptor">
            The DataTypeDescriptor for the data type.
            </param>
            <returns>Returns the data type. Never null.</returns>
        </member>
        <member name="M:Composite.Data.DataTypeTypesManager.GetDataTypeEmptyClass(System.Type,System.Boolean)">
            <summary>
            Gets the runtime empty data type for the given data type.
            </summary>
            <param name="dataType"></param>
            <param name="forceReCompilation">
            If this is true a new empty class will be 
            compiled at runtime regardless if it exists or not.
            Use with caution!
            </param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataTypeTypesManager.GetDataTypeEmptyClass(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            Gets the runtime empty data type for the given data type descriptor.
            </summary>
            <param name="dataTypeDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataTypeTypesManager.AddNewAssembly(System.Reflection.Assembly)">
            <summary>
            Call this method whan a new assembly is load/added into the app domain.
            
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="T:Composite.Data.Foundation.EmptyDataClassTypeManager">
            <summary>
            This class caches and if needed creates data empty classes runtime.
            </summary>
        </member>
        <member name="M:Composite.Data.Foundation.EmptyDataClassTypeManager.GetEmptyDataClassType(System.Type,System.Boolean)">
            <summary>
            This method will return the type of the empty data class type.
            If the type does not exist, one will be runtime code generated
            using the type to get a data type descriptor.
            </summary>
            <param name="interfaceType">The data interface type to get the empty class type for.</param>
            <param name="forceReCompilation">
            If this is true a new empty class will be 
            compiled at runtime regardless if it exists or not.
            Use with caution!
            </param>
            <returns>The empty class type for the given data interface type.</returns>
        </member>
        <member name="M:Composite.Data.Foundation.EmptyDataClassTypeManager.GetEmptyDataClassType(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <summary>
            This method will return the type of the empty data class type.
            If the type does not exist, one will be runtime code generated
            using the <paramref name="dataTypeDescriptor"/>. 
            </summary>
            <param name="dataTypeDescriptor">
            The data type descriptor for the data type to get 
            the empty class type for.
            </param>
            <param name="forceReCompilation">
            If this is true a new empty class will be 
            compiled at runtime regardless if it exists or not.
            Use with caution!
            </param>
            <returns>The empty class type for the given data interface type.</returns>
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.IFileSystemDataProvider">
            <summary>    
            This should be implemented by DataProviders that provies IFile data items.    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.IDataProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IDataProvider.GetSupportedInterfaces">
            <summary>
            This method should return all supported data interfaces. 
            That is, all data interfaces that this provider is currently handling.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IDataProvider.GetData``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IDataProvider.GetData``1(Composite.Data.IDataId)">
            <summary>
            This method should return null if the given dataId does not correspond to an IData
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataId"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.Data.Plugins.DataProvider.IDataProvider.Context">
            <summary>
            This is set by the system and is used to create DataSourceId's
            </summary>
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IFileSystemDataProvider.ValidatePath``1(``0,System.String@)">
            <summary>
            This method is called when the absolute file path needs validation.
            Only the data provider knows the base path, so its responsible for 
            creating the full absolute path from an IFile.
            </summary>
            <typeparam name="TFile">An IFile or an sub interface</typeparam>
            <param name="file">The IFile instance</param>
            <param name="errorMessage">Will contain the error message, if any</param>
            <returns>Returns false if something is wrong with the path and <paramref name="errorMessage"/> will contain the error message. Otherwice true.</returns>
        </member>
        <member name="T:Composite.Data.SitemapNavigator">
            <summary>
            Provide access to the Composite C1 sitemap structure and primary page attributes.
            </summary>
        </member>
        <member name="M:Composite.Data.SitemapNavigator.#ctor(Composite.Data.DataConnection)">
            <summary>
            Initialize a new instance of the <see cref="T:Composite.Data.SitemapNavigator"/> class using sitemap data from the provided <see cref="T:Composite.Data.DataConnection"/>.
            </summary>
            <example>
            using (DataConnection dataConnection = new DataConnection())
            {
                SitemapNavigator sitemapNavigator = new SitemapNavigator(dataConnection);
                string thisPageTitle = sitemapNavigator.CurrentPageNode.Title;
            }
            </example>
            <param name="connection">The <see cref="T:Composite.Data.DataConnection"/> to read sitemap data from</param>
        </member>
        <member name="M:Composite.Data.SitemapNavigator.GetPageNodeById(System.Guid)">
            <summary>
            Gets a <see cref="T:Composite.Data.PageNode"/> for a specific page id.
            </summary>
            <param name="id">Id of page to find.</param>
            <returns><see cref="T:Composite.Data.PageNode"/> for the page or null if no page was found with the given id.</returns>
        </member>
        <member name="M:Composite.Data.SitemapNavigator.GetPageNodeByHostname(System.String)">
            <summary>
            Gets the <see cref="T:Composite.Data.PageNode"/> relating to the hostname.
            </summary>
            <param name="hostname">Hostname string to resolve to a <see cref="T:Composite.Data.PageNode"/>.</param>
            <returns>The homepage <see cref="T:Composite.Data.PageNode"/> element matching the specified hostname or the default homepage.</returns>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.HomePageNodes">
            <summary>
            Gets <see cref="T:Composite.Data.PageNode"/>'s for all homepages.
            </summary>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.HomePageIds">
            <summary>
            Gets the Id's for all homepages.
            </summary>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.CurrentPageNode">
            <summary>
            Gets the <see cref="T:Composite.Data.PageNode"/> for the current page.
            </summary>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.CurrentHomePageNode">
            <summary>
            Gets the <see cref="T:Composite.Data.PageNode"/> for the current homepage.
            </summary>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.AllSitemapsXml">
            <summary>
            Gets the sitemaps for all sites. Do not modify this structure. To do modifications new up XElements taking sitemap root elements as parameter. 
            </summary>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.SitemapXml">
            <summary>
            Gets the sitemap for the current site. Do not modify this structure. To do modifications new up XElements taking sitemap root elements as parameter. 
            </summary>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.CurrentPageId">
            <summary>
            Gets the Id of the page currently being rendered
            </summary>
        </member>
        <member name="P:Composite.Data.SitemapNavigator.CurrentHomePageId">
            <summary>
            Gets the Id of the top level page (homepage) for the page currently being rendered
            </summary>
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.UserGroupUserAdderFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.UserGroupUserAdderFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.UserGroupUserAdderFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.UserGroupUserAdderFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.UserGroupUserAdderFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.UserGroupUserAdderFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.Application.ApplicationStartupFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ApplicationStartupFacade.FireBeforeSystemInitialize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ApplicationStartupFacade.FireSystemInitialized">
            <exclude />
        </member>
        <member name="T:Composite.Core.Application.Plugins.ApplicationStartupHandler.IApplicationStartupHandler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.Plugins.ApplicationStartupHandler.IApplicationStartupHandler.OnBeforeInitialize">
            <summary>
            This handler will be called before Composite initialization. The data layer cannot be used here.
            </summary>
        </member>
        <member name="M:Composite.Core.Application.Plugins.ApplicationStartupHandler.IApplicationStartupHandler.OnInitialized">
            <summary>
            This handler will be called after initialization of Composite core.
            </summary>
        </member>
        <member name="T:Composite.Core.Application.ShutdownGuard">
            <summary>
            Postpones raising of shutdown event for ASP.NET
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ShutdownGuard.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ShutdownGuard.Dispose">
            <exclude />
        </member>
        <member name="M:Composite.Core.Caching.CacheManager.Get``2(System.String)">
            <summary>
            Builds a cache instance from a configuration file.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
            <param name="name">The name of the cache.</param>
        </member>
        <member name="F:Composite.Core.Caching.CacheType.Lightweight">
            <summary>
            For "lightweight" objects
            </summary>
        </member>
        <member name="F:Composite.Core.Caching.CacheType.AspNet">
            <summary>
            Standard ASP .NET cache
            </summary>
        </member>
        <member name="F:Composite.Core.Caching.CacheType.Mixed">
            <summary>
            For "heavy" objects - based on weak references + asp.net caching
            </summary>
        </member>
        <member name="T:Composite.Core.Collections.Generic.Hashset`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashset`1.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashset`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashset`1.Contains(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashset`1.Add(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashset`1.Remove(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashset`1.GetKeys">
            <exclude />
        </member>
        <member name="T:Composite.Core.Collections.Generic.Hashtable`2">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.Add(`0,`1)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.TryGetValue(`0,`1@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.ContainsKey(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.Remove(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.Clear">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.Any">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.GetKeys">
            <summary>
            Getting the case collection. This operation is not thread safe.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Collections.Generic.Hashtable`2.GetValues">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.Hashtable`2.Item(`0)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.Hashtable`2.Count">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.SystemSetupFacade">
            <summary>
            This class may not depended on the system being initialized. 
            Any call to the class will never result in the system being initialized
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.SystemSetupFacade.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.SystemSetupFacade.SetFirstTimeStart">
            <summary>
            This method is used to record the very first time the system is started.
            Ths time can later be used to several things like finding files that have been written to etc.
            </summary>
        </member>
        <member name="M:Composite.Core.Configuration.SystemSetupFacade.GetFirstTimeStart">
            <summary>
            Returns the time the system was startet the very first time
            </summary>
            <returns>The very first time the system has been started</returns>        
        </member>
        <member name="P:Composite.Core.Configuration.SystemSetupFacade.IsSystemFirstTimeInitialized">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.DownloadFileMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.DownloadFileMessageQueueItem.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.DownloadFileMessageQueueItem.Url">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.BindEntityTokenToViewQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.BindEntityTokenToViewQueueItem.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.BindEntityTokenToViewQueueItem.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.OpenGenericViewQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.OpenGenericViewQueueItem.#ctor(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.OpenGenericViewQueueItem.#ctor(Composite.C1Console.Security.EntityToken,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenGenericViewQueueItem.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenGenericViewQueueItem.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenGenericViewQueueItem.Label">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenGenericViewQueueItem.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenGenericViewQueueItem.IconResourceHandle">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenGenericViewQueueItem.Url">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenGenericViewQueueItem.UrlPostArguments">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.SaveStatusConsoleMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.SaveStatusConsoleMessageQueueItem.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.SaveStatusConsoleMessageQueueItem.Succeeded">
            <exclude />
        </member>
        <member name="T:Composite.Data.Caching.Cache`2">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Caching.Cache">
            <summary>
            Represents a cache.
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.Caching.Cache._table">
            <exclude />
        </member>
        <member name="F:Composite.Data.Caching.Cache._syncRoot">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache.#ctor(System.String,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache.Get(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache.Add(System.Object,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache.Remove(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache.Clear">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache.ReadConfiguration">
            <exclude />
        </member>
        <member name="P:Composite.Data.Caching.Cache.Enabled">
            <exclude />
        </member>
        <member name="P:Composite.Data.Caching.Cache.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Caching.Cache.ClearOnFlush">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache`2.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache`2.#ctor(System.String,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache`2.Get(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache`2.Remove(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache`2.Add(`0,`1)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.Cache`2.GetKeys">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataConnection">
            <summary>
            Represents a connection to the Composite C1 data system.
            </summary>
            <example>
            Here is an example of how to use it
            <code>
            using (DataConnection connection = new DataConnection())
            {
               var q = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Name == "Foo"
                  select d;
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.DataConnection.#ctor">
            <summary>
            Creates a new <see cref="T:Composite.Data.DataConnection"/> instance inheriting the <see cref="T:Composite.Data.PublicationScope"/>
            and locale set on the call stack. When outside an existing scope this default to PublicationScope,Published and the
            default language on the website. You should use this constructure unless you need to force data to come from an alternative 
            scope. <see cref="T:Composite.Data.DataConnection"/> can be used to access the Composite C1 storage.
            </summary>
            <example>
            Here is an example of how to use it
            <code>
            using (DataConnection connection = new DataConnection())
            {
               var q = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Name == "Foo"
                  select d;
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.DataConnection.#ctor(Composite.Data.PublicationScope)">
            <summary>
            Creates a new <see cref="T:Composite.Data.DataConnection"/> instance with the given <paramref name="scope"/>
            and current (or default) locale. <see cref="T:Composite.Data.DataConnection"/> can be used to access the Composite C1 storage.
            </summary>
            <param name="scope">The <see cref="T:Composite.Data.PublicationScope"/> data should be read from.</param>
            <example>
            Here is an example of how to use it
            <code>
            using (DataConnection connection = new DataConnection(PublicationScope.Published))
            {
               var q = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Name == "Foo"
                  select d;
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.DataConnection.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Creates a new <see cref="T:Composite.Data.DataConnection"/> instance with current or default <see cref="T:Composite.Data.PublicationScope"/>
            and the given <paramref name="locale"/>. <see cref="T:Composite.Data.DataConnection"/> can be used to access the Composite C1 storage.
            </summary>
            <param name="locale">The desired locale. This should be one of the locale found in <see cref="P:Composite.Data.DataConnection.AllLocales"/></param>
            <example>
            Here is an example of how to use it
            <code>
            using (DataConnection connection = new DataConnection(new CultureInfo("da-DK")))
            {
               var q = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Name == "Foo"
                  select d;
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.DataConnection.#ctor(Composite.Data.PublicationScope,System.Globalization.CultureInfo)">
            <summary>
            Creates a new <see cref="T:Composite.Data.DataConnection"/> instance with the given <paramref name="scope"/>
            and the given <paramref name="locale"/>. <see cref="T:Composite.Data.DataConnection"/> can be used to access the Composite C1 storage.
            </summary>
            <param name="scope">The <see cref="T:Composite.Data.PublicationScope"/> data should be read from.</param>
            <param name="locale">The desired locale. This should be one of the locale found in <see cref="P:Composite.Data.DataConnection.AllLocales"/></param>
            <example>
            Here is an example of how to use it
            <code>
            using (DataConnection connection = new DataConnection(PublicationScope.Published, new CultureInfo("da-DK")))
            {
               var q = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Name == "Foo"
                  select d;
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.DataConnection.Get``1">
            <summary>
            Returns an IQueryable of the given IData interface. 
            If no storage supports the given IData interface, an exception is thrown.
            </summary>
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               var q = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Name == "Foo"
                  select d;
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <returns>Returns an IQueryable of the given IData interface for further querying</returns>
        </member>
        <member name="M:Composite.Data.DataConnection.Add``1(``0)">
            <summary>
            Adds the <typeparamref name="TData"/> instance to the default C1 storage.
            If the storage does not exist, then one is created.
            This method triggers the events OnBeforeAdd and OnAfterAdd for the item <paramref name="item"/>. 
            </summary>
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
               myDataType.Name = "John Doe";
               myDataType = connection.Add&lt;IMyDataType&gt;(myDataType); 
            
               // Note that the reassigned of myDataType is important here
               // if its used for an later update.
            
               myDataType.Name = "Jane Doe";
               connection.Update&lt;IMyDataType&gt;(myDataType);
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <param name="item">The data item to add</param>
            <returns>The newly added data item. Note: This could differ from the <paramref name="item"/></returns>
        </member>
        <member name="M:Composite.Data.DataConnection.Add``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the <typeparamref name="TData"/> instances to the default C1 storage.
            If the storage does not exist, then one is created.
            This method triggers the events OnBeforeAdd and OnAfterAdd for each item in <paramref name="items"/>
            </summary>
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               List&lt;IMyDataType&gt; items = new List&lt;IMyDataType&gt;();
               
               for (int i = 0; i &lt; 10; i++)
               {
                  IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
                  myDataType.Name = "John Doe";
                  myDataType.Number = i;
                  items.Add(myDataType);
               }   
               
               connection.Add&lt;IMyDataType&gt;(items);
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <param name="items">The data items to add</param>
            <returns>The newly added data items. Note: These could differ from the items in <paramref name="items"/></returns>
        </member>
        <member name="M:Composite.Data.DataConnection.Update``1(``0)">
            <summary>
            Updates the given <typeparamref name="TData"/> instance in the C1 storage. 
            If any property values has been changed, these would be saved into the storage.
            This method triggers the events OnBeforeUpdate and OnAfterUpdate for the item <paramref name="item"/>
            </summary>
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               IMyDataType myDataType = 
                  (from d in connection.Get&lt;IMyDataType&gt;()
                   where d.Name == "Foo"
                   select d).First();
               
               myDataType.Name = "Bar";
               
               connection.Update&lt;IMyDataType&gt;(myDataType);
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <param name="item">The item to update in the C1 storage</param>
        </member>
        <member name="M:Composite.Data.DataConnection.Update``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Updates the geven <typeparamref name="TData"/> instances in the C1 storage.
            If any property values in any of the <typeparamref name="TData"/> instances, these would be saved into the storage.
            This method triggers the events OnBeforeUpdate and OnAfterUpdate for each item in <paramref name="items"/>
            </summary>
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               IEnumerable&lt;IMyDataType&gt; myDataTypes = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Value > 10
                  select d;
               
               foreach (IMyDataType in myDataTypes)
               {
                  myDataType.Value += 10;
               }   
               
               connection.Update&lt;IMyDataType&gt;(myDataTypes);
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <param name="items">The items to update in the C1 storage</param>
        </member>
        <member name="M:Composite.Data.DataConnection.Delete``1(``0)">
            <summary>
            Deletes the given <typeparamref name="TData"/> instance permently from the C1 storage.        
            This method triggers the event OnDeleted for the item <paramref name="item"/>
            </summary>
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               IMyDataType myDataType = 
                  (from d in connection.Get&lt;IMyDataType&gt;()
                   where d.Name == "Foo"
                   select d).First();
               
               
               connection.Delete&lt;IMyDataType&gt;(myDataType);
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <param name="item">The item to delete</param>
        </member>
        <member name="M:Composite.Data.DataConnection.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Deletes the given <typeparamref name="TData"/> instances permently from the C1 storage.
            This method triggers the event OnDeleted for each item in <paramref name="items"/>
            </summary>
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               IMyDataType myDataTypes = 
                  from d in connection.Get&lt;IMyDataType&gt;()
                  where d.Name == "Foo"
                  select d;
               
               
               connection.Delete&lt;IMyDataType&gt;(myDataTypes);
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <param name="items">The items to delete</param>
        </member>
        <member name="M:Composite.Data.DataConnection.New``1">
            <summary>
            Create a new <typeparamref name="TData"/> that can be added using <see cref="M:Composite.Data.DataConnection.Add``1(``0)"/>.
            This method triggers the event OnNew for the return value of the method.
            </summary>
            <example>
            Here is an example of how to create a new IData instance and add it to the C1 storage.
            <code>
            using (DataConnection connection = new DataConnection())
            {
               IMyDataType myDataType = DataConnection.New&lt;IMyDataType&gt;();
               myDataType.Name = "John Doe";
               connection.Add&lt;IMyDataType&gt;(myDataType);        
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <returns>Returns a new instance of the <typeparamref name="TData"/></returns>
        </member>
        <member name="M:Composite.Data.DataConnection.CreateNew``1">
            <summary>
            Create a new <typeparamref name="TData"/> that can be added using <see cref="M:Composite.Data.DataConnection.Add``1(``0)"/>.
            This method triggers the event OnNew for the return value of the method.
            </summary>
            Here is an example of how to create a new IData instance and add it to the C1 storage.
            <example>
            <code>
            using (DataConnection connection = new DataConnection())
            {
               IMyDataType myDataType = connection.CreateNew&lt;IMyDataType&gt;();
               myDataType.Name = "John Doe";
               connection.Add&lt;IMyDataType&gt;(myDataType);        
            }
            </code>
            </example>
            <typeparam name="TData">An IData interface</typeparam>
            <returns>Returns a new instance of the <typeparamref name="TData"/></returns>
        </member>
        <member name="M:Composite.Data.DataConnection.Dispose">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataConnection.Finalize">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataConnection.Dispose(System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataConnection.CurrentPublicationScope">
            <summary>
            The current publication scope.
            </summary>
        </member>
        <member name="P:Composite.Data.DataConnection.CurrentLocale">
            <summary>
            The current locale.
            </summary>
        </member>
        <member name="P:Composite.Data.DataConnection.AllLocales">
            <summary>
            All locales added to C1.
            </summary>
            <example>
            Here is an example of how to enumerate all locales added to C1.
            <code>
            foreach (CultureInfo locale in DataConnection.Locales)
            {
               // Use the locale
            }
            </code>
            </example>
        </member>
        <member name="P:Composite.Data.DataConnection.SitemapNavigator">
            <summary>
            A SitemapNavigator instance. See <see cref="T:Composite.Data.SitemapNavigator"/>
            </summary>
        </member>
        <member name="M:Composite.Data.DataIconFacade.IsTranslatable(Composite.Data.IData)">
            <summary>
            Checks whether the specified data item can be translated.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataIconFacade.GetTranslationSource``1(``0)">
            <summary>
            Returns the data item either from "Administrated" or from "Public" scope depending on, which has to be used as translation source.
            If onlyTranslateWhenApproved="true" or publication status is not "awaiting publishion" - item from the public scope will be returned.
            </summary>
            <param name="dataFromAdministratedScope">The data item</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.DataIdKeyFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataIdKeyFacade.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataIdKeyFacade.GetKeyValue``1(Composite.Data.DataSourceId,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataIdKeyFacade.GetKeyValue``1(Composite.Data.IDataId,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataIdKeyFacade.GetKeyValue(Composite.Data.DataSourceId,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataIdKeyFacade.GetKeyValue(Composite.Data.IDataId,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataIdKeyFacade.GetDefaultKeyName(Composite.Data.IDataId)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataIdKeyFacade.GetDefaultKeyName(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Foundation.DataWrappingFacade">
            <summary>    
            Wraps data object, so changes to the original object won't be applied until the object is saved. Used for wrapping cached data.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Foundation.DataWrappingFacade.Wrap``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Foundation.DataWrappingFacade.UnWrap``1(``0)">
            <exclude />
        </member>
        <member name="T:Composite.Data.GlobalDataTypeFacade">
            <summary>
            This facade is used for handlign genereted/dynamic global data types
            </summary>
        </member>
        <member name="T:Composite.Data.PageFolderFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetAllFolderTypes">
            <summary>
            Returns all possible page folder types. This is NOT all types that only have been defined on any pages
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.HasFolderDefinitions(Composite.Data.Types.IPage)">
            <summary>
            Returns true if the given page has any folder definitions defined on it
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetDefinedFolderTypes(Composite.Data.Types.IPage)">
            <summary>
            Returns (if any) folder types that are defined on the given page
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetFolderDefinitionId(Composite.Data.Types.IPage,System.Type)">
            <summary>
            Returns the id of a folder definition given the page and folder type
            </summary>
            <param name="page"></param>
            <param name="folderType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetFolderDefinitionId(Composite.Data.Types.IPage,System.Guid)">
            <summary>
            Returns the id (or empty guid if non exists) of a folder definition given the page and folder type id
            </summary>
            <param name="page"></param>
            <param name="folderTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.HasFolderData(Composite.Data.Types.IPage,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetFolderData(Composite.Data.Types.IPage,System.Type)">
            <summary>
            Returns all folder data given the page and folder data type
            </summary>
            <param name="page"></param>
            <param name="pageFolderType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetFolderData(System.Guid,System.Type)">
            <summary>
            Returns all folder data given the page id and folder data type
            </summary>
            <param name="pageId"></param>
            <param name="pageFolderType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetFolderData(Composite.Data.Types.IPage)">
            <summary>
            Returns all folder data for all defined folder types for the given page
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetReferencedPage(Composite.Data.IData)">
            <summary>
            Returns the referenced page
            </summary>
            <param name="folderData"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.AddFolderDefinition(Composite.Data.Types.IPage,System.Type)">
            <summary>
            Adds a data folder type to the given page
            </summary>
            <param name="page"></param>
            <param name="dataFolderType"></param>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.AddFolderDefinition(Composite.Data.Types.IPage,System.Guid)">
            <summary>
            Adds a data folder type to the given page
            </summary>
            <param name="page"></param>
            <param name="dataFolderTypeId"></param>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.RemoveFolderDefinition(Composite.Data.Types.IPage,System.Type,System.Boolean)">
            <summary>
            Removes a data folder type for the given page
            </summary>
            <param name="page"></param>
            <param name="dataFolderType"></param>
            <param name="deleteExistingFolderData"></param>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.RemoveFolderDefinition(Composite.Data.Types.IPage,System.Guid,System.Boolean)">
            <summary>
            Removes a data folder type for the given page
            </summary>
            <param name="page"></param>
            <param name="dataFolderTypeId"></param>
            <param name="deleteExistingFolderData"></param>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.RemoveAllFolderDefinitions(System.Guid,System.Boolean)">
            <summary>
            Removes all data folder definitions given the folder type id
            </summary>
            <param name="dataFolderTypeId"></param>
            <param name="deleteExistingFolderData"></param>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.AssignFolderDataSpecificValues(Composite.Data.IData,Composite.Data.Types.IPage)">
            <summary>
            Updates the given page folder item with new Id and setting the page folder defintion id and defining item id
            </summary>
            <param name="pageFolderData"></param>        
            <param name="definingPage"></param>
        </member>
        <member name="M:Composite.Data.PageFolderFacade.GetDefinitionPageReferencePropertyInfo(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.PageMetaDataFacade">
            <summary>
            Using the same name for a metadata definition is allowed iff metadata type and label are the same
            on all instances.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetAllMetaDataTypes">
            <summary>
            Returns all possible meta data types. This is NOT types that only have been defined on any pages or page type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetDefinedMetaDataTypes(Composite.Data.Types.IPage)">
            <summary>
            Returns all meta data types that are defined on the given page.
            </summary>
            <param name="page">If this is null, Guid.Empty is assumed as defining item id</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetDefinedMetaDataTypeAndNames(Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaDataDefinition(System.Guid,System.String)">
            <summary>
            Returns a pagemeta data definition given the defining item id or null if none exists.
            </summary>
            <param name="definingItemId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaDataContainerByDefinitionName(System.String)">
            <summary>
            Returns the composition container given the page metadata defintion name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetAllMetaDataContainers">
            <summary>
            Gets all meta data containers ordered. If none exists in the system, a default is created
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetAllowedMetaDataContainers(Composite.Data.Types.IPage)">
            <summary>
            Returns all allowed metadata containers on the given page
            </summary>
            <param name="page">If null, empty guid is used (whole website)</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetAllowedMetaDataTypes(Composite.Data.Types.IPage)">
            <summary>
            Return all allowed metadata types on the given page
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetAllowedMetaDataDefinitions(Composite.Data.Types.IPage)">
            <summary>
            Returns all allowed metadata definitions on the given page
            </summary>
            <param name="page">If null, empty guid is used (whole website)</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.IsDefinitionAllowed(Composite.Data.Types.IPageMetaDataDefinition,Composite.Data.Types.IPage)">
            <summary>
            Returns true if the given page metadata definition is allowed for the given page
            </summary>
            <param name="pageMetaDataDefinition"></param>
            <param name="page">If null, empty guid is used (whole website)</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaData(System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaData(Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaData(Composite.Data.Types.IPage,Composite.Data.DataScopeIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaData(Composite.Data.Types.IPage,System.String,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaData(Composite.Data.Types.IPage,System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaData(System.Guid,System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaDataAffectedPages(Composite.Data.Types.IPage,System.String)">
            <summary>
            Gets all existing pages that are affected by the given meta data definition
            </summary>
            <param name="definingPage">If null, empty guid is used</param>
            <param name="definitionName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaDataAffectedPages(Composite.Data.Types.IPage,System.Int32,System.Int32)">
            <summary>
            Gets all existing pages that are affected by the given meta data definition
            </summary>
            <param name="definingPage"></param>
            <param name="startLevel"></param>
            <param name="levels"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaDataAffectedPagesByPageTypeId(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.IsDefinitionAllowed(System.Guid,System.String,System.String,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.IsNewContainerIdAllowed(System.Guid,System.String,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.AddMetaDataDefinition(Composite.Data.Types.IPage,System.String,System.String,System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Adds a new metadata definition to the given page
            </summary>
            <param name="definingPage"></param>
            <param name="name"></param>
            <param name="label"></param>
            <param name="metaDataTypeId"></param>
            <param name="metaDataContainerId"></param>
            <param name="startLevel"></param>
            <param name="levels"></param>        
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.AddMetaDataDefinition(Composite.Data.Types.IPageType,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Adds a new metadata definition to the given pagetype
            </summary>
            <param name="definingPageType"></param>
            <param name="name"></param>
            <param name="label"></param>
            <param name="metaDataTypeId"></param>
            <param name="metaDataContainerId"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.AddDefinition(System.Guid,System.String,System.String,System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Adds a new metadata definition to the given definingItemId. Guid.Empty is the whole website
            </summary>
            <param name="definingItemId"></param>
            <param name="name"></param>
            <param name="label"></param>
            <param name="metaDataTypeId"></param>
            <param name="metaDataContainerId"></param>
            <param name="startLevel"></param>
            <param name="levels"></param>        
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.AddNewMetaDataToExistingPages(Composite.Data.Types.IPage,System.String,Composite.Data.IData)">
            <summary>
            Using the given page this methods adds meta data instances that are missing
            </summary>
            <param name="definingPage">If null, empty guid is used</param>
            <param name="metaDataDefinitionName"></param>
            <param name="newDataTemplate"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.AddNewMetaDataToExistingPage(Composite.Data.Types.IPage,System.String,System.Type,Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.AddNewMetaDataToExistingPages(Composite.Data.Types.IPageType,System.String,Composite.Data.IData)">
            <summary>
            Using the given pageType this methods adds meta data instances that are missing
            </summary>
            <param name="definingPageType"></param>
            <param name="metaDataDefinitionName"></param>
            <param name="newDataTemplate"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.UpdateDefinition(System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Update an existing metadata definition with possible new label and container id
            </summary>
            <param name="definingItemId"></param>
            <param name="definitionName"></param>
            <param name="newLabel"></param>
            <param name="newMetaDataContainerId"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.UpdateDefinition(System.Guid,System.String,System.String,System.Int32,System.Int32,System.Guid)">
            <summary>
            Update an existing metadata definition with possible new label and container id
            </summary>
            <param name="definingItemId"></param>
            <param name="definitionName"></param>
            <param name="newLabel"></param>
            <param name="newLevels"></param>
            <param name="newStartLevel"></param>
            <param name="newMetaDataContainerId"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.RemoveMetaDataDefinition(Composite.Data.Types.IPage,System.String,System.Boolean)">
            <summary>
            Removes a metadata definition and possibly deletes all data items that are defined by it
            </summary>
            <param name="definingPage"></param>
            <param name="definitionName"></param>        
            <param name="deleteExistingMetaData"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.RemoveMetaDataDefinition(Composite.Data.Types.IPageType,System.String,System.Boolean)">
            <summary>
            Removes a metadata definition and possibly deletes all data items that are defined by it
            </summary>
            <param name="definingPageType"></param>
            <param name="definitionName"></param>        
            <param name="deleteExistingMetaData"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.RemoveDefinition(System.Guid,System.String,System.Boolean)">
            <summary>
            Removes a metadata definition and possibly deletes all data items that are defined by it
            </summary>
            <param name="definingItemId"></param>
            <param name="definitionName"></param>        
            <param name="deleteExistingMetaData"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.RemoveAllDefinitions(System.Guid,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.AssignMetaDataSpecificValues(Composite.Data.IData,System.String,Composite.Data.Types.IPage)">
            <summary>
            Updates the given metadata item with new Id and setting the metadata defintion name and defining item id
            </summary>
            <param name="metaData"></param>
            <param name="metaDataDefinitionName"></param>
            <param name="definingPage"></param>
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetDefinitionNamePropertyInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetDefinitionPageReferencePropertyInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaDataReferencedPageId(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataFacade.GetMetaDataReferencedPage(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="T:Composite.Data.PageNode">
            <summary>
            Represents a page in the Composite C1 sitemap hierarchy.
            </summary>
        </member>
        <member name="M:Composite.Data.PageNode.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Create a new PageNode based on a XElement from the sitemap
            </summary>
            <param name="sitemapElement">The sitemap element.</param>
        </member>
        <member name="M:Composite.Data.PageNode.GetPageNodes(Composite.Data.SitemapScope)">
            <summary>
            Returns <see cref="T:Composite.Data.PageNode"/> elements that is with the <see cref="T:Composite.Data.SitemapScope"/> of this page-
            </summary>
            <param name="scope">The scope.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageNode.GetPageIds(Composite.Data.SitemapScope)">
            <summary>
            Return the Page Id's that is with the <see cref="T:Composite.Data.SitemapScope"/> of this page-
            </summary>
            <param name="scope">The scope.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageNode.ToString">
            <summary>
            Serialize the page specific state to a string for reading.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Composite.Data.PageNode.Id">
            <summary>
            The Id of the page
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.Title">
            <summary>
            The Title of the page
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.MenuTitle">
            <summary>
            The Menu Title of the page
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.ChangedDate">
            <summary>
            The time the page was changed last
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.Description">
            <summary>
            The Description of the page
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.Url">
            <summary>
            Url to this page.
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.Level">
            <summary>
            The level this page is placed at in the sitemap. Level 1 is a homepage, level 2 are children of the homepage and so on.
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.ParentPage">
            <summary>
            Returns the parent <see cref="T:Composite.Data.PageNode"/>.
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.ChildPages">
            <summary>
            Returns <see cref="T:Composite.Data.PageNode"/> elements that represent the immediate children of this page.
            </summary>
        </member>
        <member name="P:Composite.Data.PageNode.SitemapXml">
            <summary>
            XML representing the page and it's decendants. Do NOT modify this structure. To do modifications, clone this first.
            </summary>
        </member>
        <member name="T:Composite.Data.DataInterceptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataInterceptor.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataInterceptor.InterceptGetData``1(System.Linq.IQueryable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataInterceptor.InterceptGetDataFromDataSourceId``1(``0)">
            <exclude />
        </member>
        <member name="T:Composite.Data.NewInstanceDefaultFieldValueAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.NewInstanceDefaultFieldValueAttribute.GetValue">
            <exclude />
        </member>
        <member name="P:Composite.Data.NewInstanceDefaultFieldValueAttribute.HasValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.FunctionBasedNewInstanceDefaultFieldValueAttribute">
            <summary>
            Assign this attribute to a data type property to enforce a default value for the property on newly created instanced of your data type.
            You specify a serialized C1 Function - this C1 Function will be executed and the result will be written to this property.
            </summary>
            <example> This sample shows how to use the FunctionBasedNewInstanceDefaultFieldValue attribute.
            Here the current date and time is set on the Created property through the use of the C1 Function Composite.Utils.Date.Now.
            <code>
            // data interface attributes ...
            interface IMyDataType : IData
            {
                [FunctionBasedNewInstanceDefaultFieldValue(@"&lt;f:function name='Composite.Utils.Date.Now' xmlns:f='http://www.composite.net/ns/function/1.0' /&gt;")]
                [StoreFieldType(PhysicalStoreFieldType.DateTime)]
                [ImmutableFieldId("{D75EA67F-AD14-4BAB-8547-6D87002809F1}")]
                DateTime Created { get; set; }
                
                // more data properties ...
                
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.FunctionBasedNewInstanceDefaultFieldValueAttribute.#ctor(System.String)">
            <summary>
            Specify a C1 Function call that will provide a default value for this field. The function call is expressed as XML.
            Example: &lt;f:function name='Composite.Utils.Date.Now' xmlns:f='http://www.composite.net/ns/function/1.0' /&gt;
            </summary>
            <param name="functionDescription">Serialized C1 Function call</param>
        </member>
        <member name="M:Composite.Data.FunctionBasedNewInstanceDefaultFieldValueAttribute.GetValue">
            <summary>
            Execute the C1 Function defined for this attribute and return the result.
            </summary>
            <returns>Result of C1 Function call</returns>
        </member>
        <member name="P:Composite.Data.FunctionBasedNewInstanceDefaultFieldValueAttribute.FunctionDescription">
            <exclude />
        </member>
        <member name="P:Composite.Data.FunctionBasedNewInstanceDefaultFieldValueAttribute.HasValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.IChangeHistory">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.IData">
            <summary>
            Base interface for data types in Composite C1.
            </summary>
        </member>
        <member name="P:Composite.Data.IData.DataSourceId">
            <summary>
            Uniquely identify this data element, its type and what provider it came from.
            </summary>
        </member>
        <member name="P:Composite.Data.IChangeHistory.ChangeDate">
            <exclude />
        </member>
        <member name="P:Composite.Data.IChangeHistory.ChangedBy">
            <exclude />
        </member>
        <member name="T:Composite.Data.ProcessControlled.IProcessController">
            <summary>    
            Providers element actions for data types that have attributes inherited from <see cref="T:Composite.Data.ProcessControllerTypeAttribute"/>
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.Data.ProcessControlled.IProcessController.GetActions(Composite.Data.IData,System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.PublicationScope">
            <summary>
            Define the scope of data in relation to publication status. Data which support publication should always be maintained 
            in the “Unpublihed” scope, while reading data on the public website should always be done in the “Published” scope. 
            Correct setting of the PublicationScope is typically handled by Composite C1 and should in general not be changed by developers. 
            Setting an explicit PublicationScope is typically only needed on new service end-points or 
            if specific features relating to data updating / publication is desired.
            See <see cref="T:Composite.Data.DataConnection"/>    
            </summary>
        </member>
        <member name="F:Composite.Data.PublicationScope.Published">
            <summary>
            Only show data that has been published.
            </summary>
        </member>
        <member name="F:Composite.Data.PublicationScope.Unpublished">
            <summary>
            Show / update unpublished data.
            </summary>
        </member>
        <member name="T:Composite.Data.SitemapScope">
            <summary>
            Define a set of elements in a tree structure, relative to a particular node.
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.Current">
            <summary>
            This page.
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.Children">
            <summary>
            Children of this page.
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.Descendants">
            <summary>
            All descendants of this page.
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.DescendantsAndCurrent">
            <summary>
            All descendants of this page and this page.
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.Siblings">
            <summary>
            Pages sharing the same parent as this page, excluding this page.
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.SiblingsAndSelf">
            <summary>
            Pages sharing the same parent as this page, including this page.
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.Ancestors">
            <summary>
            All ancenstor pages
            </summary>
        </member>
        <member name="F:Composite.Data.SitemapScope.AncestorsAndCurrent">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Parent">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level1">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level1AndSiblings">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level1AndDescendants">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level2">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level2AndSiblings">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level2AndDescendants">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level3">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level3AndSiblings">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level3AndDescendants">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level4">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level4AndSiblings">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.Level4AndDescendants">
            <exclude />
        </member>
        <member name="F:Composite.Data.SitemapScope.All">
            <exclude />
        </member>
        <member name="T:Composite.Data.Streams.CachedMemoryStream">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Streams.CachedMemoryStream.Close">
            <exclude />
        </member>
        <member name="M:Composite.Data.Streams.CachedMemoryStream.Dispose(System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Streams.CachedMemoryStream.Data">
            <exclude />
        </member>
        <member name="T:Composite.Data.Streams.FileStreamManagerAttribute">
            <summary>
            Expected on <see cref="T:Composite.Data.Types.IFile"/> classes to identify what <see cref="T:Composite.Data.Streams.IFileStreamManager"/> can provide read/write and monitoring access to files.
            </summary>
        </member>
        <member name="M:Composite.Data.Streams.FileStreamManagerAttribute.#ctor(System.Type)">
            <summary>
            Identify the <see cref="T:Composite.Data.Streams.IFileStreamManager"/> that provide read/write and monitoring access to the file represented by the <see cref="T:Composite.Data.Types.IFile"/> this 
            <see cref="T:Composite.Data.Streams.FileStreamManagerAttribute"/> is attached to.
            </summary>
            <param name="fileStreamManagerType">the type of the class implementing <see cref="T:Composite.Data.Streams.IFileStreamManager"/> for this file.</param>
        </member>
        <member name="T:Composite.Data.Streams.FileChangeType">
            <summary>
            Declare what type of change happened to a file.
            </summary>
        </member>
        <member name="F:Composite.Data.Streams.FileChangeType.Undefined">
            <exclude />
        </member>
        <member name="F:Composite.Data.Streams.FileChangeType.Modified">
            <exclude />
        </member>
        <member name="F:Composite.Data.Streams.FileChangeType.Renamed">
            <exclude />
        </member>
        <member name="F:Composite.Data.Streams.FileChangeType.Deleted">
            <exclude />
        </member>
        <member name="T:Composite.Data.Streams.OnFileChangedDelegate">
            <summary>
            Delegate used to signal changes to a file.
            </summary>
        </member>
        <member name="T:Composite.Data.Streams.IFileStreamManager">
            <summary>
            Data Providers which expose <see cref="T:Composite.Data.Types.IFile"/> elements 
            (like <see cref="T:Composite.Data.Types.IMediaFile"/> for a custom Media File Provider) expose access to stream reads/writes by annotating 
            the class implementing <see cref="T:Composite.Data.Types.IFile"/> with the <see cref="T:Composite.Data.Streams.FileStreamManagerAttribute"/> attribute, 
            passing the type of a <see cref="T:Composite.Data.Streams.IFileStreamManager"/> as attribute parameter.
            Composite C1 will, via the attribute on the <see cref="T:Composite.Data.Types.IFile"/>, get the type responsible for stream reads/writes.
            
            The class implementing this interface is expected to provide read/write access to the file store being introduced by a file oriented File Provider.
            </summary>
            <example>
            Here is an example of how to inform Composite C1 about IFileStreamManager
            <code>
            [FileStreamManager(typeof(MyFileStreamManager))]
            public abstract class SomeFile : IFile
            {
               /// ....
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.Streams.IFileStreamManager.GetReadStream(Composite.Data.Types.IFile)">
            <summary>
            Returns the stream for the given file, represented as IFile. The stream is for reading.
            </summary>
            <param name="file">The data element representing the file for which a read stream is desired.</param>
            <returns>Stream for reading</returns>
        </member>
        <member name="M:Composite.Data.Streams.IFileStreamManager.GetNewWriteStream(Composite.Data.Types.IFile)">
            <summary>
            Returns the stream for the given file, represented as IFile. This may be a new file, in which case the file stream manager is expected to create the file.
            </summary>
            <param name="file">The data element representing the file for which a write stream is desired.</param>
            <returns>Stream for writing</returns>
        </member>
        <member name="M:Composite.Data.Streams.IFileStreamManager.SubscribeOnFileChanged(Composite.Data.Types.IFile,Composite.Data.Streams.OnFileChangedDelegate)">
            <summary>
            The provided handler should be invoked if the file, represented as IFile, changes in the concrete store this IFileStreamManager represents.
            </summary>
            <param name="file">The file to monitor for file changes</param>
            <param name="handler">The handler to be invoked on changes</param>
        </member>
        <member name="T:Composite.Data.IPageData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.IPageData.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.IPageData.PageId">
            <exclude />
        </member>
        <member name="T:Composite.Data.IPageFolderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUrlConfiguration">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUrlConfiguration.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUrlConfiguration.PageUrlSuffix">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IHostnameBinding">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.Hostname">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.Culture">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.HomePageId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.PageNotFoundUrl">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.Aliases">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.IncludeHomePageInUrl">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IHostnameBinding.IncludeCultureInUrl">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IInlineFunctionAssemblyReference">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunctionAssemblyReference.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunctionAssemblyReference.Function">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunctionAssemblyReference.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunctionAssemblyReference.Location">
            <summary>
            This could be either Bin or System
            </summary>
        </member>
        <member name="T:Composite.Data.Types.IInlineFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunction.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunction.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunction.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunction.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IInlineFunction.CodePath">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageFolderDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageFolderDefinition.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageFolderDefinition.PageId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageFolderDefinition.FolderTypeId">
            <exclude />
        </member>
        <member name="T:Composite.Data.IPageMetaData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.ProcessControlled.IPublishControlled">
            <summary>
            Add this interface to your data type to support publication workflow.
            </summary>
        </member>
        <member name="T:Composite.Data.ProcessControlled.IProcessControlled">
            <summary>
            This interface is for internal use. DO NOT INHERIT
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.IPublishControlled.PublicationStatus">
            <summary>
            The workflow status of data.
            </summary>
        </member>
        <member name="P:Composite.Data.IPageMetaData.FieldName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageMetaDataDefinition">
            <summary>    
            Page meta data definition. 
            </summary>
            <remarks>
            Using the same name for a metadata definition is allowed if metadata type and label are the same
            on all instances.
            </remarks>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.DefiningItemId">
            <summary>
            This is an id of a page or pagetype item and a reference to the
            elemen where this description is defined.
            This should be an id of a page or pagetype og Guid.Empty for 
            the whole website
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.Label">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.MetaDataContainerId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.MetaDataTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.StartLevel">
            <summary>
            Start level number relativ to the page where this is defined.
            0 will include the page it self
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IPageMetaDataDefinition.Levels">
            <summary>
            The number of levels this definition affects
            Use int.Max for branch
            </summary>
        </member>
        <member name="T:Composite.Data.Types.PageMetaDataDefinitionEqualityComparer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageMetaDataDefinitionEqualityComparer.Equals(Composite.Data.Types.IPageMetaDataDefinition,Composite.Data.Types.IPageMetaDataDefinition)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageMetaDataDefinitionEqualityComparer.GetHashCode(Composite.Data.Types.IPageMetaDataDefinition)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypeMetaDataTypeLink">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeMetaDataTypeLink.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeMetaDataTypeLink.PageTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeMetaDataTypeLink.DataTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeMetaDataTypeLink.Name">
            <summary>
            This should match the name of the ICompositionDescription
            </summary>
        </member>
        <member name="T:Composite.Data.Types.IPageTypeMetaDataTypeLinkExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IPageTypeMetaDataTypeLinkExtensionMethods.RemoveDeadLinks(System.Collections.Generic.IEnumerable{Composite.Data.Types.IPageTypeMetaDataTypeLink})">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IDataItemTreeAttachmentPoint">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IDataItemTreeAttachmentPoint.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IDataItemTreeAttachmentPoint.TreeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IDataItemTreeAttachmentPoint.Position">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IDataItemTreeAttachmentPoint.InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IDataItemTreeAttachmentPoint.KeyValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.PageTypeHomepageRelation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.Types.PageTypeHomepageRelation.NoRestriction">
            <exclude />
        </member>
        <member name="F:Composite.Data.Types.PageTypeHomepageRelation.OnlySubPages">
            <exclude />
        </member>
        <member name="F:Composite.Data.Types.PageTypeHomepageRelation.OnlyHomePages">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.PageTypeHomepageRelationExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageTypeHomepageRelationExtensionMethods.GetPageTypeHomepageRelation(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageTypeHomepageRelationExtensionMethods.ToPageTypeHomepageRelationString(Composite.Data.Types.PageTypeHomepageRelation)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.PageTypeExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageTypeExtensionMethods.GetChildPageSelectablePageTypes(Composite.Data.Types.IPage,Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.Available">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.PresetMenuTitle">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.DefaultTemplateId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.HomepageRelation">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageType.DefaultChildPageType">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypeDataFolderTypeLink">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeDataFolderTypeLink.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeDataFolderTypeLink.PageTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeDataFolderTypeLink.DataTypeId">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypeDataFolderTypeLinkExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IPageTypeDataFolderTypeLinkExtensionMethods.RemoveDeadLinks(System.Collections.Generic.IEnumerable{Composite.Data.Types.IPageTypeDataFolderTypeLink})">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypeDefaultPageContent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeDefaultPageContent.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeDefaultPageContent.PageTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeDefaultPageContent.PlaceHolderId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeDefaultPageContent.Content">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypePageTemplateRestriction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypePageTemplateRestriction.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypePageTemplateRestriction.PageTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypePageTemplateRestriction.PageTemplateId">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypeParentRestriction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeParentRestriction.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeParentRestriction.PageTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeParentRestriction.AllowedParentPageTypeId">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypeTreeLink">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeTreeLink.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeTreeLink.PageTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageTypeTreeLink.TreeId">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTypeTreeLinkExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IPageTypeTreeLinkExtensionMethods.RemoveDeadLinks(System.Collections.Generic.IEnumerable{Composite.Data.Types.IPageTypeTreeLink})">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserGroupActivePerspective">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupActivePerspective.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupActivePerspective.UserGroupId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupActivePerspective.SerializedEntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.ISearchEngineOptimizationKeyword">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISearchEngineOptimizationKeyword.Keyword">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.ITaskItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ITaskItem.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ITaskItem.TaskId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ITaskItem.TaskManagerType">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ITaskItem.SerializedFlowToken">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ITaskItem.StartTime">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserGroup">
            <summary>    
            This data interface represents a user group in Composite C1. This can be used to query user groups through a <see cref="T:Composite.Data.DataConnection"/>. 
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IUserGroup.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroup.Name">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserGroupPermissionDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupPermissionDefinition.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupPermissionDefinition.UserGroupId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupPermissionDefinition.SerializedEntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserGroupPermissionDefinitionPermissionType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupPermissionDefinitionPermissionType.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupPermissionDefinitionPermissionType.UserGroupPermissionDefinitionId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserGroupPermissionDefinitionPermissionType.PermissionTypeName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserUserGroupRelation">
            <summary>    
            This data interface represents a user relation to a user group in Composite C1. This can be used to query user group members through a <see cref="T:Composite.Data.DataConnection"/>. 
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IUserUserGroupRelation.UserId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserUserGroupRelation.UserGroupId">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.AttachingPoint">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.PerspectivesRoot">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.ContentPerspective">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.ContentPerspectiveWebsiteItems">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.MediaPerspective">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.DataPerspective">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.DesignPerspective">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.LayoutPerspective">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.FunctionPerspective">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.SystemPerspective">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.AttachingPoint.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementAttachingPointFacade">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementAttachingPointFacade.IsAttachingPoint(Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.AttachingPoint)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementAttachingPointFacade.IsAttachingPoint(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementAttachingPointFacade.GetAttachingPoint(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.PiggybagSerializer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.PiggybagSerializer.Serialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.PiggybagSerializer.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementActionProvider.ElementActionProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementActionProvider.IElementActionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementActionProvider.IElementActionProvider.GetActions(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementActionProvider.NonConfigurableElementActionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementActionProvider.NonConfigurableElementActionProviderAssembler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementActionProvider.NonConfigurableElementActionProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.C1Console.Elements.Plugins.ElementActionProvider.ElementActionProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.SpecificTreeRefresher">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.SpecificTreeRefresher.#ctor(Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.SpecificTreeRefresher.PostRefreshMesseges(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.DeleteTreeRefresher">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.DeleteTreeRefresher.#ctor(Composite.C1Console.Security.EntityToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.DeleteTreeRefresher.PostRefreshMesseges">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.DeleteTreeRefresher.PostRefreshMesseges(System.Boolean)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.ParentTreeRefresher">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ParentTreeRefresher.#ctor(Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ParentTreeRefresher.PostRefreshMesseges(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ParentTreeRefresher.PostRefreshMesseges(Composite.C1Console.Security.EntityToken,System.Int32)">
            <summary>
            
            </summary>
            <param name="childEntityToken"></param>
            <param name="parentLevel">1 means the first parent, 2 means the second, etc.</param>
        </member>
        <member name="T:Composite.C1Console.Actions.UpdateTreeRefresher">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.UpdateTreeRefresher.#ctor(Composite.C1Console.Security.EntityToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.UpdateTreeRefresher.PostRefreshMesseges(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.IFlowUiDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.LockedByUsername">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.LockedActionToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.LockedEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.Workflows.EntityTokenLockedEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderData">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderPosition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderPosition.Top">
            <summary>
            At the top
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderPosition.Bottom">
            <summary>
            At the bottom
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderResult">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderResult.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderResult.Elements">
            <summary>
            IF this is null, then the hole result is ignored
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderResult.Position">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderResult.PositionPriority">
            <summary>
            This is used if more than one element attaching provider is adding elements.
            Bigger is higher.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.IElementAttachingProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.IElementAttachingProvider.HaveCustomChildElements(Composite.C1Console.Security.EntityToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This is only called when rendering root nodes. Used to switch HasChildren from false to true.
            </summary>
            <param name="parentEntityToken"></param>
            /// <param name="piggybag"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.IElementAttachingProvider.GetAlternateElementList(Composite.C1Console.Security.EntityToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            If null is returned, the result is ignored
            </summary>
            <param name="parentEntityToken"></param>
            <param name="piggybag"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.IElementAttachingProvider.GetChildren(Composite.C1Console.Security.EntityToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.IElementAttachingProvider.Context">
            <summary>
            The system will supply an ElementProviderContext to the provider
            to use for creating ElementHandles
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.IMultibleResultElementAttachingProvider.GetAlternateElementLists(Composite.C1Console.Security.EntityToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            If null is returned, the result is ignored
            </summary>
            <param name="parentEntityToken"></param>
            <param name="piggybag"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementAttachingProvider.NonConfigurableElementAttachingProvider">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ILocaleAwareElementProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ILocaleAwareElementProvider.GetForeignRoots(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ILocaleAwareElementProvider.GetForeignChildren(Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ILocaleAwareElementProvider.ContainsLocalizedData">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.TreeLockBehavior">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Elements.TreeLockBehavior.None">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Elements.TreeLockBehavior.Normal">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.FlushAttribute">
            <summary>
            This attribute registres a method that can be called to make a local flush
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.FlushAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="methodName">The name of the method to call when doing a local flush. Must be of type: static void() </param>
        </member>
        <member name="P:Composite.C1Console.Events.FlushAttribute.MethodName">
            <exclude />
        </member>
        <member name="T:Composite.Core.Extensions.HttpContextExtensionMethods">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.HttpContextExtensionMethods.RequestIsAvaliable(System.Web.HttpContext)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Extensions.IApplicationHostExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IApplicationHostExtensionMethods.ShutdownInitiated(System.Web.Hosting.IApplicationHost)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Extensions.IQueryableExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.Random``1(System.Linq.IQueryable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.TakeRandom``1(System.Linq.IQueryable{``0},System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.IsEnumerableQuery``1(System.Linq.IQueryable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.Any(System.Linq.IQueryable)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.OrderBy(System.Linq.IQueryable,System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.OrderBy(System.Linq.IQueryable,System.Type,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.OrderByDescending(System.Linq.IQueryable,System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.ThenBy(System.Linq.IOrderedQueryable,System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.ThenBy(System.Linq.IOrderedQueryable,System.Type,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.ThenByDescending(System.Linq.IOrderedQueryable,System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.OrderBy``1(System.Linq.IQueryable{``0},System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.OrderByDescending``1(System.Linq.IQueryable{``0},System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.ThenBy``1(System.Linq.IOrderedQueryable{``0},System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.ThenByDescending``1(System.Linq.IOrderedQueryable{``0},System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.IQueryableExtensionMethods.ApplyOrder``1(System.Linq.IQueryable{``0},System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.LazyFunctionProviedPropertyAttribute">
            <summary>
            This is for internal use only! It is a work around to function providing
            a IPropertyValidatorBuilder that provides CodeDOM when the data type
            interface is code generated. This means that the functions should
            be loaded BEFORE the interface is code generated, which is bad architecture.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.LazyFunctionProviedPropertyAttribute.#ctor(System.String)">
            <summary>
            </summary>
            <param name="functionMarkup"></param>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.LazyFunctionProviedPropertyAttribute.DoCreateValidator(System.Type)">
            <summary>
            
            </summary>
            <param name="targetType"></param>
            <returns></returns>
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.NullIntegerRangeValidatorAttribute">
            <summary>
            Validator rule for data type properties.
            Validate that an nullable integer - when not null - has a value than falls within a minimum and maximum value. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.NullIntegerRangeValidatorAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Validator rule for data type properties.
            Validate that an nullable integer - when not null - has a value than falls within a minimum and maximum value. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.NullIntegerRangeValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.NullIntegerRangeValidatorAttribute.LowerBound">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.NullIntegerRangeValidatorAttribute.UpperBound">
            <exclude />
        </member>
        <member name="T:Composite.Functions.FunctionAttribute">
            <summary>
            Adds a desctiotion about a C1 Function.
            
            Different C1 Function providers let developers create new C1 Functions by creating artifacts like static funtions in C#,
            Razor Web Pages, User Controls etc. These C1 Functions can have descriptions and this attribute let you control this
            description.
            
            The use of this attribute is relative to the C1 Function provider being used.
            </summary>
            <example>
            Here is an example of how to use <see cref="T:Composite.Functions.FunctionAttribute"/>:
            <code>
            [Function(Description="The description goes here")]
            public static int GetItemCount() 
            { 
                // more code here
            }
            </code>
            </example>
            <example>
            Here is an example of how to use <see cref="T:Composite.Functions.FunctionAttribute"/> to annotate a class:
            <code>
            [FunctionParameter(Label="Item count", DefaultValue=10)]
            public int ItemCount { get; set; } 
            </code>
            Note that <see cref="P:Composite.Functions.FunctionParameterAttribute.Name"/> is not expected when <see cref="T:Composite.Functions.FunctionParameterAttribute"/> is used this way.
            </example>
        </member>
        <member name="M:Composite.Functions.FunctionAttribute.#ctor">
            <summary>
            Describe a function for use in the C1 Function system. 
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionAttribute.Description">
            <summary>
            The description of the function.
            </summary>
        </member>
        <member name="T:Composite.Functions.FunctionParameterAttribute">
            <summary>
            Adds information about C1 Function parameters like label, help text, default value and custom widget markup.
            
            Different C1 Function providers let developers create new C1 Functions by creating artifacts like static funtions in C#,
            Razor Web Pages, User Controls etc. These C1 Functions can have parameters, typically defined as actual parameters (for
            static functions) or as public get/set propeties. This attribute signal that a C1 Function parameter is being defined and
            add label, help etc.
            
            The use of this attribute is relative to the C1 Function provider being used.
            </summary>
            <example>
            Here is an example of how to use <see cref="T:Composite.Functions.FunctionParameterAttribute"/> to annotate multiple parameters of a function:
            <code>
            [FunctionParameter(Name="searchTerm", Label="Search term", Help="One or more keywords to search for")]
            [FunctionParameter(Name="filter", Label="Filter", Help="Filter to apply to data before searching for search term", DefaultValue=null)]    
            public static int GetItemCount( string searchTerm, Expression&lt;Func&lt;IMyDataType,bool&gt;&gt; filter ) 
            { 
                if (filter == null ) filter = _defaultFilter;
                // more code here
            }
            </code>
            Note that <see cref="P:Composite.Functions.FunctionParameterAttribute.Name"/> is required when <see cref="T:Composite.Functions.FunctionParameterAttribute"/> is used this way.
            </example>
            <example>
            Here is an example of how to use <see cref="T:Composite.Functions.FunctionParameterAttribute"/> to annotate a property:
            <code>
            [FunctionParameter(Label="Item count", DefaultValue=10)]
            public int ItemCount { get; set; } 
            </code>
            Note that <see cref="P:Composite.Functions.FunctionParameterAttribute.Name"/> is not expected when <see cref="T:Composite.Functions.FunctionParameterAttribute"/> is used this way.
            </example>
        </member>
        <member name="M:Composite.Functions.FunctionParameterAttribute.#ctor">
            <summary>
            Describe a function parameter for use in the C1 Function system. 
            </summary>
        </member>
        <member name="M:Composite.Functions.FunctionParameterAttribute.GetWidgetFunctionProvider(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Gets the widget markup
            </summary>
            <param name="owner">Class that contains</param>
            <param name="parameterProperty">The parameter property.</param>
            <returns></returns>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.Name">
            <summary>
            The name of the function parameter being described. This should match the parameter name in the method.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.Label">
            <summary>
            Human readable label for this parameter
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.Help">
            <summary>
            Human readable help for this parameter
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.WidgetMarkup">
            <summary>
            Set this property to control the form input field used to set the parameters value. 
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.WidgetFunctionName">
            <summary>
            Gets or sets the name of the widget function.
            </summary>
            <value>
            The name of the widget function.
            </value>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.WidgetFactoryMethod">
            <summary>
            Gets or sets the widget factory method.
            </summary>
            <value>
            The widget factory method.
            </value>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.WidgetFactoryClass">
            <summary>
            Gets or sets the widget factory class.
            </summary>
            <value>
            The widget factory class.
            </value>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.DefaultValue">
            <summary>
            Optional. Default value that should be assigned to the parameter if not specified by the caller. You can use 'null' for complex objects that can not be expressed in attribute code and the check for null in the code.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.HasDefaultValue">
            <summary>
            Indicate if this parameter definition has a default value or not.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.HasName">
            <summary>
            Indicate if Name is defined for this attribute.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.HasLabel">
            <summary>
            Indicate if Label is defined for this attribute.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.HasHelp">
            <summary>
            Indicate if Help is defined for this attribute.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterAttribute.HasWidgetMarkup">
            <summary>
            Indicate if WidgetMarkup is defined for this attribute.
            </summary>
        </member>
        <member name="T:Composite.Functions.ICompoundFunction">
            <summary>
            Indicates that a function is allowed to have recursive calls.
            </summary>
        </member>
        <member name="T:Composite.Functions.Inline.InlineFunctionCreateMethodErrorHandler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionCreateMethodErrorHandler.OnCompileError(System.Int32,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionCreateMethodErrorHandler.OnMissingContainerType(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionCreateMethodErrorHandler.OnNamespaceMismatch(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionCreateMethodErrorHandler.OnMissionMethod(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.InlineFunctionCreateMethodErrorHandler.HasErrors">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.OnCompileError(System.Int32,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.OnMissingContainerType(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.OnNamespaceMismatch(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.OnMissionMethod(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.CompileErrors">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.MissingContainerType">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.NamespaceMismatch">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.MissionMethod">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.StringInlineFunctionCreateMethodErrorHandler.HasErrors">
            <exclude />
        </member>
        <member name="T:Composite.Functions.StandardFunctionSecurityAncestorProvider">
            <summary>
            Use this security ancestor provider for custom functions that
            will be an element under the 'All Functions' section in the C1 console.
            This provider assumes that the full name of the function, including namespace,
            is stored in the Id property of the entity token.   
            Example:
            entityToken.Id = "Composite.Forms.Renderer"    
            NOTE: That this might have changed if someone changes this in the provider code!
            </summary>
        </member>
        <member name="M:Composite.Functions.StandardFunctionSecurityAncestorProvider.GetParents(Composite.C1Console.Security.EntityToken)">
            <summary>
            Returns a parent entity token for the given function entity token.
            </summary>
            <param name="entityToken"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Functions.StandardFunctions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardFunctions.GetDefaultFunctionByType(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardFunctions.StringFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardFunctions.DateTimeFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardFunctions.BooleanFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardFunctions.DecimalFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardFunctions.IntegerFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardFunctions.GuidFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardFunctions.XhtmlDocumentFunction">
            <exclude />
        </member>
        <member name="T:Composite.Functions.XslExtensionsManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.XslExtensionsManager.Register(System.Xml.Xsl.XsltArgumentList)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.ICacheSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.ICacheSettings.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.ICacheSettings.Enabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.ICacheSettings.Size">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.ICachingSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.ICachingSettings.Enabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.ICachingSettings.Caches">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.InstallationInformationFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.InstallationInformationFacade.InstallationId">
            <exclude />
        </member>
        <member name="T:Composite.Core.Instrumentation.PerformanceCounterFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.SystemStartupIncrement">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.BeginElementCreation">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.EndElementCreation(Composite.Core.Instrumentation.IPerformanceCounterToken,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="performanceToken">The token returned by BeginElementCreation</param>
            <param name="resultElementCount">Element count after security filtering</param>
            <param name="totalElementCount">Element count before security filtering</param>
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.BeginAspNetControlCompile">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.EndAspNetControlCompile(Composite.Core.Instrumentation.IPerformanceCounterToken,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.BeginPageHookCreation">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.EndPageHookCreation(Composite.Core.Instrumentation.IPerformanceCounterToken,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.EntityTokenParentCacheHitIncrement">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.PerformanceCounterFacade.EntityTokenParentCacheMissIncrement">
            <exclude />
        </member>
        <member name="T:Composite.Core.Instrumentation.IPerformanceCounterToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.A``1(System.String)">
            <summary>  
            Used for creating cache keys for LINQ expressions, it has a short name to keep the keys short  
            </summary>
        </member>
        <member name="T:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.ICacheKeyProvider">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionVisitors.CacheKeyBuilderExpressionVisitor.ICacheKeyProvider.GetCacheKey">
            <exclude />
        </member>
        <member name="T:Composite.Core.Localization.LocalizationFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsLocaleInstalled(System.String)">
            <summary>
            Returns true if the given locale is already installed
            </summary>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsLocaleInstalled(System.Globalization.CultureInfo)">
            <summary>
            Returns true if the given locale is already installed
            </summary>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsUrlMappingNameInUse(System.String)">
            <summary>
            Returns true if the given url mapping name has already been used
            </summary>
            <param name="urlMappingName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsUrlMappingNameInUse(System.Globalization.CultureInfo,System.String)">
            <summary>
            Returns true if the given url mapping name has already been used
            </summary>
            <param name="cultureInfoToExclude">This locale is disregarding when checking if url mapping is already used. 
            This is usefull when renaming the url mapping name for a given locale</param>
            <param name="urlMappingName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsUrlMappingNameInUse(System.String,System.String)">
            <summary>
            Returns true if the given url mapping name has already been used
            </summary>
            <param name="cultureNameToExclude">This locale is disregarding when checking if url mapping is already used. 
            This is usefull when renaming the url mapping name for a given locale</param>
            <param name="urlMappingName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.AddLocale(System.String,System.String,System.Boolean)">
            <summary>
            Adds a locale to the system. Throws exception if the given locale has already been installed or
            if the given url mapping name has already been used. If the given locale is the first, its set 
            to be the default locale.
            </summary>
            <param name="cultureName"></param>
            <param name="urlMappingName"></param>
            <param name="addAccessToAllUsers"></param>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.RenameUrlMappingNameForLocale(System.String,System.String)">
            <summary>
            Use this method to rename the url mapping name of a given installed locale. Throws exception if
            the given locale is not installed or if the given url mapping name is already used.
            </summary>
            <param name="cultureName"></param>
            <param name="newUrlMappingName"></param>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.AddLocale(System.Globalization.CultureInfo,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a locale to the system. Throws exception if the given locale has already been installed or
            if the given url mapping name has already been used. If the given locale is the first, its set 
            to be the default locale.
            </summary>
            <param name="cultureInfo"></param>
            <param name="urlMappingName"></param>
            <param name="addAccessToAllUsers"></param>
            <param name="makeFlush"></param>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.SetDefaultLocale(System.Globalization.CultureInfo)">
            <summary>
            Sets the given locale as default locale. Returns true if setted, false if the given locale is already the default locale.
            </summary>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsDefaultLocale(System.Globalization.CultureInfo)">
            <summary>
            Returns true if the given locale is default. Default locales can not be removed.
            </summary>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsDefaultLocale(System.String)">
            <summary>
            Returns true if the given locale is default. Default locales can not be removed.
            </summary>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsLastLocale">
            <summary>
            Returns true if only one installed locale is left. The last locale can not be removed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsTypesUsingLocalization">
            <summary>
            Returns true if any types is localized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsOnlyActiveLocaleForSomeUsers(System.String)">
            <summary>
            Returns true if the given locale is the only active locale for any user. 
            If this is the case, the locale can not be removed
            </summary>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.IsOnlyActiveLocaleForSomeUsers(System.Globalization.CultureInfo)">
            <summary>
            Returns true if the given locale is the only active locale for any user. 
            If this is the case, the locale can not be removed
            </summary>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.RemoveLocale(System.String)">
            <summary>
            Removes the given locale, all data is lost
            </summary>
            <param name="cultureName"></param>
        </member>
        <member name="M:Composite.Core.Localization.LocalizationFacade.RemoveLocale(System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Removes the given locale, all data is lost
            </summary>
            <param name="cultureInfo"></param>
            <param name="makeFlush"></param>
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.LocalePackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.LocalePackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.LocalePackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.LocalePackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.LocalePackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.LocalePackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageVersionBumberFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageVersionBumberFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.PackageVersionBumberFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Data.PageManager">
            <summary>
            Provides basic data access to IPage and IPageStructure data
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.PageManager.GetPageById(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageManager.GetPageById(System.Guid,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageManager.GetParentID(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageManager.GetParentId(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageManager.GetLocalOrdering(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageManager.GetChildrenIDs(System.Guid)">
            <summary>
            
            </summary>
            <param name="parentPageId">Empty guild will yield all root pages</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageManager.GetPlaceholderContent(System.Guid)">
            <exclude />
        </member>
        <member name="T:Composite.Data.PageUrlType">
            <summary>
            Page url type
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.PageUrlType.Undefined">
            <exclude />
        </member>
        <member name="F:Composite.Data.PageUrlType.Public">
            <summary>
            A main url by with a C1 page is accessed. F.e. "/Home/About.aspx"
            </summary>
        </member>
        <member name="F:Composite.Data.PageUrlType.Published">
            <summary>
            A main url by with a C1 page is accessed. F.e. "/Home/About.aspx"
            </summary>
        </member>
        <member name="F:Composite.Data.PageUrlType.Internal">
            <summary>
            Unpublihed reference to a page. F.e. "/Renderers/Page.aspx?id=7446ceda-df90-49f0-a183-4e02ed6f6eec"
            </summary>
        </member>
        <member name="F:Composite.Data.PageUrlType.Unpublished">
            <summary>
            Unpublihed reference to a page. F.e. "/Renderers/Page.aspx?id=7446ceda-df90-49f0-a183-4e02ed6f6eec"
            </summary>
        </member>
        <member name="F:Composite.Data.PageUrlType.Friendly">
            <summary>
            Friendly url. A short url, by accessing which C1 will make a redirect to related "public" url
            </summary>
        </member>
        <member name="T:Composite.Data.PageUrl">
            <summary>
            Represents a page url
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.PageUrl.#ctor(Composite.Data.PublicationScope,System.Globalization.CultureInfo,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageUrl.#ctor(Composite.Data.PublicationScope,System.Globalization.CultureInfo,System.Guid,Composite.Data.PageUrlType)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageUrl.GetPage">
            <summary>
            Gets the page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageUrl.Build">
            <summary>
            Builds a url.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageUrl.Build(Composite.Data.PageUrlType)">
            <summary>
            Builds a url of the the specified URL type.
            </summary>
            <param name="urlType">Type of the URL.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageUrl.Parse(System.String)">
            <summary>
            Parses the specified URL.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:Composite.Data.PageUrl.Parse(System.String,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            Parses the specified URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="queryParameters">The query parameters that weren't used to define which page was accessed.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageUrl.ParseQueryString(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            To be used for handling 'internal' links.
            </summary>
            <param name="queryString">Query string.</param>
            <param name="notUsedQueryParameters">Query string parameters that were not used.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.PageUrl.TryParseFriendlyUrl(System.String,Composite.Data.PageUrl@)">
            <summary>
            Looks for a friendly URL and set pageUrl if found.
            </summary>
            <param name="relativeUrl">The string to match to a friendly URL</param>
            <param name="pageUrl">The matching page, if a match was found. Otherwise null.</param>
            <returns>True if a friendly URL match was found</returns>
        </member>
        <member name="P:Composite.Data.PageUrl.UrlType">
            <summary>
            Gets the type of the URL.
            </summary>
            <value>The type of the URL.</value>
        </member>
        <member name="P:Composite.Data.PageUrl.PublicationScope">
            <summary>
            Gets the publication scope.
            </summary>
            <value>The publication scope.</value>
        </member>
        <member name="P:Composite.Data.PageUrl.Locale">
            <summary>
            Gets the locale.
            </summary>
            <value>The locale.</value>
        </member>
        <member name="P:Composite.Data.PageUrl.PageId">
            <summary>
            Gets the page id.
            </summary>
            <value>The page id.</value>
        </member>
        <member name="T:Composite.Core.Logging.LogManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LogManager.LogLinesRequestLimit">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogManager.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogManager.DeleteLogFile(System.DateTime)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogManager.GetLastStartupTime">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogManager.GetLoggingDates">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogManager.GetLogEntriesCount(System.DateTime,System.DateTime,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogManager.GetLogEntriesCountByDate(System.DateTime,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogManager.GetLogEntries(System.DateTime,System.DateTime,System.Boolean,System.Int32)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FileXslTransformationPackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.Parallelization.ParallelFacade">
            <summary>
            Allows running tasks in parallel while passing C1 data context to created tasks
            </summary>
        </member>
        <member name="M:Composite.Core.Parallelization.ParallelFacade.For(System.Int32,System.Int32,System.Action{System.Int32})">
            <summary>
            Executes a for (For in Visual Basic) loop in which iterations may run in parallel.
            </summary>
            <param name="fromInclusive">The start index, inclusive.</param>
            <param name="toExclusive">The end index, exclusive.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
        </member>
        <member name="M:Composite.Core.Parallelization.ParallelFacade.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on an IEnumerable in which iterations may run in parallel.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Data.KeyTemplatedXhtmlRendererAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Data.XhtmlRendererProviderAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Data.XhtmlRendererProviderAttribute.BuildRenderer">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Data.XhtmlRendererProviderAttribute.SupportedRenderingType">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Data.KeyTemplatedXhtmlRendererAttribute.#ctor(Composite.Core.WebClient.Renderings.Data.XhtmlRenderingType,System.String)">
            <summary>
            Created a XHTML Renderer that uses the specified template to create markup.
            The key of the data will be inserted into the specified template where '{id}' is.
            If you spcify '{label}' the system will fetch the value of the label field and insert it.
            You also can use '{field:__a field name__}' syntax to insert a field value.
            Use '~' to create absolute paths.
            Example: <example>&lt;a href='~/showProduct.aspx?id={id}'>read more about {label}&lt;/a></example>
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Data.KeyTemplatedXhtmlRendererAttribute.#ctor(Composite.Core.WebClient.Renderings.Data.XhtmlRenderingType,Composite.Core.WebClient.Renderings.Data.XhtmlRenderingEncoding,System.String)">
            <summary>
            Created a XHTML Renderer that uses the specified template to create markup.
            The key of the data will be inserted into the specified template where '{id}' is.
            If you spcify '{label}' the system will fetch the value of the label field and insert it.
            You also can use '{field:__a field name__}' syntax to insert a field value.
            Use '~' to create absolute paths.
            Example: <example>&lt;a href='~/showProduct.aspx?id={id}'>read more about {label}&lt;/a></example>
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Data.KeyTemplatedXhtmlRendererAttribute.BuildRenderer">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Data.KeyTemplatedXhtmlRendererAttribute.FormatedTemplate">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Data.KeyTemplatedXhtmlRendererAttribute.SupportedRenderingType">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Data.IDataXhtmlRenderer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Data.IDataXhtmlRenderer.Render(Composite.Data.IDataReference)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.SqlDataProviderCodeBuilder.AddExistingDataType(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Collections.Generic.IEnumerable{Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoreDataScope})">
            <summary>
            This will not add needed entity class and data context field names if the data entity class does not exist
            </summary>
            <param name="dataTypeDescriptor"></param>
            <param name="sqlDataTypeStoreDataScopes"></param>
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.SqlDataProviderCodeProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Foundation.RequireTransactionScope">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Foundation.SqlDataTypeStoreTable">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Foundation.SqlDataTypeStoreTableKey">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.IGeneratedTypesDataProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.IDynamicDataProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IDynamicDataProvider.GetKnownInterfaces">
            <summary>
            This method should return ALL data interface that the provider knows. Including
            currently not supported interface due to configuratoion and/or store errors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IDynamicDataProvider.CreateStore(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IDynamicDataProvider.AlterStore(Composite.Data.DynamicTypes.UpdateDataTypeDescriptor,System.Boolean)">
            <summary>
            
            </summary>
            <param name="updateDataTypeDescriptor"></param>
            <param name="forceCompile">If this is true and the provider uses dynamic compilations. It should compile its helper regardless.</param>
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IDynamicDataProvider.DropStore(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.IWritableDataProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IWritableDataProvider.Update(System.Collections.Generic.IEnumerable{Composite.Data.IData})">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IWritableDataProvider.AddNew``1(System.Collections.Generic.IEnumerable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IWritableDataProvider.Delete(System.Collections.Generic.IEnumerable{Composite.Data.DataSourceId})">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.IGeneratedTypesDataProvider.GetGeneratedInterfaces">
            <summary>
            This method should return all genereted data interface types that the provider supports,
            and nothing more.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.ILocalizedDataProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.ILocalizedDataProvider.AddLocale(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.ILocalizedDataProvider.RemoveLocale(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataProvider.EnsureNeededTypes(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Collections.Generic.IEnumerable{Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoreDataScope},System.Collections.Generic.Dictionary{Composite.Data.DynamicTypes.DataTypeDescriptor,System.Collections.Generic.IEnumerable{Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoreDataScope}},System.Type@,System.Collections.Generic.Dictionary{Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Foundation.SqlDataTypeStoreTableKey,System.Tuple{System.Reflection.FieldInfo,System.Type}}@,System.Boolean)">
            <summary>
            Checks that tables related to specified data type included in current DataContext class, if not - compiles a new version of DataContext that contains them
            </summary>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataProvider.UpdateCreatedSqlDataTypeStoreTables(System.Type)">
            <summary>
            This method updates the DataContextQueryableFieldInfo property on all existing store tables.
            </summary>
            <remarks>
            This is needed due to the fact that all data stores share the same
            DataContext class and the DataContext class is code generated everytime
            a new store is code generated.
            </remarks>
            <param name="newDataContextClassType"></param>
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.XmlDataProviderCodeProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.XmlProviderCodeGenerator">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStore">
            <summary>
            This class contains information used by the XmlDataProvider 
            when handling CRUD operations.
            There exists one of these per data type. 
            This class contains one entry per data-scope/locale-scope that contains
            the filename and element name.
            </summary>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStore.DataProviderHelperType">
            <summary>
            This is a implementation of <see cref="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.IXmlDataProviderHelper"/> and <see cref="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase"/>
            </summary>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStoreCreator.#ctor(System.String)">
            <summary>
            </summary>
            <param name="fileStoreDirectory"></param>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStoreCreator.CreateStoreResult(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Type,System.Type,System.Collections.Generic.IEnumerable{Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStoreDataScope})">
            <summary>
            This class is used to create <see cref="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStore"/>.
            Either for existing stores or for just newly created/added stores.
            There exist one store for each data type that the provider handles.
            While the <see cref="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStore"/> is created, the input and 
            configuration is validated.
            </summary>
            <param name="dataTypeDescriptor"></param>
            <param name="dataProviderHelperClassType">The runtime type for the generated implementation of <see cref="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.IXmlDataProviderHelper"/></param>
            <param name="dataIdClassType">The runtime type for the generated data id class.</param>
            <param name="xmlDataTypeStoreDataScopes">If this is null, default values will be created.</param>
            <returns>
            Returns a <see cref="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStore"/> if it is valid, else null 
            </returns>
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.InstallLocalPackageWorkflow">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.FormsWorkflow">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.Initialize(System.IServiceProvider)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.Uninitialize(System.IServiceProvider)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.GetBinding``1(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.TryGetBinding``1(System.String,``0@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.UpdateBinding(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.UpdateBindings(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.BindingExist(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.GetDataItemFromEntityToken``1">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.ReportException(System.Exception)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.LogMessage(Composite.Core.Logging.LogLevel,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.ShowMessage(Composite.C1Console.Events.DialogType,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.SelectElement(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.RebootConsole">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.ShowFieldMessage(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.SetSaveStatus(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.SetSaveStatus(System.Boolean,Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.SetSaveStatus(System.Boolean,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.SetSaveStatus(System.Boolean,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CloseCurrentView">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.LockTheSystem">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.RerenderView">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CollapseAndRefresh">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.GetCurrentConsoleId">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.GetConsoleIdsOpenedByCurrentUser">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.ExecuteAction(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.ExecuteWorklow(Composite.C1Console.Security.EntityToken,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.DeliverFormData(System.String,Composite.C1Console.Actions.IFlowUiContainerType,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Composite.Data.Validation.ClientValidationRules.ClientValidationRule}})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.DeliverFormData(System.String,Composite.C1Console.Actions.IFlowUiContainerType,Composite.C1Console.Forms.Flows.IFormMarkupProvider,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Composite.Data.Validation.ClientValidationRules.ClientValidationRule}})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.SetCustomToolbarDefinition(System.String)">
            <summary>
            Adds the cms:layout elements Form Definition to the UI toolbar. 
            </summary>
            <param name="customToolbarDefinition">String containing a valid Form Definition markup document</param>
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.SetCustomToolbarDefinition(Composite.C1Console.Forms.Flows.IFormMarkupProvider)">
            <summary>
            Adds the cms:layout elements Form Definition to the UI toolbar. 
            </summary>
            <param name="customToolbarMarkupProvider">Markup provider that can deliver a valid Form Definition markup document</param>
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CreateAddNewTreeRefresher(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CreateUpdateTreeRefresher(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CreateDeleteTreeRefresher(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CreateParentTreeRefresher">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CreateSpecificTreeRefresher">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.RefreshEntityToken(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.RefreshCurrentEntityToken">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.RefreshParentEntityToken">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.RefreshRootEntityToken">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.AcquireLock(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.CreateDynamicValuesHelperReplaceContext">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.ValidateBindings">
            <summary>
            Shows validation messages for fields that weren't binded correctly. 
            </summary>
            <returns>True if all the bindings were processed correctly</returns>
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FormsWorkflow.BindAndValidate(Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper,Composite.Data.IData)">
            <summary>
            Binds form values to a data item and sends messages to client to display validation messages. 
            </summary>
            <param name="helper">Form binding helper</param>
            <param name="data">An IData instance</param>
            <returns>True, if there were no binding/validation errors</returns>
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.SerializedEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.SerializedActionToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.ParentWorkflowInstanceId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.WorkflowResult">
            <summary>
            Use this property to set the result of the workflow
            </summary>
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.ChildWorkflowResult">
            <summary>
            This holds the result of a chlid workflow
            </summary>
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.ActionToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.Bindings">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.BindingsValidationRules">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.Payload">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FormsWorkflow.ExtraPayload">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.InstallLocalPackageWorkflow.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.InstallLocalPackageWorkflow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this� method with the code editor.
            </summary>
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.InstallRemotePackageWorkflow">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.InstallRemotePackageWorkflow.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.InstallRemotePackageWorkflow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this� method with the code editor.
            </summary>
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.SaveButtonTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SaveButtonTemplateUserControlBase.SaveEventHandler">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SaveButtonTemplateUserControlBase.SaveAndPublishEventHandler">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SaveButtonTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.WebChannel.IWebUiControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.WebChannel.IWebUiControl.BuildWebControl">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.WebChannel.IWebUiControl.InitializeViewState">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.WebChannel.IWebUiControl.ClientName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.WebChannel.IWebUiControl.IsFullWidthControl">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.GetOptions">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.GetKey(System.Tuple{System.Object,System.Object,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.GetKey(System.Object,System.Object)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.FirstKey">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.SecondKey">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.Options">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUserControlBase.Required">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.#ctor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.BindStateToControlProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.BuildWebControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.FirstKey">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.SecondKey">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.Options">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.Required">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.IsFullWidthControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedDoubleKeySelectorUiControl.ClientName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Functions.IWidgetFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.IWidgetFunction.GetWidgetMarkup(Composite.Functions.ParameterList,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.CommonNamespace">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.InternalCommonNamespace">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.#ctor(System.String,System.Type,Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.EntityTokenFactory)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.AddParameterProfile(Composite.Functions.ParameterProfile)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.GetWidgetMarkup(Composite.Functions.ParameterList,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.BuildBasicWidgetMarkup(System.String,System.String,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.Name">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.Description">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.ReturnType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.ParameterProfiles">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.CompositeWidgetFunctionBase.EntityToken">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.UrlComboBoxWidgetFunction.CompositeName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Logging.LogTraceListeners.FileLogTraceListener.CurrentFileReader">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Logging.LogTraceListeners.FileLogTraceListener.LogFileReader">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Logging.LogTraceListeners.FileLogTraceListener.PlainFileReader">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.DescriptionMetaTag">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.DescriptionMetaTag.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="T:Composite.Functions.BaseParameterRuntimeTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Functions.BaseRuntimeTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseRuntimeTreeNode.GetValue">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseRuntimeTreeNode.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseRuntimeTreeNode.GetValue``1">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseRuntimeTreeNode.GetValue``1(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseRuntimeTreeNode.GetCachedValue">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseRuntimeTreeNode.GetAllSubFunctionNames">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseRuntimeTreeNode.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.Functions.BaseRuntimeTreeNode.ContainsNestedFunctions">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseParameterRuntimeTreeNode.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.BaseParameterRuntimeTreeNode.Name">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.PageTemplateFeature">
            <summary>
            
            </summary>
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.PageTemplateFeature.OnInit(System.EventArgs)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.PageTemplateFeature.Name">
            <summary>
            Name of Page Template Feature to include
            </summary>
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.MasterPageBase">
            <summary>
            Base class for ASP.NET MasterPage classes in Composite C1. Inheriting from this bring common features like easy data and sitemap access. 
            This class is intended for use in shared MasterPages, to create a MasterPage based page template for Composite C1 use <see cref="T:Composite.Plugins.PageTemplates.MasterPages.MasterPagePageTemplate"/>.
            </summary>
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.MasterPageBase.GetPageTemplateFeature(System.String)">
            <summary>
            Gets a Page Template Feature based on name.
            </summary>
            <param name="featureName">Name of the Page Template Feature to return.</param>
            <returns>The Page Template Feature as an ASP.NET Control</returns>
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.MasterPageBase.Dispose">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.MasterPageBase.Data">
            <summary>
            Gets or sets the data connection.
            </summary>
            <value>
            The data connection.
            </value>
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.MasterPageBase.SitemapNavigator">
            <summary>
            Gets the sitemap navigator.
            </summary>
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.MasterPagePageTemplate">
            <summary>
            Base master page
            </summary>
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.MasterPagePageTemplate.TemplateId">
            <summary>
            Gets the template id.
            </summary>
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.MasterPagePageTemplate.TemplateTitle">
            <summary>
            Gets the template title.
            </summary>
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Function">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Function.OnInit(System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Function.ExecuteFunction(Composite.Functions.IFunction,System.Collections.Generic.IDictionary{System.String,System.Object},Composite.Functions.FunctionContextContainer)">
            <summary>
            Executes the function. Note that all the XhtmlParameters will have all the nested &gt;f:function /&lt; lazily evaluated
            </summary>
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Function.Name">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Function.Parameters">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Markup">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Markup.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Markup.#ctor(System.Xml.Linq.XElement,Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Markup.OnInit(System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Markup.CreateChildControls">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Markup.InnerContent">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param.#ctor(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param.AddParsedSubObject(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param.DataBindChildren">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param.Value">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param.Name">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.Add(Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.Clear">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.Contains(Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.IndexOf(Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.Insert(System.Int32,Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.Remove(Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.Param)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.RemoveAt(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.CopyTo(System.Array,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.GetEnumerator">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.IsFixedSize">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.IsReadOnly">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.Item(System.Int32)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.Count">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.IsSynchronized">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamCollection.SyncRoot">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamObjectConverter">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamObjectConverter.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamObjectConverter.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamObjectConverter.ToString">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamObjectConverter.Value">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamControlBuilder">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamControlBuilder.AllowWhitespaceLiterals">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.ParamControlBuilder.HtmlDecodeLiterals">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.StringToObjectConverter">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.StringToObjectConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.StringToObjectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.StringToObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.StringToObjectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Functions.StringToObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Description">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Description.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Render">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Render.CreateChildControls">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Render.PlaceholderID">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Render.HasBody">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Render.Markup">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Title">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.PageTemplates.MasterPages.Controls.Rendering.Title.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.PageTemplates.MasterPages.MasterPagePageTemplateProvider.State">
            <summary>
            Immutable state - loaded page templates
            </summary>
        </member>
        <member name="T:Composite.Plugins.ResourceSystem.AggregationLocalizationProvider.AggregationLocalizationProvider">
            <summary>
            ILocalizationProvider that aggrages multiple IStringResourceProviders. To be used for backward compatibility.
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IDataRenderingResponseHandler">
             <summary>
             Composite C1 allow you to build a RenderingResponseHandler plug-in. It enables developers to intercept 
             page and media requests and control if the request should be accepted or redirected and if the rendered 
             resource is allowed to be publicly cached.
             </summary>
             <remarks>
             To create a RenderingResponseHandler plug-in:
             <list type="number">
             <item>
             <description>In Visual Studio, create a new "Class Library" project (or use an existing project if you have one).</description>
             </item>
             <item>
             <description>Add references to the following assemblies ( Browse and located on your web site):
             	<list type="bullet">
             		<item>
            	 		<description>/bin/Composite.dll</description>
             		</item>
             		<item>
             			<description>/bin/Microsoft.Practices.EnterpriseLibrary.Common.dll</description>
             		</item>
             	</list></description>
             </item>
             <item>
             <description>In each assembly reference's properties, set Copy Local to 'False'.</description>
             </item>
             <item>
             <description>Add a reference to System.Configuration (.NET)</description>
             </item>
             <item>
             <description>Create a new class for your plug-in (see the source code example below).</description>
             </item>
             <item>
             <description>Compile the project and copy the DLL to the website /bin folder.</description>
             </item>
             </list>
             To register a RenderingResponseHandler plug-in:
             <list type="number">
             <item>
             <description>Edit the file /App_Data/Composite/Composite.config.</description>
             </item>
             <item>
             <description>Locate the element <RenderingResponseHandlerPlugins />.</description>
             </item>
             <item>
             <description>Add a new element inside the &lt;RenderingResponseHandlerPlugins /&gt; element:
            
                &lt;add name="Sample" type="TypeName, AssemblyName"/&gt;
            
             changing 'Sample' to a name relevant to your project and 'TypeName, AssemblyName' to the fully qualified class name of your plug-in class.</description>
             </item>
             <item>
             <description>Restart the C1 site (recycle app pool or use C1 Console; Tools | Restart Server)</description>
             </item>
             </list>
             </remarks>
             <example>
             Sample plugin:
             <code>
            using System;
            using Composite.Data;
            using Composite.Data.Types;
            using Composite.Core.Logging;
            using Composite.Core.WebClient.Renderings;
            using Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler;
            
            using Microsoft.Practices.EnterpriseLibrary.Common.Configuration;
            
            
            namespace RenderingResponseHandlerSample
            {
                [ConfigurationElementType(typeof(NonConfigurableRenderingResponseHandler))]
                public class RenderingResponseHandlerPluginSample : IDataRenderingResponseHandler
                {
                    // Have the TCP logger running to see the string being logged - see Composite.Tools.TcpCustomTraceListener
                    // This sample will redirect requests for pages and media containing the word 'secret' in their title / path.
                    public RenderingResponseHandlerResult GetDataResponseHandling(DataEntityToken requestedItemEntityToken)
                    {
                        IData requestedData = requestedItemEntityToken.Data;
            
                        bool redirect = false;
            
                        if (requestedData is IPage)
                        {
                            IPage requestedPage = (IPage)requestedData;
                            LoggingService.LogVerbose("Sample", string.Format("Request for page '{0}'.", requestedPage.Title));
            
                            if (requestedPage.Title.ToLower().Contains("secret"))
                            {
                                redirect = true;
                            }
                        }
                        else if (requestedData is IMediaFile)
                        {
                            IMediaFile requestedMediaFile = (IMediaFile)requestedData;
                            LoggingService.LogVerbose("Sample", string.Format("Request for media file '{0}'.", requestedMediaFile.CompositePath));
            
                            if (requestedMediaFile.CompositePath.ToLower().Contains("secret"))
                            {
                                redirect = true;
                            }
                        }
            
                        if (redirect)
                        {
                            return new RenderingResponseHandlerResult
                            {
                                PreventPublicCaching = true,
                                RedirectRequesterTo = new Uri("http://docs.composite.net/")
                            };
                        }
                        else
                        {
                            return new RenderingResponseHandlerResult
                            {
                                PreventPublicCaching = false
                            };
                        }
                    }
                }
            }
             </code>
             Sample configuration snippet from Composite.config:
             <code>
             &lt;Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandlerConfiguration&gt; 
               &lt;RenderingResponseHandlerPlugins&gt; 
                 &lt;add name="Sample" type="RenderingResponseHandlerSample.RenderingResponseHandlerPluginSample, RenderingResponseHandlerSample" /&gt; 
               &lt;/RenderingResponseHandlerPlugins&gt; 
             &lt;/Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandlerConfiguration&gt;    
             </code>
             </example>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IRenderingResponseHandler">
            <summary>
            Base interface - use the interface <see cref="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IDataRenderingResponseHandler"/> for handling page and media requests.
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IDataRenderingResponseHandler.GetDataResponseHandling(Composite.Data.DataEntityToken)">
            <summary>
            Method which gets called for all C1 media file requests and (un-cached) C1 page requests. 
            The fate of the request is described in the <see cref="T:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult"/> return value.
            </summary>
            <param name="requestedItemEntityToken">The data being rendered. This can be <see cref="T:Composite.Data.Types.IPage"/> and <see cref="T:Composite.Data.Types.IMediaFile"/>.</param>
            <returns>A <see cref="T:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult"/> object detailing what should happen to the user request. Returning null means no special handling should be done (request should continue).</returns>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.NonConfigurableRenderingResponseHandler">
            <summary>
            Configuration object with no custom config settings. When developing your own <see cref="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IRenderingResponseHandler"/> 
            plugin you can use this if you do not require any special configuration in the Composite.config file.
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.RenderingResponseHandlerData">
            <summary>
            Base class for <see cref="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IRenderingResponseHandler"/> plugin configuration. If you do not require special
            configuration, use <see cref="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.NonConfigurableRenderingResponseHandler"/>.
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.NonConfigurableRenderingResponseHandlerAssembler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.NonConfigurableRenderingResponseHandlerAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.RenderingResponseHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult">
            <summary>
            Describe how a request should be handled in terms of allowing the request, ending it, redirecting it and caching it.
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult.PreventPublicCaching">
            <summary>
            When true full page caching will explicitly be denied. Page caching can greatly increase website performance,
            but is not desireable on pages that require validation or contain personalized content. Default is false.
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult.RedirectRequesterTo">
            <summary>
            To block the request and have the user redirected to another location specify the destination URL here. 
            Default is null.
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult.EndRequest">
            <summary>
            When true, the request will not continue. Default is false
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.RenderingResponseHandlerFacade">
            <summary>
            Pass information about a request through all <see cref="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IDataRenderingResponseHandler"/> 
            plugins registered on the Composite C1 site. Use this if you are handling raw page / media http requests yourself.
            
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.RenderingResponseHandlerFacade.GetDataResponseHandling(Composite.Data.DataEntityToken)">
            <summary>
            Pass information about a request through all <see cref="T:Composite.Core.WebClient.Renderings.Plugins.RenderingResponseHandler.IDataRenderingResponseHandler"/> 
            plugins registered on the Composite C1 site. The resulting <see cref="T:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult"/> define how you should treat the request.
            </summary>
            <param name="requestedItemEntityToken">The data being rendered. This can be <see cref="T:Composite.Data.Types.IPage"/> and <see cref="T:Composite.Data.Types.IMediaFile"/>.</param>
            <returns>A <see cref="T:Composite.Core.WebClient.Renderings.RenderingResponseHandlerResult"/> object detailing what should happen to the user request. Returning null means no special handling should be done (request should continue).</returns>
        </member>
        <member name="T:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade.GetParents(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade.AddAuxiliaryAncestorProvider``1(Composite.C1Console.Security.IAuxiliarySecurityAncestorProvider)">
            <summary>
            Providers will get flushed on flushes
            </summary>
            <typeparam name="T"></typeparam>
            <param name="auxiliarySecurityAncestorProvider"></param>
        </member>
        <member name="M:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade.AddAuxiliaryAncestorProvider``1(Composite.C1Console.Security.IAuxiliarySecurityAncestorProvider,System.Boolean)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="auxiliarySecurityAncestorProvider"></param>
            <param name="flushPersistent"></param>
        </member>
        <member name="M:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade.AddAuxiliaryAncestorProvider(System.Type,Composite.C1Console.Security.IAuxiliarySecurityAncestorProvider)">
            <summary>
            Providers will get flushed on flushes
            </summary>
            <param name="entityTokenType"></param>
            <param name="auxiliarySecurityAncestorProvider"></param>
        </member>
        <member name="M:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade.AddAuxiliaryAncestorProvider(System.Type,Composite.C1Console.Security.IAuxiliarySecurityAncestorProvider,System.Boolean)">
            <summary>
            Providers will get flushed on flushes
            </summary>
            <param name="entityTokenType"></param>
            <param name="auxiliarySecurityAncestorProvider"></param>
            <param name="flushPersistent"></param>
        </member>
        <member name="M:Composite.C1Console.Security.AuxiliarySecurityAncestorFacade.GetAuxiliaryAncestorProviders(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.ConstructorBasedUserGroupPermissionDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.UserGroupPermissionDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserGroupPermissionDefinition.UserGroupId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserGroupPermissionDefinition.PermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserGroupPermissionDefinition.SerializedEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserGroupPermissionDefinition.EntityToken">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ConstructorBasedUserGroupPermissionDefinition.#ctor(System.Guid,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.PermissionType},System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ConstructorBasedUserGroupPermissionDefinition.UserGroupId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ConstructorBasedUserGroupPermissionDefinition.PermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ConstructorBasedUserGroupPermissionDefinition.SerializedEntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.EntityTokenCacheFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenCacheFacade.AddNativeCache(Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenCacheFacade.AddHookingCache(Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenCacheFacade.GetCachedNativeParents(Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken}@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenCacheFacade.GetCachedHookingParents(Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken}@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenCacheFacade.ClearCache(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenCacheFacade.ClearCache(Composite.C1Console.Security.EntityToken,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenCacheFacade.ClearCache">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.EntityTokenHtmlPrettyfier">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.#ctor(Composite.C1Console.Security.EntityToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnWriteEntityTokenType">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnWriteType">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnWriteSource">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnWriteId">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnWriteCustomProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnPiggyBagEntry">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnWriteSecurityAncestorProvider">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.DefaultOnWriteAuxiliarySecurityAncestorProvider">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnWriteEntityTokenType">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnWriteType">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnWriteSource">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnWriteId">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnWriteCustomProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnPiggyBagEntry">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnWriteSecurityAncestorProvider">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.OnWriteAuxiliarySecurityAncestorProvider">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.AddCustomSimpleProperty(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.AddCustomProperty(System.String,System.Action{System.String,System.Object,Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.GetResult">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.EntityTokenHtmlPrettyfier.PiggyBag">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.StartTable">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.EndTable">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.StartRow">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.EndRow">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.AddCell(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.AddCell(System.String,System.Int32,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.AddFullRow(System.Collections.Generic.IEnumerable{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.AddHeading(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHtmlPrettyfierHelper.GetResult">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.NoSecurityEntityToken">
            <summary>
            This will alway be shown and allow all actions on it.
            It is not possible for the user to set any permissions on it.
            Use with care!!
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.UserGroupFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserGroupFacade.GetUserGroupIds(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.UserGroupPerspectiveFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserGroupPerspectiveFacade.GetSerializedEntityTokens(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserGroupPerspectiveFacade.GetSerializedEntityTokens(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserGroupPerspectiveFacade.GetEntityTokens(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserGroupPerspectiveFacade.SetEntityTokens(System.Guid,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserGroupPerspectiveFacade.SetSerializedEntityTokens(System.Guid,System.Collections.Generic.IEnumerable{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserGroupPerspectiveFacade.DeleteAll(System.Guid)">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Inline.InlineFunctionHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.Create(Composite.Data.Types.IInlineFunction,System.String,Composite.Functions.Inline.InlineFunctionCreateMethodErrorHandler,System.Collections.Generic.List{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.GetFunctionCode(Composite.Data.Types.IInlineFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.DeleteFunctionCode(Composite.Data.Types.IInlineFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.SetFunctinoCode(Composite.Data.Types.IInlineFunction,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.FunctionRenamed(Composite.Data.Types.IInlineFunction,Composite.Data.Types.IInlineFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.UpdateCodePath(Composite.Data.Types.IInlineFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.GetReferencableAssemblies">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.GetAssemblyLocation(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.Inline.InlineFunctionHelper.GetAssemblyFullPath(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.InlineFunctionHelper.MethodClassContainerName">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Inline.InlineFunctionHelper.DefaultAssemblies">
            <exclude />
        </member>
        <member name="T:Composite.Core.Application.ApplicationStartupAttribute">
            <summary>    
            Using this attribute on a class with the following two static methods,
            will cause C1 to call those two methods in the initialization phase of C1.
            This can be used to register event handlers ans such.
            The static class should have these two static methods:
            <code>
            /* This handler will be called before C1 initialization. The data layer cannot be used here. */
            public static void OnBeforeInitialize() {}
            /* This handler will be called after initialization of C1 core. */
            public static void OnInitialized() {}
            </code>
            </summary>
            <example>
            <code>
            [ApplicationStartup]
            public class MyAppStartupHandler
            {
                public static void OnBeforeInitialize()
                {
                }
                
                public static void OnInitialized()
                {
                }
            } 
            </code>
            </example>
        </member>
        <member name="T:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.IsAppCodeDll(System.Reflection.Assembly)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.OnBeforeInitialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.OnInitialized">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.SubscribedTypesCache">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.SubscribedTypesCache.Assemblies">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.AssemblyInfo">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.AssemblyInfo.SubscribedTypes">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.AssemblyInfo.AssemblyName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Application.ApplicationStartupHandlers.AttributeBasedApplicationStartupHandler.AttributeBasedApplicationStartupHandler.AssemblyInfo.LastModified">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.DataContextBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.DataContextBase.#ctor(System.Data.IDbConnection)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.DataContextBase.NewId">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.DataContextClassGenerator.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}})">
            <summary>
            
            </summary>
            <param name="dataContextClassName"></param>
            <param name="entityClassNamesAndDataContextFieldNames">For all datatypes datacopes. (EntityClassName, DataContextFieldName)</param>
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.EntityClassGenerator">
            <summary>
            There exists an entity class per { datacope, locale } mutation and only one base entity class.
            <example>
            The data type is publishable and localized and there exists two locales (EN, DK).
            This would result in 4 entity classes:
            unpublished+en, enpublished+dk, published+en, published+dk
            </example>
            </summary>
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.IEntity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.IEntity.Commit">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.ISqlDataContext">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.ISqlDataContext.Add(System.Object,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.ISqlDataContext.Remove(System.Object,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.ISqlDataProviderHelper">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.ISqlDataProviderHelper.GetDataById(System.Linq.IQueryable,Composite.Data.IDataId,Composite.Data.Plugins.DataProvider.DataProviderContext)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.ISqlDataProviderHelper.AddData(Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.ISqlDataContext,Composite.Data.IData,Composite.Data.Plugins.DataProvider.DataProviderContext)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.ISqlDataProviderHelper.RemoveData(Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.ISqlDataContext,Composite.Data.IData)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.SqlDataContextHelperClass">
            <summary>    
            Provides an api to work with generated tables of a DataContext object.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.SqlDataContextHelperClass.#ctor(System.Data.Linq.DataContext)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.SqlDataContextHelperClass.Add(System.Object,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.SqlDataContextHelperClass.Remove(System.Object,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.CodeGeneration.SqlDataContextHelperClass.GetTable(System.Data.Linq.DataContext,Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Foundation.SqlDataTypeStoreTable)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoresContainer.AddSupportedDataTypeStore(System.Type,Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStore)">
            <summary>
            This method adds the support of the given data interface type to the xml data provider.
            </summary>
            <param name="interfaceType"></param>
            <param name="sqlDataTypeStore"></param>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoresContainer.GetDataContext">
            <summary>
            Gets an instance of a DataContext.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoresContainer.SupportedInterface">
            <summary>
            All working data types 
            </summary>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoresContainer.KnownInterfaces">
            <summary>
            All data types, including non working due to config error or something else
            </summary>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.SqlDataTypeStoresContainer.GeneratedInterfaces">
            <summary>
            All working generated data types
            </summary>
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Foundation.InterfaceConfigurationManipulator">
            <summary>
            Add, change and remove type-to-table mapping information
            </summary>
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.DataProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.ISqlTableInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.ISqlTableInformation.TableName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.ISqlTableInformation.HasIdentityColumn">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.ISqlTableInformation.IdentityColumnName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.ISqlTableInformation.Item(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.ISqlTableInformation.ColumnInformations">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.ColumnName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.TrimmedColumnName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.IsPrimaryKey">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.IsIdentity">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.IsComputed">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.IsNullable">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlColumnInformation.SqlDbType">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlTableInformationStore">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MSSqlServerDataProvider.Sql.SqlTableInformationStore.GetTableInformation(System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase._idClassConstructor">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase._wrapperClassConstructor">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase._selectFunctionCache">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase.CreateSelectFunction``1(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase.CreateDataId(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase.ValidateDataType(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase.CreateNewElement``1(Composite.Data.IData,System.Xml.Linq.XElement@,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase.Xor(System.Int32,System.Int32)">
            <summary>
            CodeDom does not support '^' operatior, so this method is used instead
            </summary>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase.ParseDecimal(System.String,System.Int32)">
            <summary>
            Parses a decimal value, sets the correct precision.
            </summary>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase._InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperBase._DataIdType">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IGeneratedTypeWhiteList">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IGeneratedTypeWhiteList.TypeManagerTypeName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.TreeRootFolderId">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.TreeDefinitionId">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.Filename">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.DeveloperApplicationProvider.DeveloperApplicationProviderEntityToken.FullTreePath">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.UpdateWithNewBindings(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.Guid})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.GetSelectedUserGroupIds(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.GetBindingsMarkup">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.GetFormMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.FieldLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.MultiSelectLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserGroupsFormsHelper.MultiSelectHelp">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.Base.UserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.Base.UserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.Base.UserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.Base.UserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.Base.UserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase.Selected">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase.DataType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase.NullValueAllowed">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase.Handle">
            <summary>
            Defines which kind of dialog and data provider elements are to be shown
            </summary>
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase.SearchToken">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase.RootEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceTreeSelectorTemplateUserControlBase.ClientValidationRules">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.PageReferenceSelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.PageReferenceSelectorTemplateUserControlBase.Selected">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.PageReferenceSelectorTemplateUserControlBase.ClientValidationRules">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.HtmlBlobTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.HtmlBlobTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.HtmlBlobTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.HtmlBlobTemplateUserControlBase.Html">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.DefaultPlaceholderId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.PlaceholderDefinitions">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.NamedXhtmlFragments">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.EmbedableFieldsTypes">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.MultiContentXhtmlEditorTemplateUserControlBase.ClassConfigurationName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.AttributeDynamicValuesHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.AttributeDynamicValuesHelper.#ctor(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.AttributeDynamicValuesHelper.ReplaceValues(Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.AttributeDynamicValuesHelper.Initialize(Composite.C1Console.Trees.TreeNode)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.AttributeDynamicValuesHelper.Element">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.ConfirmActionNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.ActionNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.OnAddAction(System.Action{Composite.C1Console.Elements.ElementAction},Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext,Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.OnInitialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.CreateActionVisualizedData(Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.Initialize">
            <summary>
            Use this method to do initializing and validation
            </summary>
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.AddAction(System.Action{Composite.C1Console.Elements.ElementAction},Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.Serialize(System.Text.StringBuilder)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.Deserialize(System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.AddValidationError(Composite.C1Console.Trees.ValidationError)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ActionNode.AddValidationError(System.String,System.Object[])">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.XPath">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.Id">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.Label">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.Icon">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.Location">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.PermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ActionNode.OwnerNode">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ConfirmActionNode.OnAddAction(System.Action{Composite.C1Console.Elements.ElementAction},Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext,Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ConfirmActionNode.OnInitialize">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ConfirmActionNode.ConfirmTitle">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ConfirmActionNode.ConfirmMessage">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ConfirmActionNode.FunctionMarkup">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ConfirmActionNode.RefreshTree">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ConfirmActionNode.ConfirmTitleDynamicValuesHelper">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ConfirmActionNode.ConfirmMessageDynamicValuesHelper">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ConfirmActionNode.FunctionMarkupDynamicValuesHelper">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.Foundation.AttachmentPoints.BaseAttachmentPoint">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.Foundation.AttachmentPoints.IAttachmentPoint">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.Foundation.AttachmentPoints.IBaseAttachmentPoint">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.IBaseAttachmentPoint.Log(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Foundation.AttachmentPoints.IBaseAttachmentPoint.Position">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.IAttachmentPoint.IsAttachmentPoint(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.IAttachmentPoint.GetEntityTokens(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.BaseAttachmentPoint.IsAttachmentPoint(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.BaseAttachmentPoint.GetEntityTokens(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.BaseAttachmentPoint.Log(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Foundation.AttachmentPoints.BaseAttachmentPoint.Position">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.Foundation.AttachmentPoints.IDataItemAttachmentPoint">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Foundation.AttachmentPoints.IDataItemAttachmentPoint.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.Foundation.AttachmentPoints.DynamicDataItemAttachmentPoint">
            <summary>
            This class is used when the user adds trees dynamicly
            Used as a dual with Composite.Data.Types.IDataItemTreeAttachmentPoint
            </summary>    
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.DynamicDataItemAttachmentPoint.IsAttachmentPoint(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.DynamicDataItemAttachmentPoint.GetEntityTokens(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.AttachmentPoints.DynamicDataItemAttachmentPoint.Log(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Foundation.AttachmentPoints.DynamicDataItemAttachmentPoint.InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Foundation.AttachmentPoints.DynamicDataItemAttachmentPoint.KeyValue">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.FolderRanges.IFolderRanges.CreateContainsListSelectBodyExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression)">
            <summary>
            This is called by DataFolderElementsTreeNode when finding folders
            </summary>
            <param name="fieldExpression"></param>
            <param name="parameterExpression"></param>
            <returns>
            This should return an expression that gives a list of bools foreach folder range
            whether folder range is containing data or not.
            </returns>
        </member>
        <member name="M:Composite.C1Console.Trees.Foundation.FolderRanges.IFolderRanges.CreateFilterExpression(System.Int32,System.Linq.Expressions.Expression)">
            <summary>
            This is called by DataFolderElementsTreeNode when finding children to a folder element
            </summary>
            <returns>
            This should return an expression that filters so that only children of the given folder
            element is return.
            </returns>
        </member>
        <member name="P:Composite.C1Console.Trees.Foundation.FolderRanges.IFolderRange.Index">
            <summary>
            Indexed from 0 and up, -1 is wildcard/other
            </summary>
        </member>
        <member name="T:Composite.C1Console.Trees.TreeNode">
            <summary>    
            Represents a node in tree definition
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.TreeNode._childNodes">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.TreeNode._actionNodes">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.TreeNode._orderByNodes">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.TreeNode._filterNodes">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.GetEntityTokens(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <summary>
            This is call when this nodes entity tokens are needed to climb up the tree.
            If this tree nodes elements dont have any children, then this method will not be called.
            </summary>
            <param name="childEntityToken"></param>
            <param name="dynamicContext"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.FilterParentGeneretedEntityTokens(Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken},Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <summary>
            This is called when a node has genereted its own entity tokens (by a child) and the child
            needs to filter these entity token
            </summary>
            <param name="selfEntityToken"></param>
            <param name="parentGeneretedEntityTokens"></param>
            <param name="dynamicContext"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.GetParentEntityToken(Composite.C1Console.Security.EntityToken,System.Type,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <summary>
            This is called to, in the end, find a parent data entity token, so that the data item behind it can be used 
            by the start caller (ParentIdFilterNode) to get its own data item for creating an upward filter.
            
            If more than one parent exists, the first one is enough
            
            We are only looking for a data entity token, so 'jumping over' other
            parents is allowed.
            </summary>
            <param name="ownEntityToken"></param>
            <param name="parentInterfaceOfInterest">
            We are searching for a data entity token of interface type state in this parameter
            </param>
            <param name="dynamicContext"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.OnGetElements(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <summary>
            This is called when this nodes elements are needed to create next sub level of tree elements.
            </summary>
            <param name="parentEntityToken"></param>
            <param name="dynamicContext"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.GetElements(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.OnInitialize">
            <summary>
            This is called after the build of the tree is finished
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.Initialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNode.ParentString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.XPath">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.Id">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.Tree">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.ParentNode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.ChildNodes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.ActionNodes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.OrderByNodes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNode.FilterNodes">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.LeafDisplayMode">
            <summary>    
            Defines the way an element is shown depending on presense of the child elements
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.LeafDisplayMode.Compact">
            <summary>
            Only shows the elements that has child elements; hides all the elements without child elements.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Trees.LeafDisplayMode.Lazy">
            <summary>
            Element is always shown, as well as the the "+" sign even when element doesn't have any child items. Default value, has the best performance
            </summary>
        </member>
        <member name="F:Composite.C1Console.Trees.LeafDisplayMode.Auto">
            <summary>
            Element is always shown, the "+" sign is shown only if there're child elements.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Trees.LeafDisplayModeHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.LeafDisplayModeHelper.ParseDisplayMode(System.Xml.Linq.XAttribute,Composite.C1Console.Trees.Tree)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.OrderByNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.OrderByNode.CreateOrderByExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Boolean)">
            <summary>
            
            </summary>
            <param name="sourceExpression"></param>
            <param name="parameterExpression"></param>
            <param name="first">
            Implementations of this clase should use this parameter to distinguish between OrderBy and ThenBy
            </param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.OrderByNode.Initialize">
            <summary>
            Use this method to do initializing and validation
            </summary>
        </member>
        <member name="M:Composite.C1Console.Trees.OrderByNode.SetOwnerNode(Composite.C1Console.Trees.TreeNode)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.OrderByNode.AddValidationError(System.String,System.Object[])">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.OrderByNode.XPath">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.OrderByNode.OwnerNode">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.FilterNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.FilterNode.CreateDownwardsFilterExpression(System.Linq.Expressions.ParameterExpression,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <summary>
            This is used when finding data to create elements from (elements going down)
            </summary>
            <param name="parameterExpression"></param>
            <param name="dynamicContext"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.FilterNode.CreateUpwardsFilterExpression(System.Linq.Expressions.ParameterExpression,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <summary>
            This is used when finding data to create entity tokens (security going up)
            </summary>
            <param name="parameterExpression"></param>
            <param name="dynamicContext"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.FilterNode.Initialize">
            <summary>
            Use this method to do initializing and validation
            </summary>
        </member>
        <member name="M:Composite.C1Console.Trees.FilterNode.SetOwnerNode(Composite.C1Console.Trees.TreeNode)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.FilterNode.AddValidationError(Composite.C1Console.Trees.ValidationError)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.FilterNode.AddValidationError(System.String,System.Object[])">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.FilterNode.XPath">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.FilterNode.Id">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.FilterNode.OwnerNode">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.PiggybagDataFinder">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagDataFinder.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagDataFinder.GetData(System.Type,Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagDataFinder.TryGetData(System.Type,Composite.Data.IData)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.PiggybagDataFinder.Piggybag">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.TreeFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.Initialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.GetTree(System.String)">
            <summary>
            Returns a tree given the id of the tree or null if no tree exist with the given id
            </summary>
            <param name="treeId"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.HasAttachmentPoints(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.HasPossibleAttachmentPoints(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.GetTreesByEntityToken(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.AddPersistedAttachmentPoint(System.String,System.Type,System.Object,Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderPosition)">
            <summary>
            Adds a attachment point that is persisted by the system and is loaded on every restart
            </summary>
            <param name="treeId"></param>
            <param name="interfaceType"></param>
            <param name="keyValue"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.RemovePersistedAttachmentPoint(System.String,System.Type,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.AddCustomAttachmentPoint(System.String,Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderPosition)">
            <summary>
            This will add a attachment point until the system flushes.
            This can be used by element provider implementors to attach trees to their exising trees.
            </summary>
            <param name="treeId"></param>
            <param name="entityToken"></param>
            <param name="position"></param>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacade.LoadTreeFromDom(System.String,System.Xml.Linq.XDocument)">
            <summary>
            Loads a tree from an <see cref="T:System.Xml.Linq.XDocument"/>
            </summary>&gt;
            <exclude/>
        </member>
        <member name="P:Composite.C1Console.Trees.TreeFacade.AllTrees">
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.AssemblyExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyExtensionMethods.GetTypes(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <exclude />
        </member>
        <member name="T:Composite.Core.UrlBuilder">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.UrlBuilder.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.UrlBuilder.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Core.UrlBuilder.AddQueryParameters(System.Collections.Specialized.NameValueCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Core.UrlBuilder.GetQueryParameters">
            <exclude />
        </member>
        <member name="M:Composite.Core.UrlBuilder.op_Implicit(Composite.Core.UrlBuilder)~System.String">
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.Item(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.PathInfo">
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.FilePath">
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.FullPath">
            <summary>
            Returns FilePath + PathInfo 
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.RelativeFilePath">
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.ServerUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.QueryString">
            <exclude />
        </member>
        <member name="P:Composite.Core.UrlBuilder.Anchor">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Captcha.Captcha">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.Captcha.CreateEncryptedValue">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.Captcha.IsValid(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.Captcha.IsValid(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.Captcha.RegisterUsage(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.Captcha.IsAlreadyUsed(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.Captcha.Decrypt(System.String,System.DateTime@,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.Captcha.GetImageUrl(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Captcha.ImageCreator">
            <summary>
            Image creator
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.#ctor(System.Int32,System.Int32)">
            <summary>
            Class for generating CAPTCHA images
            </summary>
            <param name="width">Width of the image</param>
            <param name="height">Height of the image</param>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.CreateImage(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.GetFont">
            <summary>
            Returns the CAPTCHA font in an appropriate size 
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.RandomFontFamily">
            <summary>
            Returns a random font family from the font whitelist
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.TextPath(System.Char,System.Drawing.Font,System.Drawing.Rectangle)">
            <summary>
            Returns a GraphicsPath containing the specified string and font
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.WarpText(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle)">
            <summary>
            Warp the provided text GraphicsPath by a variable amount
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.AddNoise(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Add a variable level of graphic noise to the image
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.AddLine(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Add variable level of curved lines to the image
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.RandomPoint(System.Drawing.Rectangle)">
            <summary>
            Returns a random point within the specified rectangle
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Captcha.ImageCreator.RandomPoint(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a random point within the specified x and y ranges
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.FontFamilyName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.FontWarp">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.Noise">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.LineNoise">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.BackgroundColor">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.NoiseColor">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.LineNoiseColor">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Captcha.ImageCreator.FontColor">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Captcha.FontWarpFactor">
            <summary>
            Amount of random font warping to apply to rendered text
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.FontWarpFactor.None">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.FontWarpFactor.Low">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.FontWarpFactor.Medium">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.FontWarpFactor.High">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.FontWarpFactor.Extreme">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Captcha.NoiseLevel">
            <summary>
            Amount of background noise to add to rendered image
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.NoiseLevel.None">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.NoiseLevel.Low">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.NoiseLevel.Medium">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.NoiseLevel.High">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.NoiseLevel.Extreme">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Captcha.LineNoiseLevel">
            <summary>
            Amount of curved line noise to add to rendered image
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.LineNoiseLevel.None">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.LineNoiseLevel.Low">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.LineNoiseLevel.Medium">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.LineNoiseLevel.High">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Captcha.LineNoiseLevel.Extreme">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.StandardFunctionProvider.Pages.GetForeignPageInfoFunction">
            <summary>
            Gets information about current page in all the languages.
            </summary>
        </member>
        <member name="M:Composite.Plugins.Functions.XslExtensionsProviders.StandardExtension.IsEmailValid(System.String)">
            <summary>
            Checks whether an email address is valid.
            </summary>
            <param name="email">The email address.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Plugins.Functions.XslExtensionsProviders.StandardExtension.IsEmailListValid(System.String)">
            <summary>
            Checks whether an email list  is valid.
            </summary>
            <param name="emailList">The email list.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Plugins.Functions.XslExtensionsProviders.StandardExtension.GetFormData(System.String)">
            <summary>
            Gets an http form post value.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Plugins.Functions.XslExtensionsProviders.StandardExtension.GetQueryStringValue(System.String)">
            <summary>
            Gets a query string parameter value.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Plugins.Functions.XslExtensionsProviders.StandardExtension.GetCookieValue(System.String)">
            <summary>
            Gets a cookie's value.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Functions.XslExtensionsProviders.ConfigBasedXslExtensionsProvider.ConfigBasedXslExtensionsProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.XslExtensionsProviders.ConfigBasedXslExtensionsProvider.ConfigBasedXslExtensionInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.NullableDataReferenceSelectorWidgetFunction`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.NullableDataReferenceSelectorWidgetFunction`1.#ctor(Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.EntityTokenFactory)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.NullableDataReferenceSelectorWidgetFunction`1.GetWidgetMarkup(Composite.Functions.ParameterList,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.NullableDataReferenceSelectorWidgetFunction`1.GetOptions(System.String)">
            <summary>
            To be called through reflection
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.DataIdMultiSelectorWidgetFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.DataIdMultiSelectorWidgetFunction.GetOptions(System.String)">
            <summary> 
            Is called through reflection   
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.DataIdMultiSelectorWidgetFunction.#ctor(Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.EntityTokenFactory)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.DataIdMultiSelectorWidgetFunction.GetWidgetMarkup(Composite.Functions.ParameterList,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Instrumentation.PerformanceCounterProviders.WindowsPerformanceCounterProvider.PerformanceCounterInstaller">
            <summary>
            Use Installutil.exe to install performance counters
            </summary>
        </member>
        <member name="T:Composite.Plugins.Logging.LogTraceListeners.FileLogTraceListener.FileLogger">
            <summary>
            File logger
            </summary>
        </member>
        <member name="T:Composite.Core.Logging.LogEntry">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogEntry.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LogEntry.Parse(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.LogEntry.TimeStamp">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.LogEntry.ApplicationDomainId">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.LogEntry.ThreadId">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.LogEntry.Severity">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.LogEntry.Title">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.LogEntry.DisplayOptions">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.LogEntry.Message">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Routing.UrlFormatters.StringReplaceUrlFormatterData.RulesFile">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Tasks.ITaskManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.ITaskManager.OnCreated(System.String,Composite.C1Console.Tasks.TaskManagerEvent)">
            <summary>
            This is called when the tast is created for the first time.
            If this method returns false, the task will not get started and
            no more events on the task mananger will get called.
            </summary>
            <param name="taskId"></param>
            <param name="taskManagerEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Tasks.ITaskManager.OnRun(System.String,Composite.C1Console.Tasks.TaskManagerEvent)">
            <summary>
            This is called just before an action/flow is started
            </summary>
            <param name="taskId"></param>
            <param name="taskManagerEvent"></param>
        </member>
        <member name="M:Composite.C1Console.Tasks.ITaskManager.OnStatus(System.String,Composite.C1Console.Tasks.TaskManagerEvent)">
            <summary>
            This this will always be called after OnRun and before OnIdle.
            It may not be called, and it might also be called more than once.
            Check the <paramref name="taskManagerEvent"/> for more information on the call
            </summary>
            <param name="taskId"></param>
            <param name="taskManagerEvent"></param>
        </member>
        <member name="M:Composite.C1Console.Tasks.ITaskManager.OnIdle(System.String,Composite.C1Console.Tasks.TaskManagerEvent)">
            <summary>
            This is called after an action/flow has gone idle
            </summary>
            <param name="taskId"></param>
            <param name="taskManagerEvent"></param>
        </member>
        <member name="M:Composite.C1Console.Tasks.ITaskManager.OnCompleted(System.String,Composite.C1Console.Tasks.TaskManagerEvent)">
            <summary>
            This is called when the task is compleated.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Tasks.TaskManagerEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Tasks.FlowTaskManagerEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.FlowTaskManagerEvent.#ctor(Composite.C1Console.Actions.FlowToken)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Tasks.FlowTaskManagerEvent.FlowToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Tasks.ITaskManagerFlowControllerService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.ITaskManagerFlowControllerService.OnStatus(Composite.C1Console.Tasks.TaskManagerEvent)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Tasks.Task">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.Task.#ctor(System.String,System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Tasks.Task.Id">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Tasks.Task.TaskManagerType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Tasks.Task.StartTime">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Tasks.TaskContainer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskContainer.UpdateTasksWithFlowToken(Composite.C1Console.Actions.FlowToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskContainer.OnStatus(Composite.C1Console.Tasks.TaskManagerEvent)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskContainer.SetOnIdleTaskManagerEvent(Composite.C1Console.Tasks.TaskManagerEvent)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskContainer.SaveTasks">
            <summary>
            Saves tasks to database
            </summary>
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskContainer.Finalize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskContainer.Dispose">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Tasks.TaskManagerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskManagerFacade.AttachTaskCreator(System.Func{Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken,Composite.C1Console.Tasks.Task})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskManagerFacade.RuntTasks(Composite.C1Console.Actions.FlowToken,Composite.C1Console.Tasks.TaskManagerEvent)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskManagerFacadeImpl.LoadTasks">
            <summary>
            Loads task persisted in database
            </summary>
        </member>
        <member name="T:Composite.C1Console.Tasks.TaskManagerFlowControllerService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskManagerFlowControllerService.#ctor(Composite.C1Console.Tasks.TaskContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Tasks.TaskManagerFlowControllerService.OnStatus(Composite.C1Console.Tasks.TaskManagerEvent)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Threading.ThreadDataManagerData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.#ctor(Composite.Core.Threading.ThreadDataManagerData)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.TryGetParentValue(System.Object,System.Object@)">
            <summary>
            This method will find the first one that contains the key and return the value
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.SetValue(System.Object,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.GetValue(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.HasValue(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.CheckNotDisposed">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManagerData.Dispose">
            <exclude />
        </member>
        <member name="P:Composite.Core.Threading.ThreadDataManagerData.Parent">
            <exclude />
        </member>
        <member name="E:Composite.Core.Threading.ThreadDataManagerData.OnDispose">
            <exclude />
        </member>
        <member name="P:Composite.Core.Threading.ThreadDataManagerData.Item(System.Object)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Threading.ThreadDataManager">
            <summary>    
            This class coordinates data connections and ensures that multiple requests to SQL Server will reuse the same sql connection, allowing transactions to run without the use of MSDTC
            </summary>
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.GetCurrentNotNull">
            <summary>
            Gets the current thread data, in the case of <see cref="T:Composite.Core.Threading.ThreadDataManager"/> not being initialized it'll throw an exception
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.CreateNew">
            <summary>
            Creates  a new instance of <see cref="T:Composite.Core.Threading.ThreadDataManagerData"/> object
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.Initialize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.Initialize(Composite.Core.Threading.ThreadDataManagerData)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.EnsureInitialize">
            <summary>
            Returns an <see cref="T:System.IDisposable"/> scope, checks that ThreadDataManager is initialized for the current thread, if not - does the initialization.
            Should be called in all non ASP.NET threads, that are using C1 data API.
            </summary>
            <example>
            <code>
            using (Composite.Core.Threading.ThreadDataManager.EnsureInitialize())
            using (var conn = new DataConnection(PublicationScope.Published, new CultureInfo("en-US")))
            {
              var pages = conn.Get&lt;Composite.Data.Types.IPage&gt;();	
              // ...
            }
            </code>
            </example>
            <returns>An <see cref="T:System.IDisposable"/> scope</returns>
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.InitializeThroughHttpContext">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.InitializeThroughHttpContext(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Threading.ThreadDataManager.FinalizeThroughHttpContext">
            <summary>
            To be used only in Global.asax
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Threading.ThreadDataManager.Current">
            <summary>
            Gets <see cref="T:Composite.Core.Threading.ThreadDataManagerData"/> object for the current thread
            </summary>
            <exclude/>
        </member>
        <member name="T:Composite.C1Console.Trees.BuildResult">
            <summary>  
            Contains information about tree validation errors
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.BuildResult.AddValidationError(Composite.C1Console.Trees.ValidationError)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.BuildResult.ValidationErrors">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataFieldValueHelper.Initialize(Composite.C1Console.Trees.TreeNode)">
            <summary>
            
            </summary>
            <param name="ownerTreeNode">This is only used to add validation errors</param>
        </member>
        <member name="T:Composite.C1Console.Trees.DynamicValuesHelperReplaceContext">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DynamicValuesHelperReplaceContext.PiggybagDataFinder">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DynamicValuesHelperReplaceContext.CurrentDataItem">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.DynamicValuesHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DynamicValuesHelper.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DynamicValuesHelper.ReplaceValues(Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DynamicValuesHelper.Initialize(Composite.C1Console.Trees.TreeNode)">
            <summary>
            
            </summary>
            <param name="ownerTreeNode">This is only used to add validation errors</param>
        </member>
        <member name="M:Composite.C1Console.Trees.DynamicValuesHelper.Initialize(Composite.C1Console.Trees.ActionNode)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DynamicValuesHelper.Initialize_DataFieldValueHelper(Composite.C1Console.Trees.TreeNode)">
            <summary>
            
            </summary>
            <param name="ownerTreeNode">This is only used to add validation errors</param>
        </member>
        <member name="P:Composite.C1Console.Trees.DynamicValuesHelper.Template">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DynamicValuesHelper.UseUrlEncode">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.DataElementsTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.DataFilteringTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataFilteringTreeNode.CreateAccumulatedOrderByExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataElementsTreeNode.GetEntityTokens(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataElementsTreeNode.GetParentEntityToken(Composite.C1Console.Security.EntityToken,System.Type,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataElementsTreeNode.OnGetElements(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataElementsTreeNode.OnInitialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataElementsTreeNode.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataElementsTreeNode.InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataElementsTreeNode.Label">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataElementsTreeNode.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataElementsTreeNode.Icon">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataElementsTreeNode.OpenedIcon">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataElementsTreeNode.Display">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataElementsTreeNode.ShowForeignItems">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.DataElementsTreeNode.NodeDataSet">
            <summary>
            Data related to a tree node
            </summary>
        </member>
        <member name="T:Composite.C1Console.Trees.DataFolderElementsTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataFolderElementsTreeNode.GetEntityTokens(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataFolderElementsTreeNode.GetParentEntityToken(Composite.C1Console.Security.EntityToken,System.Type,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataFolderElementsTreeNode.OnGetElements(Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataFolderElementsTreeNode.OnInitialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.DataFolderElementsTreeNode.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.Icon">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.FieldName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.DateFormat">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.Range">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.FirstLetterOnly">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.SortDirection">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.Display">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.DataFolderElementsTreeNode.ShowForeignItems">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.GenericAddDataActionNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.GenericAddDataActionNode.OnAddAction(System.Action{Composite.C1Console.Elements.ElementAction},Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext,Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.GenericAddDataActionNode.OnInitialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.GenericAddDataActionNode.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.GenericAddDataActionNode.InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.GenericAddDataActionNode.CustomFormMarkupPath">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.GenericEditDataActionNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.GenericEditDataActionNode.OnAddAction(System.Action{Composite.C1Console.Elements.ElementAction},Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext,Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.GenericEditDataActionNode.OnInitialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.GenericEditDataActionNode.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.GenericEditDataActionNode.CustomFormMarkupPath">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ParentIdFilterNode.FindOwnEntityToken(Composite.C1Console.Trees.TreeNode,Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext)">
            <summary>
            This method finds the callers tree node own entity token by searching up/down using filters.
            In some cases this can be expensive.
            </summary>
            <param name="treeNode"></param>
            <param name="entityToken"></param>
            <param name="dynamicContext"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.C1Console.Trees.PiggybagExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagExtensionMethods.GetParentIdFromPiggybag(System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagExtensionMethods.GetParentIdFromPiggybag(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagExtensionMethods.PreparePiggybag(System.Collections.Generic.Dictionary{System.String,System.String},Composite.C1Console.Trees.TreeNode,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagExtensionMethods.TryGetPiggybaggedEntityToken(System.Collections.Generic.Dictionary{System.String,System.String},Composite.C1Console.Security.EntityToken@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagExtensionMethods.TryGetPiggybaggedEntityToken(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,Composite.C1Console.Security.EntityToken@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagExtensionMethods.GetParentEntityTokens(System.Collections.Generic.Dictionary{System.String,System.String},Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.PiggybagExtensionMethods.FindDataEntityToken(System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken},System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.ReportFunctionActionNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ReportFunctionActionNode.OnAddAction(System.Action{Composite.C1Console.Elements.ElementAction},Composite.C1Console.Security.EntityToken,Composite.C1Console.Trees.TreeNodeDynamicContext,Composite.C1Console.Trees.DynamicValuesHelperReplaceContext)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ReportFunctionActionNode.OnInitialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ReportFunctionActionNode.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ReportFunctionActionNode.FunctionMarkup">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ReportFunctionActionNode.DocumentLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ReportFunctionActionNode.DocumentIcon">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ReportFunctionActionNode.FunctionMarkupDynamicValuesHelper">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ReportFunctionActionNode.DocumentLabelDynamicValueHelper">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.RootTreeNode">
            <summary>
            This node is a virtual node represending the element that the tree is attached under.
            </summary>    
        </member>
        <member name="T:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.#ctor(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.OnGetExtraPrettyHtml">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.OnGetPrettyHtml(Composite.C1Console.Security.EntityTokenHtmlPrettyfier)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.Type">
            <summary>
            Contains the interface type (serialized)
            </summary>
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.Source">
            <summary>
            Contains the Id of the tree
            </summary>
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.Id">
            <summary>
            Contains the Id of the owner tree node
            </summary>
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.TreeNodeId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.GroupingValues">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.DeserializedGroupingValues">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.FolderRangeValues">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.ChildGeneratingDataElementsReferenceType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeDataFieldGroupingElementEntityToken.ChildGeneratingDataElementsReferenceValue">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.Tree">
            <summary>    
            Result of parsing tree definition xml file
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Tree.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Tree.GetTreeNode(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Tree.GetActionNode(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Tree.HasAttachmentPoints(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Tree.HasPossibleAttachmentPoints(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Tree.GetAttachmentPoints(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.Tree.LogTree">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Tree.TreeId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Tree.AllowedAttachmentApplicationName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Tree.RootTreeNode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.Tree.BuildResult">
            <summary>
            Gets or sets information about validation erros.
            </summary>
            <value>
            The build result.
            </value>
            <exclude/>
        </member>
        <member name="M:Composite.C1Console.Trees.TreeFacadeImpl.AddCustomAttachmentPoint(System.String,Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.Plugins.ElementAttachingProvider.ElementAttachingProviderPosition)">
            <summary>
            This will add a attachment point until the system flushes.
            This can be used by element provider implementors to attach trees to their exising trees.
            </summary>
            <param name="treeId"></param>
            <param name="entityToken"></param>
            <param name="position"></param>
        </member>
        <member name="T:Composite.C1Console.Trees.AncestorResult">
            <summary>    
            Information about the ancestor node withing the same tree
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.AncestorResult.#ctor(Composite.C1Console.Trees.TreeNode,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.AncestorResult.TreeNode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.AncestorResult.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.TreeNodeDynamicContextDirection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.TreeNodeDynamicContextDirection.Down">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Trees.TreeNodeDynamicContextDirection.Up">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.TreeNodeDynamicContext">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeNodeDynamicContext.#ctor(Composite.C1Console.Trees.TreeNodeDynamicContextDirection)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNodeDynamicContext.ElementProviderName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNodeDynamicContext.Direction">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNodeDynamicContext.FieldGroupingValues">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNodeDynamicContext.FieldFolderRangeValues">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNodeDynamicContext.Piggybag">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNodeDynamicContext.CurrentEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeNodeDynamicContext.CurrentTreeNode">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.TreeSimpleElementEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeSimpleElementEntityToken.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeSimpleElementEntityToken.GetParentEntityToken">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeSimpleElementEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeSimpleElementEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeSimpleElementEntityToken.OnGetPrettyHtml(Composite.C1Console.Security.EntityTokenHtmlPrettyfier)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.TreeSimpleElementEntityToken.OnGetTypePrettyHtml">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeSimpleElementEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeSimpleElementEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeSimpleElementEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeSimpleElementEntityToken.TreeNodeId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeSimpleElementEntityToken.SerializedParentEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.TreeSimpleElementEntityToken.ParentEntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Trees.ValidationError">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ValidationError.Create(System.String,System.String,System.Object[])">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Trees.ValidationError.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ValidationError.XPath">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Trees.ValidationError.Message">
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.AssemblyFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyFacade.GetLoadedAssembliesFromBin">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyFacade.GetAssembliesFromBin">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyFacade.GetAppCodeAssembly">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyFacade.IsInMemoryAssembly(System.Reflection.Assembly)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyFacade.IsAppCodeDll(System.Reflection.Assembly)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.AssemblyFacade.GetAllAssemblies">
            <summary>
            Gets assemblies from bin and app code assembly
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Types.CodeGenerationHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationHelper.GetTypeAlias(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.CodeGenerationHelper.GetTypeAlias(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.CompatibilityCheckResult">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.CompatibilityCheckResult.Successful">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.CompatibilityCheckResult.CompilerResults">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.CompatibilityCheckResult.ErrorMessage">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.StringSizeValidatorAttribute">
            <summary>
            Validator rule for data type properties.
            Validate that a string has a length than falls within a minimum and maximum length. 
            </summary>
        </member>
        <member name="M:Composite.Data.Validation.Validators.StringSizeValidatorAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Validator rule for data type properties.
            Validate that a string has a length than falls within a minimum and maximum length. 
            </summary>
            <param name="lowerBound">minimum</param>
            <param name="upperBound">maximum</param>
        </member>
        <member name="M:Composite.Data.Validation.Validators.StringSizeValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.StringSizeValidatorAttribute.LowerBound">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.StringSizeValidatorAttribute.UpperBound">
            <exclude />
        </member>
        <member name="T:Composite.Verify">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Verify.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Asserts that argument value is not null
            </summary>
            <param name="value">The argument's value.</param>
            <param name="paramName">The parameter's name.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Composite.Verify.ArgumentNotNullOrEmpty(System.String,System.String)">
            <summary>
            Asserts that argument value is not null or emptry
            </summary>
            <param name="value">The argument's value.</param>
            <param name="paramName">The parameter's name.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Composite.Verify.ArgumentCondition(System.Boolean,System.String,System.String)">
            <summary>
            Checks a condition.
            </summary>
            <param name="condition">A condition to check.</param>
            <param name="paramName">Parameter name.</param>
            <param name="message">The message.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Composite.Verify.IsTrue(System.Boolean,System.String)">
            <summary>
            If condition isn't true, throws an <see cref="T:System.InvalidOperationException"/> exception.
            </summary>
            <param name="condition"></param>
            <param name="message"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Composite.Verify.IsFalse(System.Boolean,System.String)">
            <summary>
            If condition is true, throws an <see cref="T:System.InvalidOperationException"/> exception.
            </summary>
            <param name="condition"></param>
            <param name="message"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Composite.Verify.That(System.Boolean,System.String,System.Object[])">
            <summary>
            If condition isn't true, throws an <see cref="T:System.InvalidOperationException"/> exception.
            </summary>
            <param name="condition"></param>
            <param name="message"></param>
            <param name="formatArgs">Parameters for string.Format method.</param> 
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Composite.Verify.IsNull(System.Object,System.String)">
            <summary>
            Checks that the value is null.
            </summary>
            <param name="value">The value.</param>
            <param name="message">The message to be an exception desctiption.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Composite.Verify.IsNotNull(System.Object,System.String)">
            <summary>
            Checks that the value is not null.
            </summary>
            <param name="value">The value.</param>
            <param name="message">The message to be an exception desctiption.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Composite.Verify.IsNotNull(System.Object,System.String,System.Object[])">
            <summary>
            Checks that the value is not null.
            </summary>
            <param name="value">The value.</param>
            <param name="message">The message to be an exception desctiption.</param>
            <param name="formattingArgs">Parameters for string.Format() method.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Composite.Verify.ThrowInvalidOperationException(System.String)">
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Composite.Verify.ThrowArgumentNullException(System.String)">
            <summary>
            Throws an "ThrowArgumentNullException" exception.
            </summary>
            <param name="parameterName">The parameter's name</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Composite.Verify.ThrowArgumentException(System.String,System.String)">
            <summary>
            Throws an "ThrowArgumentNullException" exception.
            </summary>
            <param name="parameterName">The parameter's name</param>
            <param name="message">The message.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Composite.Verify.ResultNotNull``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Verify.ResultNotNull``1(``0,System.String,System.Object[])">
            <exclude />
        </member>
        <member name="M:Composite.Verify.StringNotIsNullOrWhiteSpace(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Verify.StringNotIsNullOrWhiteSpace(System.String,System.String,System.Object[])">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.BroadcastMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.BroadcastMessageQueueItem.Name">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.BroadcastMessageQueueItem.Value">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.CollapseAndRefreshConsoleMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.CloseAllViewsMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.CloseAllViewsMessageQueueItem.Reason">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataLocalizationFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.GetUrlMappingName(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.GetCultureInfoByUrlMappingName(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.IsLocalized(Composite.Data.IData)">
            <summary>
            Tells if a IData is currently localized or not
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.IsLocalized(System.Type)">
            <summary>
            Tells if a IData is currently localized or not
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.IsLocalizable(Composite.Data.IData)">
            <summary>
            Tells if a type can be localized. Currently is dynamic types and IPage that
            can be localized. This does not tell if the given type IS currently localized.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.IsLocalizable(System.Type)">
            <summary>
            Tells if a type can be localized. Currently is dynamic types and IPage that
            can be localized. This does not tell if the given type IS currently localized.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.GetReferencingLocalizeFailingProperties(Composite.Data.ProcessControlled.ILocalizedControlled)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataLocalizationFacade.GetCultureTitle(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataLocalizationFacade.UseLocalization">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataLocalizationFacade.WhiteListedLocales">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataLocalizationFacade.DefaultUrlMappingCulture">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataLocalizationFacade.DefaultLocalizationCulture">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataLocalizationFacade.ActiveLocalizationCultures">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataLocalizationFacade.ActiveLocalizationNames">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataLocalizationFacade.UrlMappingNames">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataPropertyValueCollection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataPropertyValueCollection.AddKeyProperty(System.Reflection.PropertyInfo,System.Object)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataPropertyValueCollection.PropertyValues">
            <exclude />
        </member>
        <member name="T:Composite.Data.ExtendedDataType.Debug.DynamicTempTypeCreator">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.ExtendedDataType.Debug.DynamicTempTypeCreator.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.ExtendedDataType.Debug.DynamicTempTypeCreator.UseTempTypeCreator">
            <exclude />
        </member>
        <member name="P:Composite.Data.ExtendedDataType.Debug.DynamicTempTypeCreator.TypeName">
            <exclude />
        </member>
        <member name="P:Composite.Data.ExtendedDataType.Debug.DynamicTempTypeCreator.TypeTitle">
            <exclude />
        </member>
        <member name="P:Composite.Data.ExtendedDataType.Debug.DynamicTempTypeCreator.DataFieldDescriptors">
            <exclude />
        </member>
        <member name="T:Composite.Data.GroupByPriorityAttribute">
            <summary>
            Assign this to properties on your IData interfaces to control default page foldering of tree items.
            </summary>
        </member>
        <member name="M:Composite.Data.GroupByPriorityAttribute.#ctor(System.Int32)">
            <summary>
            Specify that this field should be used for default tree foldering.
            Multiple fields on a data type may create foldering. In that case the priority has importance.
            </summary>
            <param name="priority">Priority controls which fields are used first when foldering. Low number win.</param>
        </member>
        <member name="P:Composite.Data.GroupByPriorityAttribute.Priority">
            <summary>
            Priority for foldering.
            </summary>
        </member>
        <member name="T:Composite.Data.Hierarchy.IDataAncestorProvider">
            <summary>    
            Implementations of this interface is used for determining hierarchy when
            data items are used as elements in trees. 
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Hierarchy.IDataAncestorProvider.GetParent(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="P:Composite.Data.IDataLocalizationFacade.UseLocalization">
            <summary>
            This method return true if the system should use localization functionallity.
            In ohter words, if there are two or more languages added then localization functionallity
            should be used.
            </summary>
        </member>
        <member name="T:Composite.Data.ReferenceFailingPropertyInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.ReferenceFailingPropertyInfo.#ctor(Composite.Data.DynamicTypes.DataFieldDescriptor,System.Type,Composite.Data.IData,System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Data.ReferenceFailingPropertyInfo.DataFieldDescriptor">
            <summary>
            DataFieldDescriptor of the property that are the reference
            </summary>
        </member>
        <member name="P:Composite.Data.ReferenceFailingPropertyInfo.ReferencedType">
            <summary>
            Data type that are refernced
            </summary>
        </member>
        <member name="P:Composite.Data.ReferenceFailingPropertyInfo.OriginLocaleDataValue">
            <summary>
            This holds the value of the reference in the same locale
            as the IData value given to the call to
            GetReferencingLocalizeFailingProperties
            This may be null in case of optional references
            </summary>
        </member>
        <member name="P:Composite.Data.ReferenceFailingPropertyInfo.OptionalReferenceWithValue">
            <summary>
            This is true if the reference is optional and 
            if the referenced item is existing in the old locale.
            </summary>
        </member>
        <member name="T:Composite.Data.LocalizationScopeManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.LocalizationScopeManager.MapByType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.LocalizationScopeManager.EnterThreadLocal">
            <summary>
            Move the stack handling scope to a thread local store, enabling simultaneous threads to mutate (their own) scope. This will be in effect untill the thread has completed.
            </summary>
        </member>
        <member name="M:Composite.Data.LocalizationScopeManager.ExitThreadLocal">
            <summary>
            Move the stack handling to request scope.
            </summary>
        </member>
        <member name="P:Composite.Data.LocalizationScopeManager.CurrentLocalizationScope">
            <exclude />
        </member>
        <member name="T:Composite.Data.ProcessControlled.ILocalizedControlled">
            <summary>
            Implement this interface to allow your data type to exist in multiple language scopes (i.e. enable localizing of data).
            </summary>
        </member>
        <member name="P:Composite.Data.ProcessControlled.ILocalizedControlled.CultureName">
            <summary>
            The locale of data.
            </summary>
        </member>
        <member name="P:Composite.Data.ProcessControlled.ILocalizedControlled.SourceCultureName">
            <summary>
            The locale data originaled from.
            </summary>
        </member>
        <member name="T:Composite.Data.Types.IFlowInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFlowInformation.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFlowInformation.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFlowInformation.ConsoleId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFlowInformation.SerializedFlowToken">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFlowInformation.SerializedEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFlowInformation.SerializedActionToken">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFlowInformation.TimeStamp">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.ISystemActiveLocale">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISystemActiveLocale.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISystemActiveLocale.CultureName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISystemActiveLocale.UrlMappingName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISystemActiveLocale.IsDefault">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageStructure">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageStructure.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageStructure.ParentId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageStructure.LocalOrdering">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserActiveLocale">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserActiveLocale.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserActiveLocale.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserActiveLocale.CultureName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserConsoleInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserConsoleInformation.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserConsoleInformation.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserConsoleInformation.ConsoleId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserConsoleInformation.TimeStamp">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.GroupingValues">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.Payload">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.DataGroupingProviderHelper.DataGroupingProviderHelperEntityToken.SerializedTypeName">
            <exclude />
        </member>
        <member name="T:Composite.Core.Localization.LocalizationParser">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Localization.LocalizationParser.Parse(System.Xml.Linq.XContainer)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Localization.LocalizationXmlConstants">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Localization.LocalizationXmlConstants.XmlNamespace">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageDescription">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.PackageFileDownloadUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.PackageVersion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.Description">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.EulaId">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.GroupName">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.Id">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.InstallationRequireLicenseFileUpdate">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.IsFree">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.IsTrial">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.LicenseRuleId">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.MaxCompositeVersionSupported">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.MinCompositeVersionSupported">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.PriceAmmount">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.PriceCurrency">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.ReadMoreUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.TechicalDetails">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.TrialPeriodDays">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.UpgradeAgreementMandatory">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageDescription.Vendor">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.ConfigurationTransformationPackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.ConfigurationTransformationPackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.ConfigurationTransformationPackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.ConfigurationTransformationPackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.ConfigurationTransformationPackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.ConfigurationTransformationPackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.IPackageInstallerUninstallerFactory">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.IPackageInstallerUninstallerFactory.CreateUninstaller(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,Composite.Core.PackageSystem.PackageInformation)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageManagerInstallProcess">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerInstallProcess.Serialize(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerInstallProcess.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerInstallProcess.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerInstallProcess.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerInstallProcess.Install">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerInstallProcess.CancelInstallation">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageManagerInstallProcess.CanBeUninstalled">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageManagerInstallProcess.FlushOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageManagerInstallProcess.ReloadConsoleOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageManagerInstallProcess.PreInstallValidationResult">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageManagerUninstallProcess">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerUninstallProcess.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManagerUninstallProcess.Uninstall">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageManagerUninstallProcess.FlushOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageManagerUninstallProcess.ReloadConsoleOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageManagerUninstallProcess.PreUninstallValidationResult">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.ServerUrlValidationResult">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.ServerUrlValidationResult.Http">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.ServerUrlValidationResult.Https">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.ServerUrlValidationResult.Invalid">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageServerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.ValidateServerUrl(System.String)">
            <summary>
            Connects to the server using either https or http and 
            checks to see if it supports the needed services
            </summary>
            <param name="packageServerUrl">
            Cleaned url (ex: www.composite.net)
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.GetPackageDescriptions(System.String,System.Guid,System.Globalization.CultureInfo)">
            <summary>
            Given a cleaned url, returns a series of PackageDescriptions 
            </summary>
            <param name="packageServerUrl">
            Cleaned url (ex: www.composite.net)
            </param>
            <param name="installationId"></param>
            <param name="userCulture"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.GetAllPackageDescriptions(System.Guid,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.GetEulaText(System.String,System.Guid,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.GetInstallFileStream(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.RegisterPackageInstallationCompletion(System.String,System.Guid,System.Guid,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.RegisterPackageInstallationFailure(System.String,System.Guid,System.Guid,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.RegisterPackageUninstall(System.String,System.Guid,System.Guid,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageServerFacade.ClearServerCache">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageSystemServices">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageSystemServices.GetFilteredAllAvailablePackages">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageSystemServices.GetPackageSourceNameByPackageId(System.Guid,System.Guid,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageSystemServices.GetEulaText(Composite.Core.PackageSystem.PackageDescription)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageSystemServices.GetPackageInformationFromZipfile(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.Id">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.GroupName">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.Author">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.Website">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.Description">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.Version">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.CanBeUninstalled">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.SystemLockingType">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.FlushOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.ReloadConsoleOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.MaxCompositeVersionSupported">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInformation.MinCompositeVersionSupported">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.Foundation.PackageManagerInstallProcessSerializerHandler">
            <summary>
            This class is only for pleasing the workflow system. 
            </summary>
        </member>
        <member name="T:Composite.Core.PackageSystem.Foundation.PackageManagerUninstallProcessSerializerHandler">
            <summary>
            This class is only for pleasing the workflow system. 
            </summary>
        </member>
        <member name="T:Composite.Core.PackageSystem.Foundation.SystemLockingType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.Foundation.SystemLockingType.None">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.Foundation.SystemLockingType.Soft">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.Foundation.SystemLockingType.Hard">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.IPackageUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.IPackageUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.IPackageUninstaller.Uninstall(Composite.Core.PackageSystem.Foundation.SystemLockingType)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.IPackageUninstaller.FlushOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.IPackageUninstaller.ReloadConsoleOnCompletion">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.InstalledPackageInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.Id">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.GroupName">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.Version">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.Author">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.Website">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.Description">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.InstallDate">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.InstalledBy">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.IsLocalInstalled">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.CanBeUninstalled">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.FlushOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.ReloadConsoleOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.SystemLockingType">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.PackageServerAddress">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.InstalledPackageInformation.PackageInstallPath">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.RaisePropertyChanged(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.ExtensionData">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.Id">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.GroupName">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.PackageVersion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.Author">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.Description">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.TechicalDetails">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.ReadMoreUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.IsTrial">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.TrialPeriodDays">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.IsFree">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.InstallationRequireLicenseFileUpdate">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.PriceAmmount">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.PriceCurrency">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.UpgradeAgreementMandatory">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.MinCompositeVersionSupported">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.MaxCompositeVersionSupported">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.RequiredPackages">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.EulaId">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.PackageFileDownloadUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.LicenseId">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.Culture">
            <exclude />
        </member>
        <member name="E:Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor.PropertyChanged">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.PackageReference">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackageReference.RaisePropertyChanged(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageReference.ExtensionData">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageReference.Id">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.WebServiceClient.PackageReference.Name">
            <exclude />
        </member>
        <member name="E:Composite.Core.PackageSystem.WebServiceClient.PackageReference.PropertyChanged">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.PackagesSoap">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoap.GetPackageList(Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoap.IsOperational">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoap.GetEulaText(Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoap.RegisterPackageUninstall(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoap.RegisterPackageInstallationCompletion(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoap.RegisterPackageInstallationFailure(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequest)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequest">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequest.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequest.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequest.#ctor(Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequestBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequestBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequestBody.InstallationId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequestBody.Culture">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequestBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequestBody.#ctor(System.Guid,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponse">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponse.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponse.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponse.#ctor(Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponseBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponseBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponseBody.GetPackageListResult">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponseBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetPackageListResponseBody.#ctor(Composite.Core.PackageSystem.WebServiceClient.PackageDescriptor[])">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequest">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequest.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequest.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequest.#ctor(Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequestBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequestBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequestBody.eulaId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequestBody.userCulture">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequestBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequestBody.#ctor(System.Guid,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponse">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponse.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponse.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponse.#ctor(Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponseBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponseBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponseBody.GetEulaTextResult">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponseBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.GetEulaTextResponseBody.#ctor(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequest">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequest.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequest.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequest.#ctor(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody.InstallationId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody.PackageId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody.localUserName">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody.localUserIp">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequestBody.#ctor(System.Guid,System.Guid,System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallResponse">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallResponse.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallResponse.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallResponse.#ctor(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallResponseBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallResponseBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallResponseBody.#ctor">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequest">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequest.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequest.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequest.#ctor(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody.InstallationId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody.PackageId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody.LocalUserName">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody.localUserIp">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequestBody.#ctor(System.Guid,System.Guid,System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionResponse">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionResponse.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionResponse.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionResponse.#ctor(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionResponseBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionResponseBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionResponseBody.#ctor">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequest">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequest.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequest.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequest.#ctor(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody.InstallationId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody.PackageId">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody.LocalUserName">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody.localUserIp">
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody.exceptionString">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureRequestBody.#ctor(System.Guid,System.Guid,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureResponse">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureResponse.Body">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureResponse.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureResponse.#ctor(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureResponseBody)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureResponseBody">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationFailureResponseBody.#ctor">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapChannel">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.Composite#Core#PackageSystem#WebServiceClient#PackagesSoap#GetPackageList(Composite.Core.PackageSystem.WebServiceClient.GetPackageListRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.GetPackageList(System.Guid,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.IsOperational">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.Composite#Core#PackageSystem#WebServiceClient#PackagesSoap#GetEulaText(Composite.Core.PackageSystem.WebServiceClient.GetEulaTextRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.GetEulaText(System.Guid,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.Composite#Core#PackageSystem#WebServiceClient#PackagesSoap#RegisterPackageUninstall(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageUninstallRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.RegisterPackageUninstall(System.Guid,System.Guid,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.Composite#Core#PackageSystem#WebServiceClient#PackagesSoap#RegisterPackageInstallationCompletion(Composite.Core.PackageSystem.WebServiceClient.RegisterPackageInstallationCompletionRequest)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.RegisterPackageInstallationCompletion(System.Guid,System.Guid,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.WebServiceClient.PackagesSoapClient.RegisterPackageInstallationFailure(System.Guid,System.Guid,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Application.ApplicationOnlineHandlerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ApplicationOnlineHandlerFacade.TurnApplicationOffline(System.Boolean)">
            <summary>
            Turns application offline
            </summary>
            <param name="softTurnOff">
            Setting softTurnOff to true will only make the application offline to the client, but 
            not actually turning off the application. Setting this to false will turn off the 
            application.
            </param>
        </member>
        <member name="M:Composite.Core.Application.ApplicationOnlineHandlerFacade.TurnApplicationOffline(System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ApplicationOnlineHandlerFacade.CanPutApplicationOffline(System.Boolean,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ApplicationOnlineHandlerFacade.TurnApplicationOnline">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.ApplicationOnlineHandlerFacade.TurnOffScope(System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Application.ApplicationOnlineHandlerFacade.IsApplicationOnline">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.IApplicationOnlineHandlerFacade.TurnApplicationOffline(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="softTurnOff">
            Setting softTurnOff to true will only make the application offline to the client, but 
            not actually turning off the application. Setting this to false will turn off the 
            application.
            </param>
            <param name="recompileCompositeGenerated">
            Settings this to true will result in a recompilation of assemblies at startup
            </param>
        </member>
        <member name="T:Composite.Core.Application.TempDirectoryFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.TempDirectoryFacade.CreateTempDirectory">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.TempDirectoryFacade.OnApplicationStart">
            <exclude />
        </member>
        <member name="M:Composite.Core.Application.TempDirectoryFacade.OnApplicationEnd">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.LockSystemConsoleMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.CascadeDeleteType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.CascadeDeleteType.Allow">
            <exclude />
        </member>
        <member name="F:Composite.Data.CascadeDeleteType.Disallow">
            <exclude />
        </member>
        <member name="F:Composite.Data.CascadeDeleteType.Disable">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataMoveResult">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.DataMoveResult.MovedData">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataMoveResult.MovedRefereeDatas">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetEmptyPredicate``1">
            <summary>
            Gets an empty predicate (f => true)
            </summary>
        </member>
        <member name="M:Composite.Data.DataFacade.SetDataInterceptor``1(Composite.Data.DataInterceptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.SetDataInterceptor(System.Type,Composite.Data.DataInterceptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.HasDataInterceptor``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.HasDataInterceptor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ClearDataInterceptor``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ClearDataInterceptor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData``1(System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData``1(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData(System.Type,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetData(System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromDataSourceId``1(Composite.Data.DataSourceId,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromDataSourceId``1(Composite.Data.DataSourceId)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromDataSourceId(Composite.Data.DataSourceId)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromDataSourceId(Composite.Data.DataSourceId,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromOtherScope``1(``0,Composite.Data.DataScopeIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromOtherLocale``1(``0,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromOtherScope(Composite.Data.IData,Composite.Data.DataScopeIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataFromOtherScope(Composite.Data.IData,Composite.Data.DataScopeIdentifier,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetPredicateExpressionByUniqueKey``1(Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetPredicateExpressionByUniqueKey``1(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetPredicateExpressionByUniqueKey(System.Type,Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetPredicateExpressionByUniqueKey(System.Type,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.TryGetDataByUniqueKey``1(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.TryGetDataByUniqueKey``1(Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataByUniqueKey``1(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.TryGetDataByUniqueKey(System.Type,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.TryGetDataByUniqueKey(System.Type,Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataByUniqueKey(System.Type,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataByUniqueKey(System.Type,Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataOrderedBy(System.Type,System.Reflection.PropertyInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataOrderedByQueryable(System.Type,System.Reflection.PropertyInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetPredicateExpression(System.Type,Composite.Data.DataPropertyValueCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillUpdateSucceed(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillUpdateSucceed(System.Collections.Generic.IEnumerable{Composite.Data.IData})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Update(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Update(Composite.Data.IData,System.Boolean,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Update(System.Collections.Generic.IEnumerable{Composite.Data.IData})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Update(System.Collections.Generic.IEnumerable{Composite.Data.IData},System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Update(System.Collections.Generic.IEnumerable{Composite.Data.IData},System.Boolean,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.BuildNew``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.BuildNew``1(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.BuildNew(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.BuildNew(System.Type,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillAddNewSucceed(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillAddNewSucceed``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillAddNewSucceed``1(System.Collections.Generic.IEnumerable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew``1(``0,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew``1(System.Collections.Generic.IEnumerable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew``1(``0,System.Boolean)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can 
            cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew``1(``0,System.Boolean,System.Boolean)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can 
            cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="suppressEventing"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew``1(``0,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can 
            cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="suppressEventing"></param>
            <param name="performeValidation"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew(Composite.Data.IData,System.Boolean,System.Boolean,System.String)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="suppressEventing"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew(Composite.Data.IData,System.Type,System.Boolean,System.Boolean,System.String)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="interfaceType"></param>
            <param name="suppressEventing"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew(Composite.Data.IData,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="suppressEventing"></param>
            <param name="performForeignKeyIntegrityCheck"></param>        
            <param name="performeValidation"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew(Composite.Data.IData,System.Type,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="interfaceType"></param>
            <param name="suppressEventing"></param>
            <param name="performForeignKeyIntegrityCheck"></param>        
            <param name="performeValidation"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew(Composite.Data.IData,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="suppressEventing"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <param name="performeValidation"></param>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.AddNew(Composite.Data.IData,System.Boolean)">
            <summary>
            WARNING: Setting <paramref name="performForeignKeyIntegrityCheck"/> to 'false' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataFacade.WillDeleteSucceed``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillDeleteSucceed(System.Collections.Generic.IEnumerable{Composite.Data.IData})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillDeleteSucceed(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.WillDeleteSucceed``1(System.Collections.Generic.IEnumerable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(``0,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="referencesFromAllScopes">
            If this is true then cascade delete is performed on all data scopes.
            If this is false then cascade delete is only performed in the same scope as <paramref name="data"/>
            </param>
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="datas"></param>
            <param name="suppressEventing"></param>
            <param name="referencesFromAllScopes">
            If this is true then cascade delete is performed on all data scopes.
            If this is false then cascade delete is only performed in the same scope as <paramref name="datas"/>
            </param>
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,Composite.Data.CascadeDeleteType)">
            <summary>
            Deletes the given datas. WARNING: Setting <paramref name="cascadeDeleteType"/> 
            to 'Disable' can cause serious foreign key corruption.
            </summary>
            <param name="datas"></param>
            <param name="suppressEventing"></param>
            <param name="cascadeDeleteType"></param>
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(System.Collections.Generic.IEnumerable{``0},Composite.Data.CascadeDeleteType)">
            <summary>
            Deletes the given datas. WARNING: Setting <paramref name="cascadeDeleteType"/> 
            to 'Disable' can cause serious foreign key corruption.
            </summary>
            <param name="datas"></param>
            <param name="cascadeDeleteType"></param>
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Delete(System.Collections.Generic.IEnumerable{Composite.Data.IData})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.Delete(Composite.Data.IData,Composite.Data.CascadeDeleteType)">
            <summary>
            Deletes the given datas. WARNING: Setting <paramref name="cascadeDeleteType"/> 
            to 'Disable' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="cascadeDeleteType"></param>
        </member>
        <member name="M:Composite.Data.DataFacade.Delete(System.Collections.Generic.IEnumerable{Composite.Data.IData},System.Boolean,Composite.Data.CascadeDeleteType)">
            <summary>
            Deletes the given datas. WARNING: Setting <paramref name="cascadeDeleteType"/> 
            to 'Disable' can cause serious foreign key corruption.
            </summary>
            <param name="datas"></param>
            <param name="suppressEventing"></param>
            <param name="cascadeDeleteType"></param>
        </member>
        <member name="M:Composite.Data.DataFacade.Delete(System.Collections.Generic.IEnumerable{Composite.Data.IData},Composite.Data.CascadeDeleteType)">
            <summary>
            Deletes the given datas. WARNING: Setting <paramref name="cascadeDeleteType"/> 
            to 'Disable' can cause serious foreign key corruption.
            </summary>
            <param name="datas"></param>
            <param name="cascadeDeleteType"></param>
        </member>
        <member name="M:Composite.Data.DataFacade.Delete``1(``0,System.Boolean,Composite.Data.CascadeDeleteType)">
            <summary>
            Deletes the given datas. WARNING: Setting <paramref name="cascadeDeleteType"/> 
            to 'Disable' can cause serious foreign key corruption.
            </summary>
            <param name="data"></param>
            <param name="suppressEventing"></param>
            <param name="cascadeDeleteType"></param>
        </member>
        <member name="M:Composite.Data.DataFacade.ValidatePath``1(``0,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ValidatePath``1(``0,System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataProviderNames">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDynamicDataProviderNames">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetAllInterfaces">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetAllInterfaces(Composite.Data.UserType)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetAllKnownInterfaces">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetAllKnownInterfaces(Composite.Data.UserType)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetGeneratedInterfaces">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.SetDataTag(Composite.Data.IData,System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.SetDataTag(Composite.Data.DataSourceId,System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.TryGetDataTag``1(Composite.Data.IData,System.String,``0@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.TryGetDataTag``1(Composite.Data.DataSourceId,System.String,``0@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataTag``1(Composite.Data.IData,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetDataTag``1(Composite.Data.DataSourceId,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.RemoveDataTag(Composite.Data.IData,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.RemoveDataTag(Composite.Data.DataSourceId,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ForEachDataScope(System.Type,System.Threading.ThreadStart)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetSupportedDataScopes(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.HasDataInAnyScope(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ExistsInAnyLocale``1(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ExistsInAnyLocale``1(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ExistsInAnyLocale``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ExistsInAnyLocale(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.ExistsInAnyLocale(System.Type,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetSetDataInterceptorMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetHasDataInterceptorMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetClearDataInterceptorMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetGetDataMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetGetDataFromDataSourceIdMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetGetDataWithPredicatMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetAddNewMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetMoveMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetExistsInAnyLocaleMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataFacade.GetExistsInAnyLocaleWithParamMethodInfo(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataKeyPropertyCollection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.AddKeyProperty(System.Reflection.PropertyInfo,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.AddKeyProperty(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.TryGetKeyValue(System.String,System.Object@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.Equals(Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataKeyPropertyCollection.ToString">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataKeyPropertyCollection.KeyProperties">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataKeyPropertyCollection.Count">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DynamicTypeManager">
            <summary>    
            This class is used for handling DataTypeDescriptors for all C1 data types. 
            Building new from reflection and getting already stored.
            
            This class is also used for handling stores for a given data type. 
            Including creating/altering/dropping and locales. So through this class
            you can create/alter/drop stores in a specific data provider for a given
            data type.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.BuildNewDataTypeDescriptor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.GetDataTypeDescriptor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.GetDataTypeDescriptor(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.TryGetDataTypeDescriptor(System.Type,Composite.Data.DynamicTypes.DataTypeDescriptor@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.TryGetDataTypeDescriptor(System.Guid,Composite.Data.DynamicTypes.DataTypeDescriptor@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.UpdateDataTypeDescriptor(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.UpdateDataTypeDescriptor(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.CreateStore(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.CreateStore(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.CreateStore(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.CreateStore(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.AlterStore(Composite.Data.DynamicTypes.UpdateDataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.AlterStore(Composite.Data.DynamicTypes.UpdateDataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.DropStore(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.DropStore(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.AddLocale(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.AddLocale(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.RemoveLocale(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.RemoveLocale(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.EnsureCreateStore(System.Type)">
            <summary>
            For internal use only!!!
            This method will create the store if the interfaceType has not been configured.
            </summary>
            <param name="interfaceType"></param>
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManager.EnsureCreateStore(System.Type,System.String)">
            <summary>
            For internal use only!!!
            This method will create the store if the interfaceType has not been configured.
            </summary>
            <param name="interfaceType"></param>
            <param name="providerName"></param>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DynamicTypeManager.Implementation">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.IDynamicTypeManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.BuildNewDataTypeDescriptor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.TryGetDataTypeDescriptor(System.Guid,Composite.Data.DynamicTypes.DataTypeDescriptor@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.UpdateDataTypeDescriptor(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.CreateStore(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.AlterStore(Composite.Data.DynamicTypes.UpdateDataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.DropStore(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.AddLocale(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.IDynamicTypeManager.RemoveLocale(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Foundation.IDataStoreExistenceVerifier.EnsureDataStores">
            <summary>
            Return true if any types was "created"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacadeImpl.UpdateWithNewPageFolderForeignKeySystem(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <summary>
            This method will remove a foreign key (if any exists) that is no longer possible with the
            new meta data system (IPageMetaDataDefinition)
            </summary>
            <param name="dataTypeDescriptor"></param>
            <param name="dataStoreExists"></param>
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacadeImpl.UpdateWithNewMetaDataForeignKeySystem(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            This method will remove a foreign key (if any exists) that is no longer possible with the
            new meta data system (IPageMetaDataDefinition)
            </summary>
            <param name="dataTypeDescriptor"></param>
        </member>
        <member name="M:Composite.Data.IDataFacade.AddNew``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            This method will add the given data.
            This method will also create a store if no data provider supports the given data interface T
            and allowStoreCreation is true.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="datas"></param>
            <param name="allowStoreCreation"></param>
            <param name="suppressEventing"></param>
            <param name="performForeignKeyIntegrityCheck"></param>
            <param name="performeValidation"></param>
            <param name="writeableProviders">null is allowed</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.IDataFacade.ValidatePath``1(``0,System.String,System.String@)">
            <summary>
            See <see cref="T:Composite.Data.Plugins.DataProvider.IFileSystemDataProvider"/>
            </summary>
            <typeparam name="TFile"></typeparam>
            <param name="file"></param>
            <param name="providerName"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.Types.Foundation.ExceptingSerializerHandler">
            <summary>
            This is for forcing the developer to implement thier own ISerializerHandler
            </summary>
        </member>
        <member name="T:Composite.Data.Types.IPackageServerSource">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPackageServerSource.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPackageServerSource.Url">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.BindablePropertyAttribute">
            <summary>
            Defines that a property supports data binding. This attribute should only be assigned to updateable fields.
            </summary>
            <exclude />    
        </member>
        <member name="T:Composite.C1Console.Forms.ControlValuePropertyAttribute">
            <summary>
            Defines the default property of a UiControl that "inner values" will be assigned to.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Forms.Plugins.FunctionFactory.IFormFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Plugins.FunctionFactory.IFormFunction.Execute">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Plugins.FunctionFactory.IFormFunctionFactory">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Plugins.FunctionFactory.IFormFunctionFactory.CreateFunction">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Plugins.FunctionFactory.FunctionFactoryData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.CoreUiControls.ContainerUiControlBase">
            <summary>
            Base class for UiControl containers. 
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.ContainerUiControlBase.UiControls">
            <summary>
            The list of contained UiControls.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Forms.CoreUiControls.FileUploadUiControl">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.FileUploadUiControl.UploadedFile">
            <summary>
            </summary>
        </member>
        <member name="T:Composite.C1Console.Forms.CoreUiControls.UploadedFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.CoreUiControls.UploadedFile.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.UploadedFile.HasFile">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.UploadedFile.FileName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.UploadedFile.ContentType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.UploadedFile.ContentLength">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.UploadedFile.FileStream">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.FunctionCallsDesignerUiControl.SessionStateProvider">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.FunctionCallsDesignerUiControl.SessionStateId">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.FunctionParameterDesignerUiControl.SessionStateProvider">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.FunctionParameterDesignerUiControl.SessionStateId">
            <summary>
            </summary>
        </member>
        <member name="T:Composite.C1Console.Forms.CoreUiControls.ITabbedContainerUiControl">
            <summary>
            Base class for UiControl tabbed containers. 
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.ITabbedContainerUiControl.PreSelectedIndex">
            <summary>
            Zero-based index of pre selected tab.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.QueryCallDefinitionsEditorUiControl.Queries">
            <summary>
            List of "Local name" and "Query Id" elements
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.QueryCallDefinitionsEditorUiControl.Parameters">
            <summary>
            Lookup where "Local name" is key and value is a key value pair
            </summary>
        </member>
        <member name="T:Composite.C1Console.Forms.CoreUiControls.TextBoxType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.String">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.Integer">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.Decimal">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.Password">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.ProgrammingIdentifier">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.ProgrammingNamespace">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.ReadOnly">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.TextBoxType.Guid">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.CoreUiControls.TypeFieldDesignerUiControl">
            <summary>
            Provides editing functionality for DataFieldDescriptor elements
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.TypeFieldDesignerUiControl.Fields">
            <summary>
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.TypeFieldDesignerUiControl.LabelFieldName">
            <summary>
            </summary>
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.UiControlTypeSelectorMode.InterfaceTypes">
            <summary>
            Include interfaces in the result.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.UiControlTypeSelectorMode.ConcreteTypes">
            <summary>
            Include concrete types in the result.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Forms.CoreUiControls.UiControlTypeSelectorMode.PrimitiveTypes">
            <summary>
            Include primitives in the result.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.XmlFunctionsDefinitionsEditorUiControl.XmlFunctions">
            <summary>
            List of "CompositeFuntionName" and "Result Name" pairs
            </summary>
        </member>
        <member name="P:Composite.C1Console.Forms.CoreUiControls.XmlFunctionsDefinitionsEditorUiControl.Parameters">
            <summary>
            Lookup where "Local name" is key and value is a key value pair
            </summary>
        </member>
        <member name="T:Composite.C1Console.Forms.DataServices.FormDefinitionFileMarkupProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.IFormMarkupProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.IFormMarkupProvider.GetReader">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.DataServices.FormDefinitionFileMarkupProvider.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.DataServices.FormDefinitionFileMarkupProvider.GetReader">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.DataServices.IFormDefinitionFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFile.FolderPath">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFile.FileName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl.BindStateToControlProperties">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl.FormPath">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl.Debug">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl.Bindings">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl.Label">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.DataServices.UiControls.EmbeddedFormUiControl.CompiledUiControl">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.FormFlowEventHandler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.IFormFlowRenderingService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.IFormFlowRenderingService.RerenderView">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.IFormFlowRenderingService.ShowFieldMessage(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.IFormFlowRenderingService.SetSaveStatus(System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.IFormFlowRenderingService.RerenderViewRequested">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.IFormFlowRenderingService.HasFieldMessages">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.IFormEventIdentifier">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.IFormEventIdentifier.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.StandardEventIdentifiers">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.Save">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.SaveAndPublish">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.SaveAs">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.Next">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.Previous">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.Finish">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.Cancel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.Preview">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.CustomEvent01">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.CustomEvent02">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.CustomEvent03">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.CustomEvent04">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.StandardEventIdentifiers.CustomEvent05">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.SaveEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.SaveEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.SaveEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.SaveAndPublishEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.SaveAndPublishEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.SaveAndPublishEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.SaveAsEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.SaveAsEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.SaveAsEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.PreviewEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.PreviewEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.PreviewEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.NextEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.NextEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.NextEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.PreviousEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.PreviousEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.PreviousEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.FinishEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.FinishEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.FinishEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.CancelEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.CancelEvent.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.CancelEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.CustomEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.CustomEvent.#ctor(System.Int32)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Flows.CustomEvent.BindingName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.FormDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormDefinition.#ctor(System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.FormDefinition.FormMarkup">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.FormDefinition.Bindings">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.IFormChannelIdentifier">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.IFormChannelIdentifier.ChannelName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.FormKeyTagNames">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.DefaultPropertyName">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.FormDefinition">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.Layout">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.Bindings">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.Binding">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.Bind">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.Read">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.IfCondition">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.IfWhenTrue">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.FormKeyTagNames.IfWhenFalse">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.FormsPropertyAttribute">
            <summary>
            Defines that a property should be visuble / accessible in the forms environment.
            </summary>
            <exclude />    
        </member>
        <member name="T:Composite.C1Console.Forms.FormTreeCompiler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormTreeCompiler.Compile(System.Xml.XmlReader,Composite.C1Console.Forms.IFormChannelIdentifier,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormTreeCompiler.Compile(System.Xml.XmlReader,Composite.C1Console.Forms.IFormChannelIdentifier,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Composite.Data.Validation.ClientValidationRules.ClientValidationRule}})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormTreeCompiler.Compile(System.Xml.XmlReader,Composite.C1Console.Forms.IFormChannelIdentifier,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormTreeCompiler.Compile(System.Xml.XmlReader,Composite.C1Console.Forms.IFormChannelIdentifier,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Composite.Data.Validation.ClientValidationRules.ClientValidationRule}})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormTreeCompiler.Compile(System.Xml.XmlReader,Composite.C1Console.Forms.IFormChannelIdentifier,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormTreeCompiler.Compile(System.Xml.XmlReader,Composite.C1Console.Forms.IFormChannelIdentifier,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Composite.Data.Validation.ClientValidationRules.ClientValidationRule}})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.FormTreeCompiler.SaveControlProperties">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.FormTreeCompiler.UiControl">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.FormTreeCompiler.Label">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.FormTreeCompiler.Icon">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.FormTreeCompiler.RootCompileTreeNode">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.ElementCompileTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.#ctor(Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.AddNamedProperty(Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.AddNamedProperty(System.String,Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.Equals(Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.XmlSourceNodeInformation">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.Children">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.DefaultProperties">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.NamedProperties">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.AllNamedProperties">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.AllSubNodes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.CompileTreeNode.CompilerId">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.ElementCompileTreeNode.#ctor(Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.ElementCompileTreeNode.Producer">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.ElementCompileTreeNode.AddedProperties">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode.#ctor(System.String,Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation,System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode.Name">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode.IsNamespaceDeclaration">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode.Value">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode.InclosingProducerName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.PropertyCompileTreeNode.ClientValidationRules">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation.#ctor(System.Int32,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation.Depth">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation.Name">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation.TagName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation.NamespaceURI">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.Foundation.FormTreeCompiler.CompileTreeNodes.XmlSourceNodeInformation.XPath">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.Plugins.FunctionFactory.NonConfigurableFunctionFactory">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.RequiredValueAttribute">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.SchemaInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.SchemaInfo.ChannelIdentifier">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.SchemaInfo.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.SchemaInfo.Schema">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.SchemaInfo.SchemaType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.SchemaInfo.FormSchemaType">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.SchemaInfo.FormSchemaType.Uicontrols">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Forms.SchemaInfo.FormSchemaType.Functions">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.SchemaBuilder">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.SchemaBuilder.GenerateAllDynamicSchemas">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.SchemaBuilder.GenerateUiControlSchema(Composite.C1Console.Forms.IFormChannelIdentifier,System.Xml.Linq.XNamespace)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.SchemaBuilder.ElementInformationExtractor.GetXsd(System.Collections.Generic.IEnumerable{Composite.C1Console.Forms.SchemaBuilder.ElementDescriptor},System.Xml.Linq.XNamespace)">
            <summary>
            Generate XSD file by  List of ElementDescriptor
            </summary>
            <param name="xmlns">List of ElementDescriptor </param>
            <param name="targetNamespace">Namespace</param>
            <returns>XSD File</returns>
        </member>
        <member name="M:Composite.C1Console.Forms.SchemaBuilder.ElementInformationExtractor.GenerateUiControls">
            <summary>
            For all channels and namespaces of elements generate XSD file
            </summary>
            
        </member>
        <member name="M:Composite.C1Console.Forms.SchemaBuilder.ElementInformationExtractor.GenerateFunctions">
            <summary>
            For all namespaces of functions generate XSD file
            </summary>
            
        </member>
        <member name="T:Composite.C1Console.Forms.Flows.StringBasedFormMarkupProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.StringBasedFormMarkupProvider.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.Flows.StringBasedFormMarkupProvider.GetReader">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.WebChannel.IClickableTabPanelControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.WebChannel.IClickableTabPanelControl.CustomTabId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.WebChannel.IClickableTabPanelControl.EventControl">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Forms.WebChannel.WebManagementChannel">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Forms.WebChannel.WebManagementChannel.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.WebChannel.WebManagementChannel.Identifier">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Forms.WebChannel.WebManagementChannel.ChannelName">
            <exclude />
        </member>
        <member name="T:Composite.Core.Application.AppDomainLocker">
            <summary>
            This class provides system wide locking throughout all app domains for the given C1 installation. 
            It does lock lock between C1 installations if more than one runs on the same machine.
            </summary>
        </member>
        <member name="M:Composite.Core.Application.AppDomainLocker.NewLock(System.Boolean)">
            <summary>
            Returns an IDisposalbe and requires the lock. Disposing the IDisposable releases the lock.
            </summary>
            <param name="verbose">If this is true, verbose logging is done. Default is false</param>
            <example>
            <code>
            using (AppDomainLocker.NewLock)
            {
                /* This code will only run in one app domain at any time */
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Core.Application.AppDomainLocker.AcquireLock(System.Int32,System.Boolean)">
            <summary>
            Acquires a system wide lock accross all app domains for the current C1 installation. 
            This call be called multiple times from the same thread.
            To release the lock, call <see cref="M:Composite.Core.Application.AppDomainLocker.ReleaseLock(System.Boolean,System.Boolean)"/>
            </summary>
            <param name="timeout">Acquire lock timeout in milliseconds.</param>
            <param name="verbose">If this is false, no logging will be done.</param>
            <returns>True if the lock was acuired.</returns>
        </member>
        <member name="M:Composite.Core.Application.AppDomainLocker.ReleaseLock(System.Boolean,System.Boolean)">
            <summary>
            Releases the acquired system wide lock. 
            If the same thread has aqired the lock more than once, only the last call to this method
            from that thread will release the lock.         
            </summary>
            <param name="verbose"></param>
            <param name="forceRelease">If this is true, the lock will be released regardless if the current app domain has it or not.</param>
            <returns>If the lock was released</returns>
        </member>
        <member name="M:Composite.Core.Application.AppDomainLocker.IsCurrentAppDomainLockingAppDomain">
            <summary>
            Returns true if the current thread is the thread holding the lock
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Application.AppDomainLocker.IsLastReleaseForLockHoldingAppDomain">
            <summary>
            Returns true if there will be no more releases for the lock holding thread.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Application.AppDomainLocker.IsAllReleased">
            <summary>
            Returns true if all locks have been released.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.Application.AppDomainLocker.CurrentAppDomainHasLock">
            <summary>
            Returns true if the calling app domain has the lock.
            </summary>
        </member>
        <member name="P:Composite.Core.Application.AppDomainLocker.EventWaitHandleId">
            <summary>
            Used to name the EventWaitHandle, making it a system wide EventWaitHandle
            </summary>
        </member>
        <member name="T:Composite.Core.Application.AppDomainLocker.DisposableLock">
            <summary>
            Used for implementing the disposable pattern for <see cref="T:Composite.Core.Application.AppDomainLocker"/>
            </summary>
        </member>
        <member name="T:Composite.Core.IO.FileUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.FileUtils.RemoveReadOnly(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.FileUtils.Delete(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.IO.Zip.IZipFileSystem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.IZipFileSystem.ContainsFile(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.IZipFileSystem.ContainsDirectory(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.IZipFileSystem.GetFilenames">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.IZipFileSystem.GetFilenames(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.IZipFileSystem.GetDirectoryNames">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.IZipFileSystem.GetFileStream(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.IZipFileSystem.WriteFileToDisk(System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.ResourceSystem.IconResourceSystemFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.IconResourceSystemFacade.GetAllIconHandles">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.IconResourceSystemFacade.GetResourceHandle(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.IconResourceSystemFacade.GetIcon(Composite.Core.ResourceSystem.ResourceHandle,Composite.Core.ResourceSystem.IconSize)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderRootEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderRootEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderRootEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderRootEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderRootEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderRootEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.#ctor(System.Guid,System.String,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.PackageId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.GroupName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.IsLocalInstalled">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.CanBeUninstalled">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderInstalledPackageItemEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesFolderEntityToken">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesFolderEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesFolderEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesFolderEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesFolderEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesFolderEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.GroupName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.PackageId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.PackageElementProviderAvailablePackagesItemEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.WorkflowHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PackageElementProvider.WorkflowHelper.ValidationResultToBinding(System.Collections.Generic.List{Composite.Core.PackageSystem.PackageFragmentValidationResult})">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.UpdateWithNewBindings(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.GetFieldBindingPath">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.GetSelectedLocalesTypes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.GetBindingsMarkup">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.GetFormMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.FieldLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.MultiSelectLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActiveLocalesFormsHelper.MultiSelectHelp">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.InfoTableTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.InfoTableTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.InfoTableTemplateUserControlBase.Headers">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.InfoTableTemplateUserControlBase.Rows">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.InfoTableTemplateUserControlBase.Caption">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.InfoTableTemplateUserControlBase.Border">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.InfoTableTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlClickEventHandler">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlHelp">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlIconHandle">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlDisabledIconHandle">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlLaunchUrl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlIsDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ToolbarButtonTemplateUserControlBase.FormControlSaveBehaviour">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.MediaFileSelectorWidgetFunction.GenerateSelectorOptions(System.String)">
            <summary>
            Provides data for the drop down list. Left here only for backwards compatibility
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.ResourceSystem.Plugins.ResourceProvider.IStringResourceProvider.GetAllStrings(System.Globalization.CultureInfo)">
            <summary>
            A dictionary of stringId -> stringValue
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Types.TypeManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeManager.GetType(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeManager.TryGetType(System.String)">
            <summary>
            Returns the type with the provided fullName (or null).
            </summary>
            <returns>A type or null</returns>
        </member>
        <member name="M:Composite.Core.Types.TypeManager.GetRuntimeFullName(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeManager.SerializeType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeManager.TrySerializeType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeManager.HasTypeWithName(System.String)">
            <summary>
            This method return true if there is type with the fullname <para>typeFullname</para> anywhere in the system.
            </summary>
            <param name="typeFullname">Full name: namespace+name. X.Y.Z where X.Y is the namespace and Z is the type.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.C1Console.Users.UserSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.GetUserCultureInfo(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.GetUserC1ConsoleUiLanguage(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.SetUserCultureInfo(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.SetUserC1ConsoleUiLanguage(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.GetCurrentActiveLocaleCultureInfo(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.SetCurrentActiveLocaleCultureInfo(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.GetForeignLocaleCultureInfo(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.SetForeignLocaleCultureInfo(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.AddActiveLocaleCultureInfo(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.RemoveActiveLocaleCultureInfo(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Users.UserSettings.GetActiveLocaleCultureInfos(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.Username">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.C1ConsoleUiLanguage">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.CultureInfo">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.ActiveLocaleCultureInfo">
            <summary>
            This is an overload for GetCurrentActiveLocaleCultureInfo(string username)
            using the current username.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.ForeignLocaleCultureInfo">
            <summary>
            This is an overload for GetForeignLocaleCultureInfo(string username)
            using the current username.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.ActiveLocaleCultureInfos">
            <summary>
            This is an overload for GetActiveLocaleCultureInfos(string username)
            using the current username.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.LastSpecifiedNamespace">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Users.UserSettings.UserIPAddress">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.ClientValidationRuleFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.ClientValidationRuleFacade.GetClientValidationRules(System.Object,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.ValidationFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.ValidationFacade.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.ValidationFacade.Validate``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.ValidationFacade.Validate(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.ValidationFacade.Validate(System.Type,Composite.Data.IData)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.GuidNotEmptyAttribute">
            <summary>
            Validator rule for data type properties.
            Validate that a Guid is not Guid.Empty. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.GuidNotEmptyAttribute.#ctor">
            <summary>
            Validator rule for data type properties.
            Validate that a Guid is not Guid.Empty. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.GuidNotEmptyAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.ControlCompilerService">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ControlCompilerService.GetControlPaths">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ControlCompilerService.CompileAll">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.CookieHandler">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.CookieHandler.Get(System.String)">
            <summary>
            Gets a cookie value specific for the current application instance (port and virtual path). 
            The actual cookie name will be appended port and path info to ensure a unique cookie across multiple
            C1 sites running on the same host name. 
            To have explicit control over cookie naming, use the ASP.NET Cookies class.
            </summary>
            <param name="cookieName">The name used to set this cookie</param>
            <returns>Value of the cookie, or null if the cookie was not found</returns>
        </member>
        <member name="M:Composite.Core.WebClient.CookieHandler.Set(System.String,System.String)">
            <summary>
            Sets a cookie specific for the current application instance (port and virtual path). In order to read this cookie you should use the Get() methos on this class. 
            To have explicit control over cookie naming, use the ASP.NET Cookies class.
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.CookieHandler.Set(System.String,System.String,System.DateTime)">
            <summary>
            Sets a cookie specific for the current application instance (port and virtual path). In order to read this cookie you should use the Get() methos on this class. 
            To have explicit control over cookie naming, use the ASP.NET Cookies class.
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.ErrorServices">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ErrorServices.DocumentAdministrativeError(System.Exception)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ErrorServices.RedirectUserToErrorPage(System.String,System.Exception)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.IActionExecutionService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.IActionExecutionService.Execute(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken,Composite.C1Console.Tasks.TaskManagerEvent)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FlowMediators.FormFlowRendering.IFormFlowWebRenderingService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.FormFlowRendering.IFormFlowWebRenderingService.SetNewPageOutput(System.Web.UI.Control)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.FormFlowRendering.IFormFlowWebRenderingService.SetNewPageMimeType(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FlowMediators.FormFlowRendering.IFormFlowWebRenderingService.NewPageOutput">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FlowMediators.FormFlowRendering.IFormFlowWebRenderingService.NewPageMimeType">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FlowMediators.TreeServicesFacade">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.GetRoot">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.GetRoots(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.GetLocaleAwarePerspectiveElements">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.GetPerspectiveElementsWithNoSecurity">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.GetChildren(System.String,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.GetMultipleChildren(System.Collections.Generic.List{Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenParams})">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.GetLabeledProperties(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.ExecuteElementAction(System.String,System.String,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.ExecuteElementDraggedAndDropped(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.FindEntityToken(System.String,System.String,System.Collections.Generic.List{Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenParams})">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.TreeServicesFacade.ExpandNodesRec(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenInfo},System.Collections.Generic.List{System.String})">
            <summary>
            Expands nodes recurcively.
            </summary>
            <param name="entityToken"></param>
            <param name="elementProviderName"></param>
            <param name="piggybag"></param>
            <param name="entityTokensToBeExpanded"></param>
            <param name="resultList"></param>
            <param name="keyNodes"></param>
            <returns>Returns false, if there's a key node, that has [element.TreeLockBehavior == None]</returns>
        </member>
        <member name="T:Composite.Core.WebClient.FlowMediators.WebFlowUiMediator">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FlowMediators.WebFlowUiMediator.GetFlowUi(Composite.C1Console.Actions.FlowHandle,System.String,System.String,System.String@)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FlowPage">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FlowPage.SaveStepSucceeded">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FlowPage.OnSave">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FlowPage.OnSaveAndPublish">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FunctionCallEditor.IParameterEditorState">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IParameterEditorState.Parameters">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IParameterEditorState.ParameterTypeOptions">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.FunctionCalls">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.ShowLocalFunctionNames">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.WidgetFunctionSelection">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.AllowLocalFunctionNameEditing">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.AllowSelectingInputParameters">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.AllowedResultTypes">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.MaxFunctionAllowed">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.IFunctionCallEditorState.ConsoleId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.FunctionCallsXml">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.ShowLocalFunctionNames">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.AllowLocalFunctionNameEditing">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.AllowSelectingInputParameters">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.AllowedTypes">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.ParameterTypeOptions">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.AllowedResultTypes">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.WidgetFunctionSelection">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.MaxFunctionAllowed">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.FunctionCallEditor.FunctionCallEditorStateSimple.ConsoleId">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FunctionCallEditor.TreeHelper">
            <summary>
            Contains helper methods to work with serialized function calls tree
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.PathSeparator">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetRootFunctionPath(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetParameterPath(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetFunctionCallPath(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetElementToPathMap(System.Xml.Linq.XDocument)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetElementToPathMap(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetElementToIdMap(System.Xml.Linq.XDocument,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.BuildTreePathToIdDictionary(System.Xml.Linq.XDocument)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetParameterNode(System.Xml.Linq.XElement,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetNewId">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.FindByPath(System.Xml.Linq.XElement,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetUndefinedParameterNames(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetParameterNames(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetFunction(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionCallEditor.TreeHelper.GetFunctionsAndWidgetFunctions(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.FunctionUiHelper">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionUiHelper.AttachAndCompileParameterWidgets(System.Web.UI.Control,System.Collections.Generic.IEnumerable{Composite.Functions.ParameterProfile},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Composite.C1Console.Forms.IFormChannelIdentifier,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionUiHelper.BuildWidgetForParameters(System.Collections.Generic.IEnumerable{Composite.Functions.ParameterProfile},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Composite.C1Console.Forms.IFormChannelIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.FunctionUiHelper.BuildFormDefinition(System.Xml.Linq.XNode,System.Xml.Linq.XNode,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="bindingsDeclarationMarkup">Bining declarations - a list of elements like &lt;binding name="..." type="..." optional="false" xmlns="http://www.composite.net/ns/management/bindingforms/1.0" /></param>
            <param name="uiControlMarkup">The visual content of the form. All namespaces that controls and functions belong to must be declared.</param>
            <param name="bindings"></param>                
            <returns></returns>
        </member>
        <member name="T:Composite.Core.WebClient.HttpModules.AdministrativeAuthorizationHttpModule">
            <summary>
             Http Module that ensures that only authenticated users can access /Composite/* files 
             not explicitly allowed to everyone.
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.HttpModules.AdministrativeOutputGZipperHttpModule.IsGZipSupported">
            <summary>
            Determines if GZip is supported
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.HttpModules.AdministrativeOutputGZipperHttpModule.GZipEncodePage">
            <summary>
            Sets up the current page or handler to use GZip through a Response.Filter
            IMPORTANT:  
            You have to call this method before any output is generated!
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.MediaUrlHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.MediaUrlHelper.GetUrl(Composite.Data.Types.IMediaFile)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.MediaUrlHelper.GetUrl(Composite.Data.Types.IMediaFile,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.MediaUrlHelper.GetUrl(Composite.Data.Types.IMediaFile,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.MediaUrlHelper.GetFileFromQueryString(System.Collections.Specialized.NameValueCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.MediaUrlHelper.IsValidGuid(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.MediaUrlHelper.ChangeInternalMediaUrlsToPublic(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.PageUrlOptions">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlOptions.#ctor(System.String,System.Globalization.CultureInfo,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlOptions.#ctor(System.String,System.Globalization.CultureInfo,System.Guid,Composite.Core.WebClient.UrlType)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlOptions.GetPage">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.PageUrlOptions.UrlType">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.PageUrlOptions.DataScopeIdentifierName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.PageUrlOptions.Locale">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.PageUrlOptions.PageId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.PageUrlOptions.DataScopeIdentifier">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UrlType">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UrlType.Undefined">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UrlType.Public">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UrlType.Internal">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UrlType.Friendly">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.PageUrlHelper">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ParseUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ParseUrl(System.String,System.Collections.Specialized.NameValueCollection@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ParseInternalUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ParseInternalUrl(System.String,System.Collections.Specialized.NameValueCollection@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ParsePublicUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ParsePublicUrl(System.String,System.Collections.Specialized.NameValueCollection@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.GetCultureInfo(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.GetCultureInfo(System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.IsPublicUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.IsPublicUrl(Composite.Core.WebClient.UrlString)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.IsInternalUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.IsInternalUrl(Composite.Core.WebClient.UrlString)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.BuildUrl(Composite.Core.WebClient.PageUrlOptions)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.IsAdminPath(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.BuildUrl(Composite.Core.WebClient.UrlType,Composite.Core.WebClient.PageUrlOptions)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.TryParseFriendlyUrl(System.String,Composite.Core.WebClient.PageUrlOptions@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ParseQueryString(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            To be used for handling 'internal' links.
            </summary>
            <param name="queryString">Query string.</param>
            <param name="notUsedQueryParameters">Query string parameters that were not used.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.ChangeRenderingPageUrlsToPublic(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.PageUrlHelper.GetPathInfoFromInternalUrl(System.String)">
            <summary>
            "PathInfo" it is a part between aspx page path
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.Presentation.CssRequestHandler.ProcessRequest(System.Web.HttpContext)">
            Process request.
        </member>
        <member name="M:Composite.Core.WebClient.Presentation.CssRequestHandler.Parse(System.String,Composite.Core.WebClient.Presentation.CssRequestHandler.User,Composite.Core.WebClient.Presentation.CssRequestHandler.State,Composite.Core.WebClient.Presentation.CssRequestHandler.Colors)">
            Parse a sigle line
        </member>
        <member name="M:Composite.Core.WebClient.Presentation.CssRequestHandler.getURLPart(System.String)">
            Isolate URL part of a line
        </member>
        <member name="M:Composite.Core.WebClient.Presentation.CssRequestHandler.getValuePart(System.String)">
            Isolate value part of a line
        </member>
        <member name="T:Composite.Core.WebClient.Presentation.OutputTransformationManager">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Presentation.OutputTransformationManager.Activate">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Presentation.OutputTransformationManager.RegisterTransformation(System.String,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Presentation.OutputTransformationManager.XslTransformationStream.TransformBufferToOutput(System.String,System.String,System.String)">
            <summary>
            Performs the actual transformation and write the result to the original stream
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.CompositeScriptMode">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.CompositeScriptMode.OPERATE">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.CompositeScriptMode.DEVELOP">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.CompositeScriptMode.COMPILE">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.ScriptHandler">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ScriptHandler.MergeScripts(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ScriptHandler.BuildTopLevelClassNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ScriptHandler.GetTopScripts(Composite.Core.WebClient.CompositeScriptMode,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.ScriptHandler.GetSubScripts(Composite.Core.WebClient.CompositeScriptMode,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.OpenView">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.OpenExternalView">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.OpenGenericView">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.OpenViewDefinition">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.CloseView">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.DownloadFile">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.MessageBox">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.RefreshTree">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.LogEntry">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.Reboot">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.CollapseAndRefresh">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.CloseAllViews">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.LockSystem">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.BroadcastMessage">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.SaveStatus">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.BindEntityTokenToView">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.ExpandTreeNode">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ActionType.SelectElement">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.BindEntityTokenToViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.BindEntityTokenToViewParams.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.BindEntityTokenToViewParams.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.BroadcastMessageParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.BroadcastMessageParams.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.BroadcastMessageParams.Value">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.CloseAllViewsParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.CloseAllViewsParams.Reason">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.CloseViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.CloseViewParams.ViewId">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.Id">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.SequenceNumber">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.ActionType">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.OpenViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.OpenGenericViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.OpenExternalViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.DownloadFileParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.OpenViewDefinitionParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.CloseViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.RefreshTreeParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.MessageBoxParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.LogEntryParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.BroadcastMessageParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.CloseAllViewsParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.SaveStatusParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.BindEntityTokenToViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleAction.SelectElementParams">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleMessageServiceFacade">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleMessageServiceFacade.GetNewMessages(System.String,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleMessageServiceFacade.DocumentSuspectMessageRequests(System.String,System.Int32,Composite.Core.WebClient.Services.ConsoleMessageService.GetMessagesResult,System.Collections.Generic.List{Composite.C1Console.Events.Foundation.ConsoleMessageQueueElement})">
            <summary>
            If the client feeding from the queue goes haywire, we start to log details about it for debug purposes.
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.ConsoleMessageServiceFacade.CurrentChangeNumber">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.DialogType">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.DialogType.Message">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.DialogType.Question">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.DialogType.Warning">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.DialogType.Error">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.DownloadFileParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.DownloadFileParams.Url">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.GetMessagesResult">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.GetMessagesResult.CurrentSequenceNumber">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.GetMessagesResult.ConsoleActions">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.LogEntryParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.LogEntryParams.SenderId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.LogEntryParams.Level">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.LogEntryParams.Message">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.LogLevel">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.LogLevel.Fine">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.LogLevel.Info">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.LogLevel.Debug">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.LogLevel.Warn">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.LogLevel.Error">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.LogLevel.Fatal">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.MessageBoxParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.MessageBoxParams.Title">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.MessageBoxParams.Message">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.MessageBoxParams.DialogType">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams.Label">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams.Image">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams.Url">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenGenericViewParams.UrlPostArguments">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewDefinitionParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewDefinitionParams.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewDefinitionParams.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewDefinitionParams.Handle">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewDefinitionParams.Argument">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.FlowHandle">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.Handle">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.Url">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.Argument">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.ViewType">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.Label">
            <summary>
            Label for view
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.Image">
            <summary>
            Icon URL
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.OpenViewParams.ToolTip">
            <summary>
            Tooltip for view tab
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.RefreshTreeParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.RefreshTreeParams.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.SaveStatusParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.SaveStatusParams.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.ConsoleMessageService.SaveStatusParams.Succeeded">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType.External">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType.Main">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType.ModalDialog">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType.RightTop">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType.RightBottom">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType.BottomLeft">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Services.ConsoleMessageService.ViewType.BottomRight">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocale">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocale.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocale.IsoName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocale.UrlMappingName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocale.SerializedActionToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocale.IsCurrent">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocales">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocales.ActiveLocaleName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.ClientLocales.ForeignLocaleName">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.LocalizationServiceObjects.PageLocale">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.PageLocale.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.PageLocale.IsoName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.PageLocale.UrlMappingName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.PageLocale.Url">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.LocalizationServiceObjects.PageLocale.IsCurrent">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.SecurityServiceObjets.EntityPermissionDetails">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.SecurityServiceObjets.EntityPermissionDetails.InheritedUserPermissions">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.SecurityServiceObjets.EntityPermissionDetails.EntityUserPermissions">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.SecurityServiceObjets.UserPermissions">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.SecurityServiceObjets.UserPermissions.UserName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.SecurityServiceObjets.UserPermissions.PermissionTypes">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.ActionToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.Label">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.Disabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.Icon">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.ActionCategory">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.CheckboxStatus">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.TagValue">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.ActivePositions">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientAction.ActionKey">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.TreeServiceObjects.ClientActionCategory">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientActionCategory.GroupId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientActionCategory.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientActionCategory.IsInToolbar">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientActionCategory.IsInFolder">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientActionCategory.FolderName">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.ElementKey">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.ProviderName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.Piggybag">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.PiggybagHash">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.Label">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.HasChildren">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.IsDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.Icon">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.OpenedIcon">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.Actions">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.ActionKeys">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.PropertyBag">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.DropTypeAccept">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.DetailedDropSupported">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.DragType">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.TagValue">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.ContainsTaggedActions">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElement.TreeLockEnabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientElementChangeDescriptor.CurrentSequenceNumber">
            <summary>
            The client should use the "current sequence number" the next time it queries for changes
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Services.TreeServiceObjects.ClientLabeledProperty">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.TreeServiceObjects.ClientLabeledProperty.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.TreeServiceObjects.ClientLabeledProperty.#ctor(Composite.C1Console.Elements.LabeledProperty)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientLabeledProperty.Name">
            <summary>
            The name of the property. The name is constant across cultures and is intended as an id other systems can use.
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientLabeledProperty.Label">
            <summary>
            The label the user should see.
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.ClientLabeledProperty.Value">
            <summary>
            The value of the property
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Services.TreeServiceObjects.ExtensionMethods.ElementExtensionMethods">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.TreeServiceObjects.ExtensionMethods.ElementExtensionMethods.GetClientElement(Composite.C1Console.Elements.Element)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.TreeServiceObjects.ExtensionMethods.ElementExtensionMethods.ToClientElementList(System.Collections.Generic.List{Composite.C1Console.Elements.Element})">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.TreeServiceObjects.ExtensionMethods.ElementExtensionMethods.ToClientPropertyBag(System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenInfo">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenInfo.ElementKey">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenInfo.ClientElements">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenParams">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenParams.ProviderName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenParams.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.TreeServiceObjects.RefreshChildrenParams.Piggybag">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.WysiwygEditor.TidyHtmlResult">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.WysiwygEditor.TidyHtmlResult.Output">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Services.WysiwygEditor.TidyHtmlResult.ErrorSummary">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Services.WysiwygEditor.MarkupTransformationServices">
            <summary>
            Summary description for HtmlTidyServices
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Services.WysiwygEditor.MarkupTransformationServices.RepairXhtmlAndTransform(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@)">
            <summary>
            Repairs an html fragment (makes it Xhtml) and executes a transformation on it.
            </summary>
            <param name="html">The html to repair</param>
            <param name="xsltPath">The path to the XSLT to use for transformation</param>
            <param name="xsltParameters"></param> 
            <param name="errorSummary">out value - warnings generated while repairing the html</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.Services.WysiwygEditor.MarkupTransformationServices.RepairXmlAndTransform(System.String,System.String)">
            <summary>
            Repairs an html fragment (makes it Xhtml) and executes a transformation on it.
            </summary>
            <param name="xml">The xml to repair</param>
            <param name="xsltPath">The path to the XSLT to use for transformation</param>        
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.Services.WysiwygEditor.MarkupTransformationServices.TidyHtml(System.String)">
            <summary>
            Cleans HTML documents or fragments into XHTML conformant markup
            </summary>
            <param name="htmlMarkup">The html to clean</param>
            <returns>A fully structured XHTML document, incl. html, head and body elements.</returns>
        </member>
        <member name="M:Composite.Core.WebClient.Services.WysiwygEditor.MarkupTransformationServices.TidyXml(System.String)">
            <summary>
            Cleans HTML documents or fragments into XHTML conformant markup
            </summary>
            <param name="xmlMarkup">The html to clean</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.Services.WysiwygEditor.MarkupTransformationServices.OutputBodyDescendants(System.Xml.Linq.XDocument)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Setup.SetupServiceFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Setup.SetupServiceFacade.XmlNamespace">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Setup.SetupServiceFacade.PackageElementName">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Setup.SetupServiceFacade.UrlAttributeName">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Setup.SetupServiceFacade.IdAttributeName">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Setup.SetupServiceFacade.KeyAttributeName">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Setup.SetupServiceFacade.PackageServicePingUrlFormat">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Setup.SetupServiceFacade.SetUp(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Setup.SetupServiceFacade.PingServer">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Setup.SetupServiceFacade.GetSetupDescription">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Setup.SetupServiceFacade.GetLanguages">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Setup.SetupServiceFacade.GetLanguagePackages">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Setup.SetupServiceFacade.GetGetLicense">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Setup.SetupServiceFacade.PackageServerUrl">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.State.ISessionStateProvider">
            <summary>
            Defines access to a session state
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.State.ISessionStateProvider.AddState``1(System.Guid,``0,System.DateTime)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.State.ISessionStateProvider.TryGetState``1(System.Guid,``0@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.State.ISessionStateProvider.SetState``1(System.Guid,``0,System.DateTime)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.State.ISessionStateProvider.RemoveState(System.Guid)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.ISessionStateEntry">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.ISessionStateEntry.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.ISessionStateEntry.ExpirationDate">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.ISessionStateEntry.SerializedValue">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.XmlSerializationWrapper">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.XmlSerializationWrapper.TypeName">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.XmlSerializationWrapper.AssebmlyName">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.XmlSerializationWrapper.Value">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.XmlSerializationWrapper.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.WebClient.SessionStateProviders.DefaultSessionStateProvider.XmlSerializationWrapper.Deserialize">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.State.SessionStateManager">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.State.SessionStateManager.DefaultProviderName">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.State.SessionStateManager.GetProvider(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.State.SessionStateManager.DefaultProvider">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.StyleCompiler">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.StyleCompiler.Compile(System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.CheckBox">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.CheckBox.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.CheckBox.ItemLabel">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.ClickButton">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.ClickButton.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.ClickButton.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ClickButton.CustomClientId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ClickButton.AutoPostBack">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ClickButton.ImageUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ClickButton.ImageUrlWhenDisabled">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.ComboBox">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.ComboBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.ComboBox.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.ComboBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ComboBox.SelectionRequired">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ComboBox.SelectionRequiredLabel">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ComboBox.TagKey">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ComboBox.TagName">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ComboBox.SelectedValue">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.DataInputType">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.DataInputType.Default">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.DataInputType.Integer">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.DataInputType.Decimal">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.DataInputType.Password">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.DataInputType.ProgrammingIdentifier">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.DataInputType.ProgrammingNamespace">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.DataInputType.ReadOnly">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.DataInput">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.TextBox">
            <summary>
            Fixes a basic 'System.Web.UI.WebControls.TextBox' control, so it renders correctly in 'MultiLine' mode
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.TextBox.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.DataInput.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.DataInput.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.DataInput.InputType">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.DataInput.MinLength">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.DataInput.TagKey">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.DataInput.TagName">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.Feedback">
            <summary>
            Creates a few tags that are responsible for communiation with C1 backend UI's javascript.
            </summary>
            <example>
            <code>
              &lt;aspui:Feedback runat="server"  OnCommand="MethodToBeExecutedOnCommand" ResponseStatus="ResponseStatus" /&gt;
            </code>  
            
              is an equivalent to the following markup:
            <code>    
             &lt;ui:feedbackset id="feedback"&gt;
               &lt;!-- request --&gt;
               &lt;aspui:Generic runat="server"
                   ID="btnRequest"
                   OnCommand="MethodToBeExecutedOnCommand"
                   TagName="ui:request"
                   clientid="request"
                   callbackid="request"
                   value=""/&gt;
            	
               &lt;!-- response --&gt;
               &lt;aspui:Generic runat="server"
                   ID="tagResponse"
                   TagName="ui:response"
                   clientid="response"
                   status="ResponseStatus"/&gt;
            
             &lt;/ui:feedbackset&gt;
            </code> 
            </example>
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.Generic">
            <summary>
            To be used for creating stateless tags. Copies all the attributes from markup to the generated tag,
            the "clientid" attribute will be transformed to "id" attribute.
            </summary>
            <exclude />    
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Generic.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Generic.OnLoad(System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Generic.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Generic.IsPosted">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.Generic.PostBackEventHandler">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Generic.PostBackEventHandler.#ctor(Composite.Core.WebClient.UiControlLib.Generic)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Generic.PostBackEventHandler.RaisePostBackEvent(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Feedback.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Feedback.SetStatus(Composite.Core.WebClient.UiControlLib.Feedback.Status)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Feedback.SetStatus(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Feedback.GetPostedMessage">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Feedback.OnPreRender(System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Feedback.MarkAsDirty">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Feedback.OnCommand">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Feedback.ResponseStatus">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Feedback.IsPosted">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.Feedback.Status">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.Feedback.Status.Empty">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.Feedback.Status.Success">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.Feedback.Status.Failure">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.Feedback.Status.Ping">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.FieldMessage">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.FieldMessage.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.FieldMessage.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.FieldMessage.TargetName">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.HtmlEncodedPlaceHolder">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.HtmlEncodedPlaceHolder.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.PostBackDialog">
            <summary>
            Generates a tag like
            &lt;ui:postbackdialog id="uniqueID" callbackid="uniqueCallbackID" label="Hello" tooltip="Hello Master!" handle="Composite.Management.PageSelectorDialog" value="DEFAULT VALUE!" /&gt;
            and persists "value" attribute.
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.PostBackDialog.DefaultSelectorTagName">
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.UiControlLib.PostBackDialog.NullableSelectorTagName">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.PostBackDialog.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.PostBackDialog.OnInit(System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.PostBackDialog.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.PostBackDialog.Nullable">
            <summary>
            Setting to true leads to inserting "ui:nullpostbackdatadialog" tag 
            </summary>
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.PostBackDialog.Value">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.PostBackDialog.DefaultValue">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.PostBackDialog.EncodeValue">
            <summary>
            When <value>true</value>, the values are encoded in a way it is safe to use them in url's query string
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.Selector">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Selector.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Selector.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Selector.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Selector.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.Selector.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Selector.SelectionRequired">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Selector.SelectionRequiredLabel">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Selector.SimpleSelectorMode">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Selector.TagKey">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.Selector.TagName">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.TextArea">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.TextArea.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.TextArea.OnInit(System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.TextArea.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.TextArea.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.TextArea.Text">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.ToolbarButton">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.ToolbarButton.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ToolbarButton.CustomClientId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ToolbarButton.ImageUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ToolbarButton.ImageUrlWhenDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.ToolbarButton.ObservesClientBroadcaster">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UiControlLib.TreeNode">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.TreeNode.Focus">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UiControlLib.TreeNode.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.TreeNode.ImageUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UiControlLib.TreeNode.Focused">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UrlString">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlString.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlString.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlString.AddQueryParameters(System.Collections.Specialized.NameValueCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlString.GetQueryParameters">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlString.Item(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlString.PathInfo">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlString.FilePath">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlString.ServerUrl">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlString.QueryString">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.XhtmlPage">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.XhtmlPage.Render(System.Web.UI.HtmlTextWriter)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.XsltServices">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.XsltServices.GetCompiledXsltTransform(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.XsltServices.XslTransform(System.Xml.Linq.XDocument,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.ConditionProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.TrueTargetStateNameProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.FalseTargetStateNameProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.Condition">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.TrueTargetStateName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ConditionalSetStateActivity.FalseTargetStateName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity.ContainerLabelProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity.FormDefinitionFileNameProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity.ContainerLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.EmptyDocumentFormActivity.FormDefinitionFileName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity.ContainerLabelProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity.FormDefinitionFileNameProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity.ContainerLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.WarningDialogFormActivity.FormDefinitionFileName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.RerenderViewActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.RerenderViewActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.RerenderViewActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.RerenderViewActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.CustomEvent01HandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent01HandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent01HandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent01HandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent01HandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.CustomEvent02HandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent02HandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent02HandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent02HandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent02HandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.CustomEvent03HandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent03HandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent03HandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent03HandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent03HandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.CustomEvent04HandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent04HandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent04HandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent04HandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent04HandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.CustomEvent05HandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent05HandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CustomEvent05HandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent05HandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CustomEvent05HandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.IEventHandleFilter">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.IEventHandleFilter.Filter(System.Collections.Generic.Dictionary{Composite.C1Console.Forms.Flows.IFormEventIdentifier,Composite.C1Console.Forms.Flows.FormFlowEventHandler})">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.WorkflowTaskManagerEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowTaskManagerEvent.#ctor(Composite.C1Console.Actions.FlowToken,System.Guid)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowTaskManagerEvent.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowTaskManagerEvent.WorkflowInstanceId">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.WorkflowCreationTaskManagerEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowCreationTaskManagerEvent.#ctor(System.Guid)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowCreationTaskManagerEvent.ParentWorkflowInstanceId">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.SaveWorklowTaskManagerEvent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.SaveWorklowTaskManagerEvent.#ctor(Composite.C1Console.Actions.FlowToken,System.Guid,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.SaveWorklowTaskManagerEvent.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.SaveWorklowTaskManagerEvent.Succeeded">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.LimitedDepthXmlWriter">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.#ctor(System.Xml.XmlWriter)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.#ctor(System.Xml.XmlWriter,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.Close">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.Flush">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.LookupPrefix(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteCData(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteCharEntity(System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteComment(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteEndAttribute">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteEndDocument">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteEndElement">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteEntityRef(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteFullEndElement">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteProcessingInstruction(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteRaw(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteStartDocument(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteStartDocument">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteStartElement(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteString(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.LimitedDepthXmlWriter.WriteWhitespace(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.LimitedDepthXmlWriter.WriteState">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XAttributeUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XAttributeUtils.GetValueOrDefault(System.Xml.Linq.XAttribute,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XAttributeUtils.TryGetIntValue(System.Xml.Linq.XAttribute,System.Int32@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XAttributeUtils.TryGetBoolValue(System.Xml.Linq.XAttribute,System.Boolean@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XAttributeUtils.TryGetGuidValue(System.Xml.Linq.XAttribute,System.Guid@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.Zip.ZipFileSystem.GetFileStream(System.String)">
            <summary>
            
            </summary>
            <param name="filename">
            Format: 
                ~\Filename.txt
                ~\Directory1\Directory2\Filename.txt
                ~/Filename.txt
                ~/Directory1/Directory2/Filename.txt
            </param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.Zip.ZipFileSystem.WriteFileToDisk(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filename">
            Format: 
                ~\Filename.txt
                ~\Directory1\Directory2\Filename.txt
                ~/Filename.txt
                ~/Directory1/Directory2/Filename.txt
            </param>
            <param name="targetFilename">
            </param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.DataTypePackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataTypePackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataTypePackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.DataTypePackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataTypePackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataTypePackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.DataPackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataPackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataPackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.DataPackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataPackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DataPackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.DynamicDataTypePackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DynamicDataTypePackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DynamicDataTypePackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.DynamicDataTypePackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DynamicDataTypePackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.DynamicDataTypePackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.FilePackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.VirtualElementProviderNodePackageFragmentInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.VirtualElementProviderNodePackageFragmentInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.VirtualElementProviderNodePackageFragmentInstaller.Install">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentInstallers.VirtualElementProviderNodePackageFragmentUninstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.VirtualElementProviderNodePackageFragmentUninstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentInstallers.VirtualElementProviderNodePackageFragmentUninstaller.Uninstall">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentValidationResult">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentValidationResult.#ctor(Composite.Core.PackageSystem.PackageFragmentValidationResultType,System.Exception)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentValidationResult.#ctor(Composite.Core.PackageSystem.PackageFragmentValidationResultType,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageFragmentValidationResult.#ctor(Composite.Core.PackageSystem.PackageFragmentValidationResultType,System.String,System.Xml.Linq.XObject)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentValidationResult.ValidationResult">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentValidationResult.Message">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentValidationResult.Exception">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentValidationResult.XPath">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageFragmentValidationResult.InnerResult">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageFragmentValidationResultType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.PackageSystem.PackageFragmentValidationResultType.Fatal">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageInstaller">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstaller.#ctor(Composite.Core.PackageSystem.IPackageInstallerUninstallerFactory,System.String,System.String,System.String,Composite.Core.PackageSystem.PackageInformation)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstaller.Validate">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstaller.Install(Composite.Core.PackageSystem.Foundation.SystemLockingType)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInstaller.CanBeUninstalled">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInstaller.FlushOnCompletion">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInstaller.ReloadConsoleOnCompletion">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageInstallerContext">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstallerContext.AddPendingDataTypeDescritpor(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            Use this method to register data type descriptors that have been validated and will be 
            intstalled.
            </summary>
            <param name="interfaceName"></param>
            <param name="dataTypeDescriptor"></param>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstallerContext.GetPendingDataTypeDescriptor(System.String)">
            <summary>
            This method returns data type descriptors for dynamic types this is pending 
            installation (Has passed validaion).
            </summary>
            <param name="interfaceName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstallerContext.AddPendingDataType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstallerContext.IsDataTypePending(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstallerContext.AddPendingLocale(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageInstallerContext.IsLocalePending(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInstallerContext.ZipFileSystem">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInstallerContext.TempDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageInstallerContext.PackageInformation">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManager.GetInstalledPackages">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManager.IsInstalled(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManager.GetCurrentVersion(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManager.Install(System.IO.Stream,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManager.Install(System.IO.Stream,System.Boolean,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageManager.Uninstall(System.Guid)">
            <exclude />
        </member>
        <member name="T:Composite.Core.PackageSystem.PackageUninstallerContext">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageUninstallerContext.AddPendingForDeletionData(System.Type,Composite.Data.DataScopeIdentifier,System.Globalization.CultureInfo,Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageUninstallerContext.IsPendingForDeletionData(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Core.PackageSystem.PackageUninstallerContext.IsPendingForDeletionData(System.Type,Composite.Data.DataScopeIdentifier,System.Globalization.CultureInfo,Composite.Data.DataKeyPropertyCollection)">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageUninstallerContext.ZipFileSystem">
            <exclude />
        </member>
        <member name="P:Composite.Core.PackageSystem.PackageUninstallerContext.PackageInformation">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Data.DataXhtmlRenderingServices">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Data.DataXhtmlRenderingServices.CanRender(System.Type,Composite.Core.WebClient.Renderings.Data.XhtmlRenderingType)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Data.DataXhtmlRenderingServices.Render(Composite.Data.IDataReference,Composite.Core.WebClient.Renderings.Data.XhtmlRenderingType)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Data.XhtmlRenderingType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Renderings.Data.XhtmlRenderingType.Embedable">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.HashSigner">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashSigner.GetSignedHash(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashSigner.ValidateSignedHash(System.String,Composite.C1Console.Security.HashValue)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.HashValue">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashValue.#ctor(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashValue.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashValue.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashValue.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashValue.Equals(Composite.C1Console.Security.HashValue)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashValue.ToString">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HashValue.GetHashCode">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.HookingFacadeEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacadeEventArgs.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.HookingFacadeEventArgs.ProviderName">
            <exclude />
        </member>
        <member name="T:Composite.Core.Caching.RequestLifetimeCache">
            <summary>
            Cache for storing objects with a longevity limited to a single request. 
            Objects cached here are subject to garbage collection at some point after the request has completed.
            Uses HttpContext.Items when available, otherwise <see cref="T:System.Runtime.Remoting.Messaging.CallContext"/>.
            </summary>
        </member>
        <member name="M:Composite.Core.Caching.RequestLifetimeCache.Add(System.Object,System.Object)">
            <summary>
            Add an item to the cache.
            </summary>
            <param name="key">Key for item. Used when retrieving/clearing item later.</param>
            <param name="value">The item to store.</param>
        </member>
        <member name="M:Composite.Core.Caching.RequestLifetimeCache.HasKey(System.Object)">
            <summary>
            Checks if the cache has the provided key.
            </summary>
            <param name="key">Key for item</param>
            <returns>True when item exist in cache. Otherwise false.</returns>
        </member>
        <member name="M:Composite.Core.Caching.RequestLifetimeCache.TryGet(System.Object)">
            <summary>
            Returns cached item based on the provided key or null if item is not known.
            </summary>
            <param name="key">Key for item</param>
            <returns>Cached item or null if not found.</returns>
        </member>
        <member name="M:Composite.Core.Caching.RequestLifetimeCache.TryGet``1(System.Object)">
            <summary>
            Returns cached item based on the provided key or null if item is not known.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">Key for item</param>
            <returns>Cached item or null if not found.</returns>
        </member>
        <member name="M:Composite.Core.Caching.RequestLifetimeCache.GetCachedOrNew``1(System.Object)">
            <summary>
            Returns cached item based on the provided key or a new instance which gets added to the cache using the key. 
            The returned item is guaranteed to exist in the cache.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">Key for item</param>
            <returns>Cached item or a new instance if not found.</returns>
        </member>
        <member name="M:Composite.Core.Caching.RequestLifetimeCache.Remove(System.Object)">
            <summary>
            Remove a named item from the cache.
            </summary>
            <param name="key">Key for item to remove</param>
        </member>
        <member name="M:Composite.Core.Caching.RequestLifetimeCache.ClearAll">
            <exclude />
        </member>
        <member name="T:Composite.Core.Collections.Generic.DictionaryExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.DictionaryExtensionMethods.AddDictionary``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.DictionaryExtensionMethods.EnsureValue``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``1})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.DictionaryExtensionMethods.EnsureValue``2(Composite.Core.Collections.Generic.Hashtable{``0,``1},``0,System.Func{``1})">
            <exclude />
        </member>
        <member name="T:Composite.Core.Collections.Generic.ResourceLocker`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ResourceLocker`1.#ctor(`0,Composite.Core.Collections.Generic.ResourceLocker{`0}.InitializerDelegate,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ResourceLocker`1.#ctor(`0,Composite.Core.Collections.Generic.ResourceLocker{`0}.InitializerDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ResourceLocker`1.Initialize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ResourceLocker`1.ResetInitialization">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.ResourceLocker`1.Resources">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.ResourceLocker`1.IsInitialized">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.ResourceLocker`1.Locker">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.ResourceLocker`1.ReadLocker">
            <exclude />
        </member>
        <member name="T:Composite.Core.Collections.Generic.ResourceLocker`1.InitializerDelegate">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.ConsoleClosedEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleClosedEventArgs.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.ConsoleClosedEventArgs.ConsoleId">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.ConsoleFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleFacade.Initialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleFacade.SubscribeToConsoleClosedEvent(Composite.C1Console.Events.ConsoleFacade.ConsoleClosedEventDelegate)">
            <summary>
            Flush code MAY NOT do ANY kind of re-initialization. 
            </summary>
            <param name="eventDelegate"></param>
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleFacade.UnsubscribeFromConsoleClosedEvent(Composite.C1Console.Events.ConsoleFacade.ConsoleClosedEventDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleFacade.CloseConsole(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleFacade.GetConsoleIdsByUsername(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleFacade.Scavenge">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.ConsoleFacade.ConsoleClosedEventDelegate">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.RebootConsoleMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.IDataWrapper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataWrapper.CommitData">
            <exclude />
        </member>
        <member name="P:Composite.Data.IDataWrapper.WrappedData">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.Foundation.DynamicTypesAlternateFormFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.Foundation.DynamicTypesAlternateFormFacade.GetAlternateFormMarkup(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.Foundation.DynamicTypesAlternateFormFacade.SetAlternateForm(Composite.Data.DynamicTypes.DataTypeDescriptor,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Data.FieldPositionAttribute">
            <summary>
            Specify the posution of a field as they should be listed by default
            </summary>
            <example> This sample shows how to use the FieldPosition attribute. 
            <code>
            // data interface attributes ...
            interface IMyDataType : IData
            {
                [StoreFieldType(PhysicalStoreFieldType.String, 64)]
                [ImmutableFieldId("{D75EA67F-AD14-4BAB-8547-6D87002709F3}")]
                [FieldPosition(1)]
                string Title { get; set; }
                
                // more data properties ...
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.FieldPositionAttribute.#ctor(System.Int32)">
            <exclude />
        </member>
        <member name="P:Composite.Data.FieldPositionAttribute.Position">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataProviderCopier">
            <summary>
            Class used for copying data from one data provider to another
            </summary>
        </member>
        <member name="M:Composite.Data.DataProviderCopier.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Data.DataProviderCopier"/> class.
            </summary>
            <param name="sourceProviderName">Name of the source data provider.</param>
            <param name="targetProviderName">Name of the target data provider.</param>
        </member>
        <member name="M:Composite.Data.DataProviderCopier.FullCopy">
            <summary>
            Copies all the data from the source data provider to the target data provider.
            </summary>
        </member>
        <member name="P:Composite.Data.DataProviderCopier.SourceProviderName">
            <summary>
            Gets the name of the source data provider.
            </summary>
            <value>
            The name of the source data provider.
            </value>
        </member>
        <member name="P:Composite.Data.DataProviderCopier.TargetProviderName">
            <summary>
            Gets the name of the target data provider.
            </summary>
            <value>
            The name of the target data provider.
            </value>
        </member>
        <member name="P:Composite.Data.DataProviderCopier.UseTransaction">
            <summary>
            Gets or sets a value indicating whether transaction should be used.
            Disabling transaction may help to ignore transaction timeout limitation which is limited to 20 minutes in machine.config
            </summary>
            <value>
              <c>true</c> if transaction should be used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Composite.Data.DataProviderCopier.IgnorePrimaryKeyViolation">
            <summary>
            If set to <c>true</c>, records with already used primary keys will be skipped and the copying process will continue.
            </summary>
            <value>
            	<c>true</c> if [ignore primary key violation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Composite.Data.GeneratedTypes.GeneratedTypesHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.#ctor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.#ctor(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.ValidateNewTypeName(System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.ValidateNewTypeNamespace(System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.ValidateNewTypeFullName(System.String,System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.ValidateByCompile(System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.ValidateNewFieldDescriptors(System.Collections.Generic.IEnumerable{Composite.Data.DynamicTypes.DataFieldDescriptor},System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.GetCompositionDescriptionPropertyName(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.GetCompositionDescriptionPropertyInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.GetPageReferencePropertyInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetNewTypeFullName(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetNewTypeTitle(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetCachable(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetPublishControlled(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetLocalizedControlled(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetNewFieldDescriptors(System.Collections.Generic.IEnumerable{Composite.Data.DynamicTypes.DataFieldDescriptor},System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetForeignKeyReference(System.Type,Composite.Data.DataAssociationType)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetForeignKeyReference(Composite.Data.DynamicTypes.DataTypeDescriptor,Composite.Data.DataAssociationType)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.TryValidateUpdate(System.Boolean,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.CreateType(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesHelper.SetNewIdFieldValue(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.AllowForiegnKeyEditing">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.EditableDataFieldDescriptors">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.EditableOwnDataFields">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.NotEditableDataFieldDescriptorNames">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.IsCachable">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.IsPublishControlled">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.IsLocalizedControlled">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.IsEditProcessControlledAllowed">
            <exclude />
        </member>
        <member name="P:Composite.Data.GeneratedTypes.GeneratedTypesHelper.InterfaceType">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.IPublishControlledAuxiliary.OnAfterDataUpdated(Composite.Data.IData)">
            <summary>
            This method will be called after the IPublishProcessController.OnAfterDataUpdated has been called
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Composite.Data.ProcessControlled.IPublishControlledAuxiliary.OnAfterBuildNew(Composite.Data.IData)">
            <summary>
            This method will be called after the IPublishProcessController.OnAfterBuildNew has been called
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Composite.Data.ProcessControlled.IPublishProcessController.OnAfterDataUpdated(Composite.Data.IData)">
            <summary>
            Returns true if auxilaries should be called, false if they should not be called
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.ProcessControlled.IPublishProcessController.OnAfterBuildNew(Composite.Data.IData)">
            <summary>
            Returns true if auxilaries should be called, false if they should not be called
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.ProcessControllerTypeAttribute">
            <summary> 
            Binds imlementations of <see cref="T:Composite.Data.ProcessControlled.IProcessController"/> to data types
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.Data.ProcessControllerTypeAttribute.#ctor(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControllerTypeAttribute.ProcessControllerType">
            <exclude />
        </member>
        <member name="T:Composite.Data.PublishProcessControllerTypeAttribute">
            <summary>
            Add this attribute to your data interface to specify what controller to use for publishing.
            Your data type is expected to implement <see cref="T:Composite.Data.ProcessControlled.IPublishControlled"/> when this attribute is used.
            The type you specify is expected to implement <see cref="T:Composite.Data.ProcessControlled.IPublishProcessController"/>.
            For default publishing behaviour use the type <see cref="T:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController"/>
            </summary>
            <example> This sample shows how to use the PublishProcessControllerType attribute.
            <code>
            [PublishProcessControllerType(typeof(GenericPublishProcessController))]
            // (other IData attributes)
            interface IMyDataType : IData, IPublishControlled
            {
                // data type properties
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.PublishProcessControllerTypeAttribute.#ctor(System.Type)">
            <summary>
            Specify what controller to use for publishing.
            For default publishing behaviour use the type <see cref="T:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController"/>
            </summary>
            <param name="processControllerType">Controller to use in publishing flow</param>
        </member>
        <member name="T:Composite.Data.LocalizeProcessControllerTypeAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.LocalizeProcessControllerTypeAttribute.#ctor(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.TitleAttribute">
            <summary>
            Add this attribute to your data interface to give it a human readable title to be used in the C1 Console
            </summary>
            <example> This sample shows how to use the Title attribute.
            <code>
            [Title("My Data Type")]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                // data type properties
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.TitleAttribute.#ctor(System.String)">
            <summary>
            Set the title
            </summary>
            <param name="title">The (human readable) title to give the data type</param>
        </member>
        <member name="P:Composite.Data.TitleAttribute.Title">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.#ctor(System.Type,System.String,Composite.Data.DataAssociationType)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.ToXml">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.FromXml(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.Equals(Composite.Data.DynamicTypes.DataTypeAssociationDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.AssociatedInterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.ForeignKeyPropertyName">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeAssociationDescriptor.AssociationType">
            <exclude />
        </member>
        <member name="T:Composite.Data.PageMetaDataDescription">
            <summary>
            This class is used when adding a new page metadata type to a given page. In other words, in workflow only.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.OneToOne">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.Branch">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.Branch(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.Branch(System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.Equals(Composite.Data.PageMetaDataDescription)">
            <exclude />
        </member>
        <member name="M:Composite.Data.PageMetaDataDescription.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Data.PageMetaDataDescription.PageMetaDataDescriptionType">
            <exclude />
        </member>
        <member name="P:Composite.Data.PageMetaDataDescription.StartLevel">
            <exclude />
        </member>
        <member name="P:Composite.Data.PageMetaDataDescription.Levels">
            <exclude />
        </member>
        <member name="T:Composite.Data.PageMetaDataDescriptionType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.PageMetaDataDescriptionType.OneToOne">
            <exclude />
        </member>
        <member name="F:Composite.Data.PageMetaDataDescriptionType.Branch">
            <exclude />
        </member>
        <member name="F:Composite.Data.PageMetaDataDescriptionType.PageType">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IDynamicTypeFormDefinitionFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.ILockingInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ILockingInformation.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ILockingInformation.SerializedEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ILockingInformation.SerializedOwnerId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ILockingInformation.Username">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageHostNameBinding">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageHostNameBinding.PageId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageHostNameBinding.HostName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPagePlaceholderContent">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePlaceholderContent.PageId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePlaceholderContent.PlaceHolderId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePlaceholderContent.Content">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageUnpublishSchedule">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageUnpublishSchedule.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageUnpublishSchedule.PageId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageUnpublishSchedule.WorkflowInstanceId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageUnpublishSchedule.UnpublishDate">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPageUnpublishSchedule.LocaleCultureName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserActivePerspective">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserActivePerspective.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserActivePerspective.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserActivePerspective.SerializedEntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserDeveloperSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserDeveloperSettings.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserDeveloperSettings.LastSpecifiedNamespace">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserPermissionDefinitionPermissionType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserPermissionDefinitionPermissionType.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserPermissionDefinitionPermissionType.UserPermissionDefinitionId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserPermissionDefinitionPermissionType.PermissionTypeName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserSettings.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserSettings.CultureName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserSettings.C1ConsoleUiLanguage">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserSettings.CurrentActiveLocaleCultureName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserSettings.ForeignLocaleCultureName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPagePublishSchedule">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePublishSchedule.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePublishSchedule.PageId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePublishSchedule.WorkflowInstanceId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePublishSchedule.PublishDate">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPagePublishSchedule.LocaleCultureName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUserPermissionDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserPermissionDefinition.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserPermissionDefinition.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUserPermissionDefinition.SerializedEntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Data.NotReferenceableAttribute">
            <summary>
            Add this attribute to your data interface to prevent it from being referenced by other data types
            </summary>
            <example> This sample shows how to use the NotReferenceable attribute.
            <code>
            [NotReferenceable()]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                // data type properties
            }
            </code>
            </example>    
        </member>
        <member name="T:Composite.Data.Types.IMediaFileExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IMediaFileExtensions.GetKeyPath(Composite.Data.Types.IMediaFile)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IMediaFileExtensions.GetCompositePath(Composite.Data.Types.IMediaFile)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IMediaFileExtensions.GetCompositePath(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.ICompositionContainer">
            <summary>    
            Allows assigning meta data fields to different tabs in UI. 
            There's always one default instance with label "Metadata".
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ICompositionContainer.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ICompositionContainer.Label">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IUser">
            <summary>    
            This data interface represents a administrative user in Composite C1. This can be used to query users through a <see cref="T:Composite.Data.DataConnection"/>. 
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IUser.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUser.Username">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUser.EncryptedPassword">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUser.Email">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IUser.Group">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPageTemplateFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.Foundation.RenderingFunctionNames">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.Foundation.RenderingFunctionNames.Name">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.Foundation.RenderingFunctionNames.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.Foundation.RenderingFunctionNames.CompositName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.VisualFunctionElementProviderHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.VisualFunctionElementProviderHelper.GetRenderingFunctions(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.VisualFunctionElementProviderHelper.GetVisualFunction(Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.Foundation.RenderingFunctionNames)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.VisualFunctionElementProviderHelper.VisualFunctionElementProviderHelper.AttachElementActions(System.Collections.Generic.IEnumerable{Composite.C1Console.Elements.Element})">
            <exclude />
        </member>
        <member name="T:Composite.Core.Logging.DebugLoggingScope">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.DebugLoggingScope.CompletionTime(System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.DebugLoggingScope.CompletionTime(System.Type,System.String,System.TimeSpan)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.DebugLoggingScope.Dispose">
            <exclude />
        </member>
        <member name="P:Composite.Core.Logging.DebugLoggingScope.MethodInfoScope">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.RenderingElementNames">
            <summary>
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingElementNames.PlaceHolder">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingElementNames.PlaceHolderIdAttribute">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingElementNames.PlaceHolderTitleAttribute">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingElementNames.PlaceHolderDefaultAttribute">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingElementNames.PageTitle">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingElementNames.PageAbstract">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.RenderingElementNames.PageMetaTagDescription">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Template.TemplateInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Template.TemplateInfo.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Template.TemplateInfo.GetRenderingPlaceHolders(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Template.TemplateInfo.GetTemplateDocument(System.Guid)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Template.TemplateInfo.PageTemplateFileWrapper">
            <summary>
            In order to avoid memory leaks we have a separate object that represents loaded file content.
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Template.TemplatePlaceholdersInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Template.TemplatePlaceholdersInfo.Placeholders">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Template.TemplatePlaceholdersInfo.DefaultPlaceholderId">
            <exclude />
        </member>
        <member name="T:Composite.RuntimeInformation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.RuntimeInformation.IsDebugBuild">
            <exclude />
        </member>
        <member name="P:Composite.RuntimeInformation.AppDomainLockingDisabled">
            <exclude />
        </member>
        <member name="P:Composite.RuntimeInformation.IsUnittest">
            <exclude />
        </member>
        <member name="P:Composite.RuntimeInformation.ProductVersion">
            <exclude />
        </member>
        <member name="P:Composite.RuntimeInformation.ProductTitle">
            <exclude />
        </member>
        <member name="P:Composite.RuntimeInformation.UniqueInstanceName">
            <exclude />
        </member>
        <member name="P:Composite.RuntimeInformation.UniqueInstanceNameSafe">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.AdministratorAutoCreator">
            <summary>
            Can create "the first user" on a newly installed system. This class only works if
             - no other users has been created before
             - the global configuration contains a "auto create administrator" user name
             - the provided user name matches the user name from the global configuration
             - the provided password validates as a non-weak password
             - the used login provider supports adding users
             - the used permission provider supports adding permission types
            </summary>
        </member>
        <member name="M:Composite.C1Console.Security.AdministratorAutoCreator.AutoCreatedAdministrator(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Used for "first time" login on systems configured for this. A way to create the first user. This only works on systems
            with no users and with a valid "auto create admin username" specified by the global settings.
            </summary>
            <param name="userName">The user name - must match GlobalSettingsProvider.AutoCreatedAdministratorUserName</param>
            <param name="password">A password that meets a minimum requirement.</param>
            <param name="email">THe users email.</param>
            <param name="validateAutoCreateUserName">When true only the username specified in Composite.config as auto createable (usually 'admin') is allowed. Set to false to use a different user name.</param>
            <returns>true if the user was auto created. Otherwise false.</returns>
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginSessionStore.ILoginSessionStore">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginSessionStore.ILoginSessionStore.StoreUsername(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginSessionStore.ILoginSessionStore.FlushUsername">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.Plugins.LoginSessionStore.ILoginSessionStore.CanPersistAcrossSessions">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.Plugins.LoginSessionStore.ILoginSessionStore.StoredUsername">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.Plugins.LoginSessionStore.ILoginSessionStore.UserIpAddress">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.ConstructorBasedUserPermissionDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.UserPermissionDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserPermissionDefinition.Username">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserPermissionDefinition.PermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserPermissionDefinition.SerializedEntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserPermissionDefinition.EntityToken">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ConstructorBasedUserPermissionDefinition.#ctor(System.String,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.PermissionType},System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ConstructorBasedUserPermissionDefinition.Username">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ConstructorBasedUserPermissionDefinition.PermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.ConstructorBasedUserPermissionDefinition.SerializedEntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.IgnoreEntityTokenLocking">
            <summary>
            If this attribute is specified on an ActionToken, then the action will ignore EntityToken locking
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.PermissionDescriptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionDescriptor.#ctor(Composite.C1Console.Security.PermissionType)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.PermissionDescriptor.PermissionType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.PermissionDescriptor.Label">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.PermissionType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.Read">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.Edit">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.Add">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.Delete">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.Approve">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.Publish">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.Administrate">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.PermissionType.ClearPermissions">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.UserPerspectiveFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserPerspectiveFacade.GetSerializedEntityTokens(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserPerspectiveFacade.GetEntityTokens(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserPerspectiveFacade.SetEntityTokens(System.String,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserPerspectiveFacade.SetSerializedEntityTokens(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserPerspectiveFacade.DeleteAll(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.PermissionTypeFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetLocallyDefinedUserPermissionTypes(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetLocallyDefinedUserGroupPermissionTypes(System.Guid,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetLocallyDefinedUserGroupPermissionTypes(System.String,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetCurrentPermissionTypes(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserPermissionDefinition},System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserGroupPermissionDefinition})">
            <summary>
            This returns a merged result of user permissions and user group permissions
            </summary>
            <param name="userToken"></param>
            <param name="entityToken"></param>
            <param name="userPermissionDefinitions"></param>
            <param name="userGroupPermissionDefinitions"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetInheritedPermissionsTypes(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.EntityToken)">
            <summary>
            This returns a merged result of user permissions and user group permissions
            </summary>
            <param name="userToken"></param>
            <param name="entityToken"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetInheritedPermissionsTypes(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.EntityToken,System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.PermissionType}})">
            <summary>
            This returns a merged result of user permissions and user group permissions
            </summary>
            <param name="userToken"></param>
            <param name="entityToken"></param>
            <param name="presetUserGroupPermissions">
            This is used for simulating that local defined user group permissions has been set
            </param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.IsSubBrachContainingPermissionTypes(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserPermissionDefinition},System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserGroupPermissionDefinition})">
            <summary>
            This uses a merged result of user permissions and user group permissions
            </summary>
            <param name="userToken"></param>
            <param name="entityToken"></param>
            <param name="userPermissionDefinitions"></param>
            <param name="userGroupPermissionDefinitions"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetInheritedGroupPermissionsTypes(System.Guid,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetUserPermissionDefinitions(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetUserGroupPermissionDefinitions(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.GetUserGroupPermissionDefinitions(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.SetUserPermissionDefinition(Composite.C1Console.Security.UserPermissionDefinition)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.RemoveUserPermissionDefinition(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.SetUserGroupPermissionDefinition(Composite.C1Console.Security.UserGroupPermissionDefinition)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.PermissionTypeFacade.RemoveUserPermissionDefinition(System.Guid,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.PermissionTypeFacade.CanAlterDefinitions">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.PermissionTypeFacade.AllPermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.PermissionTypeFacade.GrantingPermissionTypes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.PermissionTypeFacade.AllPermissionDescriptors">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.PermissionTypeFacade.GrantingPermissionDescriptors">
            <exclude />
        </member>
        <member name="T:Composite.Functions.BaseFunctionRuntimeTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.SetParameter(Composite.Functions.BaseParameterRuntimeTreeNode)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.RemoveParameter(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.GetSetParameters">
            <summary>
            Returns information about parameters that have been set.
            </summary>
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.GetCompositeName">
            <summary>
            Returns the composite name of the hosted function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.GetName">
            <summary>
            Returns the name (without namespace) of the hosted function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.GetNamespace">
            <summary>
            Returns the namespace of the hosted function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.GetDescription">
            <summary>
            Returns the description of the hosted function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Functions.BaseFunctionRuntimeTreeNode.ValidateNotSelfCalling">
            <exclude />
        </member>
        <member name="P:Composite.Functions.BaseFunctionRuntimeTreeNode.Parameters">
            <exclude />
        </member>
        <member name="P:Composite.Functions.BaseFunctionRuntimeTreeNode.ContainsNestedFunctions">
            <exclude />
        </member>
        <member name="P:Composite.Functions.BaseFunctionRuntimeTreeNode.HostedFunction">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStoresContainer.AddSupportedDataTypeStore(System.Type,Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStore)">
            <summary>
            This method adds the support of the given data interface type to the xml data provider.
            </summary>
            <param name="interfaceType"></param>
            <param name="xmlDataTypeStore"></param>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStoresContainer.SupportedInterface">
            <summary>
            All working data types 
            </summary>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStoresContainer.KnownInterfaces">
            <summary>
            All data types, including non working due to config error or something else
            </summary>
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.XmlDataProvider.XmlDataTypeStoresContainer.GeneratedInterfaces">
            <summary>
            All working generated data types
            </summary>
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.MethodBasedFunctionProviderElementProvider.MethodBasedFunctionAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.UpdateWithNewBindings(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.GetSelectedSerializedEntityTokens(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.GetBindingsMarkup">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.GetFormMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.FieldLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.MultiSelectLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.ActivePerspectiveFormsHelper.MultiSelectHelp">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.UpdateWithNewBindings(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Composite.C1Console.Security.PermissionType})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.GetFieldBindingPath">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.GetSelectedPermissionTypes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.GetBindingsMarkup">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.GetFormMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.FieldLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.MultiSelectLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.GlobalPermissionsFormsHelper.MultiSelectHelp">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserElementProviderGroupEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserElementProviderGroupEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserElementProviderGroupEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserElementProviderGroupEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserElementProviderGroupEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserElementProviderGroupEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.UserElementProvider.UserElementProviderGroupEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IFolderWhiteList">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFolderWhiteList.KeyName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFolderWhiteList.TildeBasedPath">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IFolderWhiteListExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFolderWhiteListExtensions.GetTildePath(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFolderWhiteListExtensions.GetFullPath(Composite.Data.Types.IFolderWhiteList)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteEntity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteEntity.#ctor(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteEntity.IsFile">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteEntity.IsFolder">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteEntity.FullPath">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderRootEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderRootEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderRootEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderRootEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderRootEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderRootEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderRootEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFile.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFile.ReadAllText">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFile.WriteAllText(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFile.FileName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFile.MimeType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFile.IsReadOnly">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderData.FolderWhiteListKeyName">
            <summary>
            If specified, the key to use when localitng "white listed" folders for this provider.
            When empty all folders are shown (no white-listing required)
            </summary>
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderData.ManageableKeyNames">
            <summary>
            A comma seperated list of "key names" this provider should manage. In effect, this 
            controls the folders in other providers that have the specified key name.
            </summary>
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderData.ManageableKeyNameLabels">
            <summary>
            A comma seperated list of strings that denote what is managed by the respective "key name"
            specified for ManageableKeyNames (in the same order). Used for humans to build command labels.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.SearchToken">
            <summary>
            Class that describe a element provider search. Sub class this for more specific fields. As a minimum a Keyword is present.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.SearchToken.Serialize">
            <summary>
            Serializes this instance
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="M:Composite.C1Console.Elements.SearchToken.Deserialize(System.String)">
            <summary>
            Deserialize a search token
            </summary>
            <param name="serializedSearchToken">String representation of searchtoken</param>
            <returns>Deserialized SearchToken</returns>
        </member>
        <member name="P:Composite.C1Console.Elements.SearchToken.Keyword">
            <summary>
            Keyword to search for
            </summary>
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.ProviderName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.WebsiteFileElementProvider.WebsiteFileElementProviderEntityToken.Path">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.TemplateId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.SelectableTemplateIds">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.NamedXhtmlFragments">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.CustomUiControls.PageContentEditorTemplateUserControlBase.ClassConfigurationName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.BuildWebControl">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.BindStateToControlProperties">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.ClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.IsFullWidthControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.UiControlID">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.UiControlChannel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.Label">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.Help">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.ClientValidationRules">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.SourceBindingPaths">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.IsValid">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.UserControlBasedUiControl.ValidationError">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.Date">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.IsValid">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.ValidationError">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.ReadOnly">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.ShowHours">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DateTimeSelectorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase.IsTrue">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase.TrueLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.BoolSelectorTemplateUserControlBase.FalseLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.HeadingTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.HeadingTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.HeadingTemplateUserControlBase.Title">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.HeadingTemplateUserControlBase.Description">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.HeadingTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.FunctionProvider.IDynamicTypeFunctionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Functions.Plugins.FunctionProvider.IDynamicTypeFunctionProvider.DynamicTypeDependentFunctions">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.WidgetFunctionProvider.IDynamicTypeWidgetFunctionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.WidgetFunctionProvider.IWidgetFunctionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Functions.Plugins.WidgetFunctionProvider.IWidgetFunctionProvider.WidgetFunctionNotifier">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Plugins.WidgetFunctionProvider.IWidgetFunctionProvider.Functions">
            <exclude />
        </member>
        <member name="P:Composite.Functions.Plugins.WidgetFunctionProvider.IDynamicTypeWidgetFunctionProvider.DynamicTypeDependentFunctions">
            <exclude />
        </member>
        <member name="T:Composite.GlobalInitializerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.GlobalInitializerFacade.EnsureSystemIsInitialized">
            <summary>
            This method will initialize the system (if it has not been initialized).
            </summary>
        </member>
        <member name="M:Composite.GlobalInitializerFacade.InitializeTheSystem">
            <summary>
            This method will initialize the system (if it has not been initialized).
            </summary>
        </member>
        <member name="M:Composite.GlobalInitializerFacade.ReinitializeTheSystem(Composite.GlobalInitializerFacade.RunInWriterLockScopeDelegage)">
            <exclude />
        </member>
        <member name="M:Composite.GlobalInitializerFacade.WaitUntilAllIsInitialized">
            <exclude />
        </member>
        <member name="M:Composite.GlobalInitializerFacade.FatalResetTheSytem">
            <exclude />
        </member>
        <member name="M:Composite.GlobalInitializerFacade.UninitializeTheSystem(Composite.GlobalInitializerFacade.RunInWriterLockScopeDelegage)">
            <exclude />
        </member>
        <member name="M:Composite.GlobalInitializerFacade.ValidateIsOnlyCalledFromGlobalInitializerFacade(System.Diagnostics.StackTrace)">
            <exclude />
        </member>
        <member name="M:Composite.GlobalInitializerFacade.RunInWriterLockScope(Composite.GlobalInitializerFacade.RunInWriterLockScopeDelegage)">
            <exclude />
        </member>
        <member name="P:Composite.GlobalInitializerFacade.DynamicTypesGenerated">
            <exclude />
        </member>
        <member name="P:Composite.GlobalInitializerFacade.SystemCoreInitializing">
            <exclude />
        </member>
        <member name="P:Composite.GlobalInitializerFacade.SystemCoreInitialized">
            <exclude />
        </member>
        <member name="P:Composite.GlobalInitializerFacade.IsReinitializingTheSystem">
            <summary>
            This is true durring a total flush of the system (re-initialize).
            </summary>
        </member>
        <member name="P:Composite.GlobalInitializerFacade.CoreLockScope">
            <summary>
            Locks the initialization token untill disposed. Use this in a using {} statement. 
            </summary>
        </member>
        <member name="P:Composite.GlobalInitializerFacade.CoreIsInitializedScope">
            <summary>
            Using this in a using-statement will ensure that the code are 
            executed AFTER the system has been initialized.
            </summary>
        </member>
        <member name="P:Composite.GlobalInitializerFacade.CoreNotLockedScope">
            <summary>
            Using this in a using-statement will ensure that the code is 
            executed AFTER any existing locks has been released.
            </summary>
        </member>
        <member name="T:Composite.GlobalInitializerFacade.RunInWriterLockScopeDelegage">
            <exclude />
        </member>
        <member name="T:Composite.GlobalInitializerFacade.LockerToken">
            <summary>
            Encaplulates calls to [Actuare|Release][Reader|Writer]Lock(), keeps log of writer locks
            </summary>
        </member>
        <member name="M:Composite.GlobalInitializerFacade.LockerToken.#ctor">
            <summary>
            Creates a read lock
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.ActionTokenSerializer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ActionTokenSerializer.Serialize(Composite.C1Console.Security.ActionToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ActionTokenSerializer.Serialize(Composite.C1Console.Security.ActionToken,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ActionTokenSerializer.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ActionTokenSerializer.Deserialize(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.ActionTokenSerializer.Deserialize``1(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Functions.FunctionParameterDescriptionAttribute">
            <summary>
            Add information about parameters to functions callable via the "C# Function" feature. 
            </summary>
            <remarks>
            This class has been marked as obsolete. Use <see cref="T:Composite.Functions.FunctionParameterAttribute"/>.
            </remarks>
            <example>
            Here is an example of how to use <see cref="T:Composite.Functions.FunctionParameterDescriptionAttribute"/>
            <code>
            [FunctionParameterDescription("searchTerm", "Search term", "One or more keywords to search for")]
            [FunctionParameterDescription("filter", "Filter", "Filter to apply to data before searching for search term", null)]
            public static int GetItemCount( string searchTerm, Expression&lt;Func&lt;IMyDataType,bool&gt;&gt; filter ) 
            { 
                if (filter == null ) filter = _defaultFilter;
                // more code here
            }
            </code>
            </example>
            <exclude/>
        </member>
        <member name="M:Composite.Functions.FunctionParameterDescriptionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Describe a function parameter for use in the C1 Function system.
            </summary>
            <param name="parameterName">The programmatic name of the parameter</param>
            <param name="parameterLabel">Human readable label</param>
            <param name="parameterHelpText">Human readable help text</param>
        </member>
        <member name="M:Composite.Functions.FunctionParameterDescriptionAttribute.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            Describe a function parameter for use in the C1 Function system.
            </summary>
            <param name="parameterName">The programmatic name of the parameter</param>
            <param name="parameterLabel">Human readable label</param>
            <param name="parameterHelpText">Human readable help text</param>
            <param name="defaultValue">Optional. Default value that should be assigned to the parameter if not specified by the caller. You can use 'null' for complex objects that can not be expressed in attribute code and the check for null in the code.</param>
        </member>
        <member name="P:Composite.Functions.FunctionParameterDescriptionAttribute.ParameterName">
            <summary>
            The name of the function parameter being described. This should match the parameter name in the method.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterDescriptionAttribute.DefaultValue">
            <summary>
            Optional. Default value that should be assigned to the parameter if not specified by the caller. You can use 'null' for complex objects that can not be expressed in attribute code and the check for null in the code.
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterDescriptionAttribute.ParameterLabel">
            <summary>
            Human readable label for this parameter
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterDescriptionAttribute.ParameterHelpText">
            <summary>
            Human readable help for this parameter
            </summary>
        </member>
        <member name="P:Composite.Functions.FunctionParameterDescriptionAttribute.HasDefaultValue">
            <summary>
            Indicate if this parameter definition has a default value or not.
            </summary>
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.StandardFunctionProvider.IDataGenerated.GetXml`1.GetCachePriorities">
            <summary>
            To be called though reflection
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.DataReferenceSelectorWidgetFunction`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.DataReferenceSelectorWidgetFunction`1.#ctor(Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.EntityTokenFactory)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.DataReferenceSelectorWidgetFunction`1.GetWidgetMarkup(Composite.Functions.ParameterList,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.DataReference.DataReferenceSelectorWidgetFunction`1.GetOptions(System.String)">
            <summary>
            To be called through reflection
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.VisualXhtmlEditorFuntion">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.VisualXhtmlEditorFuntion.CompositeName">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.VisualXhtmlEditorFuntion.ClassConfigurationNameParameterName">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.VisualXhtmlEditorFuntion.#ctor(Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.EntityTokenFactory)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.VisualXhtmlEditorFuntion.GetWidgetMarkup(Composite.Functions.ParameterList,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginProvider.IFormLoginProvider">
            <summary>
            Interface for form login providers - providers able to validate logins (username/password) and manage basic login information. 
            The provider is as a minimum expected to provide Validate( username, password ), UsersExists { get; } and AllUsernames { get; }. 
            If the provider support adding new users and changing a users password, this is declared via CanAddNewUser and CanSetUserPassword.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginProvider.ILoginProvider">
            <summary>
            Base interface for login providers.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Security.Plugins.LoginProvider.ILoginProvider.AllUsernames">
            <summary>
            Enumerates all known user names
            </summary>
        </member>
        <member name="P:Composite.C1Console.Security.Plugins.LoginProvider.ILoginProvider.CanSetUserPassword">
            <summary>
            When true the provider is capable of changing a users password
            </summary>
        </member>
        <member name="P:Composite.C1Console.Security.Plugins.LoginProvider.ILoginProvider.CanAddNewUser">
            <summary>
            When true the provider is capable of creating new users
            </summary>
        </member>
        <member name="P:Composite.C1Console.Security.Plugins.LoginProvider.ILoginProvider.UsersExists">
            <summary>
            When true users exists in the system, i.e. AllUsernames.Any()
            </summary>
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginProvider.IFormLoginProvider.Validate(System.String,System.String)">
            <summary>
            Validate a login (username and password combination)
            </summary>
            <param name="username">User name to validate</param>
            <param name="password">Password to validate</param>
            <returns>Emun describing the result of the validation</returns>
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginProvider.IFormLoginProvider.SetUserPassword(System.String,System.String)">
            <summary>
            Updates a user password
            </summary>
            <param name="username">Name of user to update password for</param>
            <param name="password">Desired password</param>
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginProvider.IFormLoginProvider.AddNewUser(System.String,System.String,System.String,System.String)">
            <summary>
            Create a new login
            </summary>
            <param name="username">Name of user to update password for</param>
            <param name="password">Desired password</param>
            <param name="group">Name of group (simple container) for user</param>
            <param name="email">User email address</param>
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginProvider.LoginProviderData">
            <summary>
            Base class for login provider configuration. Inherit from this class to declare the configuration a custom provider.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginProvider.LoginProviderData.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginProvider.LoginProviderData.#ctor(System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.Foundation.CompileUnitBaseTypeProber.MapTypeDeclarationInheritance(System.CodeDom.CodeCompileUnit,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Probes all class declarations, locates types with base types and return a map from found base types to all type declarations having this base type.
            </summary>
            <param name="compileUnit">The compile unit to probe</param>
            <param name="allowedBaseTypeAssemblies">The collection of assemblies all base types are expected to stem from.</param>
            <returns>A dictionary of all found base types that map to a list of type declarations using this base type.</returns>
        </member>
        <member name="M:Composite.Core.Types.Foundation.CompileUnitBaseTypeProber.MapTypeDeclarationInheritance(System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CompilerParameters)">
            <summary>
            Probes all class declarations, locates types with base types and return a map from found base types to all type declarations having this base type.
            </summary>
            <param name="compileUnit">The compile unit to probe</param>
            <param name="parms">The parameters used for compilation. Used to locate relevant assemblies</param>
            <returns>A dictionary of all found base types that map to a list of type declarations using this base type.</returns>
        </member>
        <member name="M:Composite.Core.Types.Foundation.CompileUnitBaseTypeProber.MapTypeDeclarationInheritance(System.CodeDom.CodeCompileUnit,System.Func{System.String,System.Type})">
            <summary>
            Probes all class declarations, locates types with base types and return a map from found base types to all type declarations having this base type.
            </summary>
            <param name="compileUnit">The compile unit to probe</param>
            <param name="typeResolver">A function that can map a type full name (without assembly information) to a Type</param>
            <returns>A dictionary of all found base types that map to a list of type declarations using this base type.</returns>
        </member>
        <member name="T:Composite.Core.Collections.Generic.ReadOnlyList`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.#ctor(System.Collections.Generic.List{`0})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.IndexOf(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.Insert(System.Int32,`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.RemoveAt(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.Add(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.Clear">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.Contains(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.CopyTo(`0[],System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.Remove(`0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.GetEnumerator">
            <exclude />
        </member>
        <member name="M:Composite.Core.Collections.Generic.ReadOnlyList`1.System#Collections#IEnumerable#GetEnumerator">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.ReadOnlyList`1.Item(System.Int32)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.ReadOnlyList`1.Count">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.Generic.ReadOnlyList`1.IsReadOnly">
            <exclude />
        </member>
        <member name="T:Composite.Core.Collections.NamespaceTreeBuilderFolder">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.NamespaceTreeBuilderFolder.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.NamespaceTreeBuilderFolder.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.NamespaceTreeBuilderFolder.Leafs">
            <exclude />
        </member>
        <member name="P:Composite.Core.Collections.NamespaceTreeBuilderFolder.SubFolders">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.OpenHandledViewMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.OpenHandledViewMessageQueueItem.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.OpenHandledViewMessageQueueItem.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenHandledViewMessageQueueItem.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenHandledViewMessageQueueItem.Handle">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenHandledViewMessageQueueItem.Arguments">
            <exclude />
        </member>
        <member name="T:Composite.Data.AutoUpdatebleAttribute">
            <summary>
            IData types decorated with this attribute will be have their store auto created and updated if the interface changes. 
            You should use this attribute for data types that Composite C1 should be able to auto support via data providers.
            </summary>
        </member>
        <member name="M:Composite.Data.AutoUpdatebleAttribute.#ctor">
            <exclude />
        </member>
        <member name="T:Composite.Data.CachingAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.CachingAttribute.#ctor(Composite.Data.CachingType)">
            <exclude />
        </member>
        <member name="P:Composite.Data.CachingAttribute.CachingType">
            <exclude />
        </member>
        <member name="T:Composite.Data.CachingType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.CachingType.Full">
            <exclude />
        </member>
        <member name="F:Composite.Data.CachingType.None">
            <exclude />
        </member>
        <member name="T:Composite.Data.Caching.CachingQueryable_CachedByKey">
            <summary>
            Used for optimizing execution of GetDataByUniqueKey method
            </summary>
        </member>
        <member name="T:Composite.Data.Foundation.CodeGeneration.DataWrapperTypeManager">
            <summary>
            This class handles data wrapper types and cashing.
            It will through <see cref="T:Composite.Data.Foundation.CodeGeneration.DataWrapperCodeGenerator"/> genereated
            data wrapper class types if needed.
            </summary>
        </member>
        <member name="T:Composite.Data.Caching.DataCachingFacade">
            <summary>
            Provide information about data caching and means to flush data from the active cache.
            </summary>
        </member>
        <member name="M:Composite.Data.Caching.DataCachingFacade.IsTypeCacheable(System.Type)">
            <summary>
            Gets a value indicating if data caching is possible for a specific data type
            </summary>
            <param name="interfaceType">The data type to check</param>
            <returns>True if caching is possible</returns>
        </member>
        <member name="M:Composite.Data.Caching.DataCachingFacade.IsDataAccessCacheEnabled(System.Type)">
            <summary>
            Gets a value indicating if data caching is enabled for a specific data type
            </summary>
            <param name="interfaceType">The data type to check</param>
            <returns>True if caching is enabled</returns>
        </member>
        <member name="M:Composite.Data.Caching.DataCachingFacade.GetDataFromCache``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.Caching.DataCachingFacade.ClearCache(System.Type)">
            <summary>
            Flush cached data for a data type in the current data scope.
            </summary>
            <param name="interfaceType">The type of data to flush from the cache</param>
        </member>
        <member name="M:Composite.Data.Caching.DataCachingFacade.ClearCache(System.Type,Composite.Data.DataScopeIdentifier)">
            <summary>
            Flush cached data for a data type in the specified data scope.
            </summary>
            <param name="interfaceType">The type of data to flush from the cache</param>
            <param name="dataScopeIdentifier">The data scope to flush</param>
        </member>
        <member name="M:Composite.Data.Caching.DataCachingFacade.Flush">
            <summary>
            This method is also called by the DataFacade
            </summary>
        </member>
        <member name="P:Composite.Data.Caching.DataCachingFacade.Enabled">
            <summary>
            Gets a value indicating if data caching is enabled
            </summary>
        </member>
        <member name="T:Composite.Data.Caching.DataCachingFacade.CachedTable">
            <summary>
            Cached table
            </summary>
        </member>
        <member name="M:Composite.Data.Caching.DataCachingFacade.CachedTable.#ctor(System.Linq.IQueryable)">
            <summary>
            Initializes a new instance of the <see cref="T:Composite.Data.Caching.DataCachingFacade.CachedTable"/> class.
            </summary>
            <param name="queryable">The queryable.</param>
        </member>
        <member name="F:Composite.Data.Caching.DataCachingFacade.CachedTable.Queryable">
            <summary>
            The queryable data
            </summary>
        </member>
        <member name="F:Composite.Data.Caching.DataCachingFacade.CachedTable.RowByKey">
            <summary>
            Row by key table
            </summary>
        </member>
        <member name="T:Composite.Data.CodeGeneratedAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.CodeGeneratedAttribute.#ctor">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataAssociationAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAssociationAttribute.#ctor(System.Type,System.String,Composite.Data.DataAssociationType)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataAssociationAttribute.AssociatedInterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataAssociationAttribute.ForeignKeyPropertyName">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataAssociationAttribute.AssociationType">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataAssociationType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.DataAssociationType.None">
            <exclude />
        </member>
        <member name="F:Composite.Data.DataAssociationType.Aggregation">
            <exclude />
        </member>
        <member name="F:Composite.Data.DataAssociationType.Composition">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataAttributeFacade">
            <summary>
            This facade is used to obtain attribute informations for IData's and IData subinterface types
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.IsAutoUpdateble(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.IsAutoUpdateble(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.IsGenerated(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetImmutableTypeId(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetImmutableTypeId(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.TryGetImmutableTypeId(System.Type,System.Guid@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.IsNotReferenceable(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.IsNotReferenceable(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetLabel(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetLabel(Composite.Data.IData,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetLabelPropertyInfo(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetCachingType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetDataReferencePropertyInfoes(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetDataReferenceProperties(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetKeyPropertyNames(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetKeyPropertyInfoes(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetKeyProperties(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetKeyPropertyInfoes(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetKeyProperties(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetTypeTitle(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataAttributeFacade.GetTypeTitle(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.ForeignKeyAttribute">
            <summary>
            The attribute will tell the system that a data property is a reference (foreign key) to another IData.
            </summary>
            <example> This sample shows how to use the ForeignKey attribute. 
            <code>
            // data interface attributes ...
            interface IMyDataType : IData
            {
                [StoreFieldType(PhysicalStoreFieldType.Guid)]
                [ImmutableFieldId("{D75EA67F-AD14-4BAB-8547-6D87002809F2}")]
                [ForeignKey(typeof(IPage), "Id", AllowCascadeDeletes = true)]
                Guid PageId { get; set; }
                
                // more data properties ...
                
            }
            </code>
            </example>
        </member>
        <member name="M:Composite.Data.ForeignKeyAttribute.#ctor(System.Type,System.String)">
            <summary>
            Tell the system that this data property is a reference (foreign key) to another IData.
            </summary>
            <param name="interfaceType">The type being referenced</param>
            <param name="keyPropertyName">The field being referenced</param>
        </member>
        <member name="M:Composite.Data.ForeignKeyAttribute.#ctor(System.String)">
            <summary>
            Only use this constructor for types that are registred with the DynamicTypeManager. Primary key field is infered.
            </summary>
            <param name="interfaceTypeManagerName">A string that will yield a type from the TypeManager.</param>
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.AllowCascadeDeletes">
            <summary>
            If the "parent" data is deleted and this is set to true, then the datas that 
            references the parent is also deleted.
            </summary>
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.NullReferenceValue">
            <summary>
            This value is used when foreign key integrity is performed.
            If this is not set, the data that the foreign key is pointing to must always exists.        
            </summary>
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.NullReferenceValueType">
            <summary>
            The NullReferenceValue will be converted to the the type specifed with the property
            </summary>
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.NullableString">
            <summary>
            Use this if non-reference is allowed with strings foreign keys
            </summary>
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.IsNullReferenceValueSet">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.IsValid">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.TypeManagerName">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignKeyAttribute.KeyPropertyName">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataReferenceFacade">
            <summary>
            Referenced type: The type that is "pointed" to by another type
            Referee type: The type that is "pointing" to a nother type
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetRefereeTypes(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.TryValidateForeignKeyIntegrity(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.TryValidateForeignKeyIntegrity(Composite.Data.IData,System.Collections.Generic.List{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetReferences``1(System.Linq.IQueryable{``0},System.Reflection.PropertyInfo,System.Object,System.Boolean)">
            <summary>
            To be run through reflection
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="propertyInfo"></param>
            <param name="keyValue"></param>
            <param name="justOne"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.HasReference``1(System.Linq.IQueryable,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            To be run through reflection
            </summary>
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetNotOptionalReferences``1(``0)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetNotOptionalReferences``1(``0,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.TryGetReferenceType(System.Reflection.PropertyInfo,System.Type@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.BuildDataReference``1(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.BuildDataReference(System.Type,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.ReferenceExists(System.Type,System.Type)">
            <summary>
            Returns true if the refereeType has a foreign key to the referencedType
            </summary>
            <param name="refereeType"></param>
            <param name="referencedType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetReferees(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetReferees(Composite.Data.IData,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetReferees(Composite.Data.IData,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetReferees(Composite.Data.IData,System.Type,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetReferenced(Composite.Data.IData,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceFacade.GetBrokenReferencesReport(System.Collections.Generic.List{Composite.Data.IData})">
            <exclude />
        </member>
        <member name="T:Composite.Data.ForeignPropertyInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.SourcePropertyName">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.TargetType">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.TargetKeyPropertyName">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.AllowCascadeDeletes">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.NullReferenceValue">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.NullReferenceValueType">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.IsNullReferenceValueSet">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.IsNullableString">
            <exclude />
        </member>
        <member name="P:Composite.Data.ForeignPropertyInfo.IsOptionalReference">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataScope">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScope.#ctor(Composite.Data.DataScopeIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScope.#ctor(Composite.Data.PublicationScope)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScope.#ctor(System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScope.#ctor(Composite.Data.DataScopeIdentifier,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="dataScope"></param>
            <param name="cultureInfo">null for default culture</param>
        </member>
        <member name="M:Composite.Data.DataScope.#ctor(Composite.Data.PublicationScope,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="publicationScope">Publication scope</param>
            <param name="cultureInfo">null for default culture</param>
        </member>
        <member name="M:Composite.Data.DataScope.Finalize">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScope.Dispose">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataScopeAttribute">
            <summary>
            Assigns data scopes to a data type. By default data types will live in the public data scope (only) and you use this
            attribute to specify aditional scopes.
            </summary>
            <example> This sample shows how to use the DataScope attribute along with related interfaces and attributes:
            <code>
            // (other IData attributes)
            [DataScope(DataScopeIdentifier.PublicName)]
            [DataScope(DataScopeIdentifier.AdministratedName)]
            [PublishProcessControllerType(typeof(GenericPublishProcessController))]
            interface IMyDataType : IData, IPublishControlled
            {
                // data type properties
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.DataScopeAttribute.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataScopeAttribute.Identifier">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataScopeIdentifier">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.DataScopeIdentifier.PublicName">
            <exclude />
        </member>
        <member name="F:Composite.Data.DataScopeIdentifier.AdministratedName">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.GetDefault">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.ToPublicationScope">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.FromPublicationScope(Composite.Data.PublicationScope)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.IsLegasyDataScope(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.Equals(Composite.Data.DataScopeIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.op_Equality(Composite.Data.DataScopeIdentifier,Composite.Data.DataScopeIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.op_Inequality(Composite.Data.DataScopeIdentifier,Composite.Data.DataScopeIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeIdentifier.ToString">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataScopeIdentifier.Public">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataScopeIdentifier.Administrated">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataScopeIdentifier.Name">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataScopeManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeManager.MapByType(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeManager.MapByType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataScopeManager.EnterThreadLocal">
            <summary>
            Move the stack handling scope to a thread local store, enabling simultaneous threads to mutate (their own) scope. This will be in effect untill the thread has completed.
            </summary>
        </member>
        <member name="M:Composite.Data.DataScopeManager.ExitThreadLocal">
            <summary>
            Move the stack handling to request scope.
            </summary>
        </member>
        <member name="P:Composite.Data.DataScopeManager.CurrentDataScope">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldValueAttribute">
            <summary>    
            This abstract class is used by data providers when a new column is added to a table. Extend this class to create your own.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldStringValueAttribute">
            <summary>    
            Associate a static default value to a string property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldStringValueAttribute.#ctor(System.String)">
            <summary>    
            Associate a static default value to a string property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldStringValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldIntValueAttribute">
            <summary>    
            Associate a static default value to a integer property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldIntValueAttribute.#ctor(System.Int32)">
            <summary>    
            Associate a static default value to a integer property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldIntValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldDecimalValueAttribute">
            <summary>    
            Associate a static default value to a decimal property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldDecimalValueAttribute.#ctor(System.Int32)">
            <summary>
            Decimals are not allowed as attribute parameter values. They are structs.
            Use int value.
            </summary>
            <param name="defaultValue"></param>
        </member>
        <member name="M:Composite.Data.DefaultFieldDecimalValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldBoolValueAttribute">
            <summary>    
            Associate a static default value to a boolean property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldBoolValueAttribute.#ctor(System.Boolean)">
            <summary>    
            Associate a static default value to a boolean property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldBoolValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldGuidValueAttribute">
            <summary>    
            Associate a static default value to a GUID property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldGuidValueAttribute.#ctor(System.String)">
            <summary>    
            Associate a static default value to a GUID property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldGuidValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldNewGuidValueAttribute">
            <summary>    
            Associate a random new GUID to a GUID property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldNewGuidValueAttribute.#ctor">
            <summary>    
            Associate a random new GUID to a GUID property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldNewGuidValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DefaultFieldNowDateTimeValueAttribute">
            <summary>    
            Associate the current date and time to a DateTime property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldNowDateTimeValueAttribute.#ctor">
            <summary>
            Associate the current date and time to a DateTime property on a data type.
            </summary>
        </member>
        <member name="M:Composite.Data.DefaultFieldNowDateTimeValueAttribute.GetDefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.#ctor(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.#ctor(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.#ctor(Composite.Data.DynamicTypes.DataTypeDescriptor,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.#ctor(Composite.Data.DynamicTypes.DataTypeDescriptor,System.String,System.Boolean,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.AddReadOnlyField(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.AddReadOnlyFields(System.Collections.Generic.IEnumerable{System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.GetForm">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.UpdateWithNewBindings(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.GetNewBindings">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.UpdateWithBindings(Composite.Data.IData,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.GetBindings(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.GetBindings(Composite.Data.IData,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.GetBindingsValidationRules(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.BindingsToObject(System.Collections.Generic.Dictionary{System.String,System.Object},Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.ObjectToBindings(Composite.Data.IData,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.GetBindingName(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.DataTypeDescriptor">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.AlternateFormDefinition">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.BindingXml">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.PanelXml">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.BindingNamesPrefix">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.LayoutIconHandle">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.MainNamespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.CmsNamespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.FunctionNamespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.FieldGroupLabel">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptorFormsHelper.LayoutLabel">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DynamicTypeMarkupServices">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeMarkupServices.GetReferenceElement(Composite.Data.DynamicTypes.DataFieldDescriptor,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeMarkupServices.GetReferenceElement(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeMarkupServices.TryGetDescriptors(System.Xml.Linq.XElement,Composite.Data.DynamicTypes.DataTypeDescriptor@,Composite.Data.DynamicTypes.DataFieldDescriptor@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeMarkupServices.GetFieldReferenceDefinitions(System.Xml.Linq.XContainer,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DynamicTypeMarkupServices.FieldReferenceDefinition">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DynamicTypeMarkupServices.FieldReferenceDefinition.FieldName">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DynamicTypeMarkupServices.FieldReferenceDefinition.FieldReferenceElement">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.Foundation.DynamicTypeReflectionFacade.GetBuildNewHandlerType(System.Type)">
            <summary>
            If no BuildNewHandlerAttribute is used on the data type interface
            null is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataFieldFormRenderingProfile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldFormRenderingProfile.Label">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldFormRenderingProfile.HelpText">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldFormRenderingProfile.WidgetFunctionMarkup">
            <exclude />
        </member>
        <member name="T:Composite.Data.Foundation.DataAssociationRegistry">
            <summary>
            Associated type: The type that is "pointed" to by another type
            Association type: The type that is "pointing" to a nother type
            </summary>
        </member>
        <member name="M:Composite.Data.Foundation.DataExpressionBuilder.GetQueryableByData(Composite.Data.IData)">
            <summary>
            This method returns a queryable containing data with the same keys
            </summary>
            <param name="data"></param>        
            <returns></returns>
        </member>
        <member name="T:Composite.Data.IDataIdExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataIdExtensions.FullCopyTo(Composite.Data.IDataId,Composite.Data.IDataId)">
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataIdExtensions.CompareTo(Composite.Data.IDataId,Composite.Data.IDataId)">
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataIdExtensions.CompareTo(Composite.Data.IDataId,Composite.Data.IDataId,System.Boolean)">
            <exclude />
        </member>
        <member name="T:Composite.Data.LabelPropertyNameAttribute">
            <summary>
            Add this attribute to your data interface to select what property should be used as label when enumerating data.
            </summary>
            <example> This sample shows how to use the LabelPropertyName attribute.
            <code>
            [LabelPropertyName("Title")]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                string Title { get; set; }
                
                // other data type properties
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.LabelPropertyNameAttribute.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.LabelPropertyNameAttribute.PropertyName">
            <exclude />
        </member>
        <member name="T:Composite.Data.RelevantToUserTypeAttribute">
            <summary>
            Add this attribute to your data interface to make it visible in the C1 Console developer UI.
            </summary>
            <example> This sample shows how to use the RelevantToUserType attribute.
            <code>
            [RelevantToUserType(UserType.Developer)]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                // data type properties
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.RelevantToUserTypeAttribute.#ctor(Composite.Data.UserType)">
            <summary>
            Make your data interface visible in the C1 Console developer UI.
            </summary>
            <param name="relevantToUserType">The <see cref="T:Composite.Data.UserType"/> this data type is relevant to. Only 'Developer' is available.</param>
        </member>
        <member name="M:Composite.Data.RelevantToUserTypeAttribute.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.RelevantToUserTypeAttribute.UserType">
            <exclude />
        </member>
        <member name="T:Composite.Data.UserType">
            <summary>    
            Used by the <see cref="T:Composite.Data.RelevantToUserTypeAttribute"/> attribute.
            </summary>
        </member>
        <member name="F:Composite.Data.UserType.Developer">
            <summary>
            Signals relevance to developers, making the data type visible when selecting data types in the C1 Console
            </summary>
        </member>
        <member name="T:Composite.Data.DataMetaDataFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataMetaDataFacade.GetDataTypeDescriptor(System.Guid,System.Boolean)">
            <summary>
            This method will return the data type descriptor for the given data type id.
            If the data type descriptor has not yet been created (file not existing) and 
            the <paramref name="allowDataTypeCreation"/> is set to true,
            this method will try getting it through the <see cref="T:Composite.Data.DynamicTypes.Foundation.ReflectionBasedDescriptorBuilder"/> 
            that will try locating the type from the data type id using refelction 
            going through know assemblies.
            </summary>
            <param name="dataTypeId">The id of the data type.</param>
            <param name="allowDataTypeCreation">
            If this is true and the data type descriptor does not exists, it will try to
            be created.
            </param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DataMetaDataFacade.PersistMetaData(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataMetaDataFacade.DeleteMetaData(System.Guid)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataMetaDataFacade.AllDataTypeDescriptors">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataMetaDataFacade.GeneratedTypeDataTypeDescriptors">
            <exclude />
        </member>
        <member name="T:Composite.Data.GeneratedTypes.GenerateNewTypeEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.GeneratedTypes.UpdateTypeEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.GeneratedTypes.DeleteTypeEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.GeneratedTypes.GeneratedTypesFacade">
            <summary>    
            This class is used to create/update/delete generated types. That is, types
            that is not defined in code, but designed through the UI and is dynamicly
            compiled. 
            When a data type is created/updated/deleted the interface is (re)code-generated/deleted 
            and the store is created/updated/deleted through <see cref="T:Composite.Data.DynamicTypes.DynamicTypeManager"/>
            </summary>
            <exclude/>
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.GenerateNewType(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.GenerateNewType(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.GenerateNewType(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.CanDeleteType(Composite.Data.DynamicTypes.DataTypeDescriptor,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.DeleteType(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.DeleteType(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.UpdateType(Composite.Data.DynamicTypes.UpdateDataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.SubscribeToGenerateNewTypeEvent(Composite.Data.GeneratedTypes.GeneratedTypesFacade.GenerateNewTypeDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.SubscribeToUpdateTypeEvent(Composite.Data.GeneratedTypes.GeneratedTypesFacade.UpdateTypeDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.SubscribeToDeleteTypeEvent(Composite.Data.GeneratedTypes.GeneratedTypesFacade.DeleteTypeDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.UnsubscribeToGenerateNewTypeEvent(Composite.Data.GeneratedTypes.GeneratedTypesFacade.GenerateNewTypeDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.UnsubscribeToUpdateTypeEvent(Composite.Data.GeneratedTypes.GeneratedTypesFacade.UpdateTypeDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.Data.GeneratedTypes.GeneratedTypesFacade.UnsubscribeToDeleteTypeEvent(Composite.Data.GeneratedTypes.GeneratedTypesFacade.DeleteTypeDelegate)">
            <exclude />
        </member>
        <member name="T:Composite.Data.GeneratedTypes.GeneratedTypesFacade.GenerateNewTypeDelegate">
            <exclude />
        </member>
        <member name="T:Composite.Data.GeneratedTypes.GeneratedTypesFacade.UpdateTypeDelegate">
            <exclude />
        </member>
        <member name="T:Composite.Data.GeneratedTypes.GeneratedTypesFacade.DeleteTypeDelegate">
            <exclude />
        </member>
        <member name="T:Composite.Data.IDataExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataExtensions.FullCopyChangedTo(Composite.Data.IData,Composite.Data.IData)">
            <summary>
            Copies all changed properties from sourceData to targetData.
            </summary>
            <param name="sourceData"></param>
            <param name="targetData"></param>
        </member>
        <member name="M:Composite.Data.IDataExtensions.FullCopyChangedTo(Composite.Data.IData,Composite.Data.IData,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Copies all changed properties from sourceData to targetData.
            </summary>
            <param name="sourceData"></param>
            <param name="targetData"></param>
            <param name="propertyNamesToIgnore"></param>
        </member>
        <member name="M:Composite.Data.IDataExtensions.ProjectedCopyTo(Composite.Data.IData,Composite.Data.IData)">
            <summary>
            Copies all properties that exists on the targetData from the sourceData except the DataSourceId
            If the targetData has a property that does not exist on the sourceData, the default value is used.
            </summary>
            <param name="sourceData"></param>
            <param name="targetData"></param>
        </member>
        <member name="M:Composite.Data.IDataExtensions.ProjectedCopyTo(Composite.Data.IData,Composite.Data.IData,System.Boolean)">
            <summary>
            Copies all properties that exists on the targetData from the sourceData except the DataSourceId
            </summary>
            <param name="sourceData"></param>
            <param name="targetData"></param>
            <param name="useDefaultValues"></param>
        </member>
        <member name="M:Composite.Data.IDataExtensions.KeyEquals(Composite.Data.IData,Composite.Data.IData)">
            <summary>
            Compares the value of the key properties of leftData and rightData
            and if all the values are equals then it returns true. Otherwise false.
            </summary>
            <param name="leftData"></param>
            <param name="rightData"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.IDataExtensions.KeyDistinct(System.Collections.Generic.IEnumerable{Composite.Data.IData})">
            <summary>
            This returns an enumerable where no two data elements has the same key value.
            </summary>
            <param name="datas"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.IDataExtensions.GetUniqueKey(Composite.Data.IData)">
            <summary>
            Compares the value of the key properties of leftData and rightData
            and if all the values are equals then it returns true. Otherwise false.
            </summary>
            <param name="data"></param>        
            <returns></returns>
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataExtensions.GetUniqueKey``1(Composite.Data.IData)">
            <summary>
            Compares the value of the key properties of leftData and rightData
            and if all the values are equals then it returns true. Otherwise false.
            </summary>
            <param name="data"></param>       
            <returns></returns>
        </member>
        <member name="M:Composite.Data.IDataExtensions.HasAncestor(Composite.Data.IData,Composite.Data.IData)">
            <summary>
            Returns true if the child has ancestor as one of its ancestors
            </summary>
            <param name="child"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.IDataExtensions.HasAncestor(Composite.Data.IData,Composite.Data.IData,System.Int32)">
            <summary>
            Returns true if the child has ancestor as one of its ancestors
            in max maxLevels ancestors
            </summary>
            <param name="child"></param>
            <param name="parent"></param>
            <param name="maxLevels"></param>
            <returns></returns>        
        </member>
        <member name="M:Composite.Data.IDataExtensions.ToDataList(System.Linq.IQueryable)">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataExtensions.ToDataEnumerable(System.Linq.IQueryable)">
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataExtensions.GetDataPropertyRecursivly(System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.IDataExtensions.SetValues(Composite.Data.IData,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="T:Composite.Data.IDataReference">
            <summary>
            Represents a reference to a Composite C1 IData item. See <see cref="T:Composite.Data.DataReference`1"/>.
            </summary>
        </member>
        <member name="M:Composite.Data.IDataReference.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.Data.IDataReference.ReferencedType">
            <summary>
            The type of the data item. This type inherits from IData.
            </summary>
        </member>
        <member name="P:Composite.Data.IDataReference.IsSet">
            <summary>
            If the reference has not been set this is false.
            </summary>
        </member>
        <member name="P:Composite.Data.IDataReference.KeyValue">
            <summary>
            The key value of the data item being referenced, like the Guid for a page id.
            </summary>
        </member>
        <member name="P:Composite.Data.IDataReference.Data">
            <summary>
            The data item being referenced.
            </summary>
        </member>
        <member name="T:Composite.Data.NullableDataReference`1">
            <summary>
            Represents a reference to a Composite C1 IData item. Unlike <see cref="T:Composite.Data.DataReference`1"/> this class signals
            that a data reference need not be set for this to be in a valid state.
            </summary>
            <typeparam name="T">The C1 Data Type (<see cref="T:Composite.Data.IData"/>) being referenced</typeparam>
        </member>
        <member name="T:Composite.Data.DataReference`1">
            <summary>
            Represents a reference to a Composite C1 IData item. 
            </summary>
            <typeparam name="T">The C1 Data Type (<see cref="T:Composite.Data.IData"/>) being referenced</typeparam>
        </member>
        <member name="M:Composite.Data.DataReference`1.#ctor">
            <summary>
            Constructs a 'empty' DataReference.
            </summary>
        </member>
        <member name="M:Composite.Data.DataReference`1.#ctor(System.Object)">
            <summary>
            Constructs a DataReference using a key value.
            </summary>
            <param name="keyValue">The key value, like the Guid for a page's Id.</param>
        </member>
        <member name="M:Composite.Data.DataReference`1.#ctor(`0)">
            <summary>
            Constructs a DataReference using an instance of the data item.
            </summary>
            <param name="data">The data item to reference.</param>
        </member>
        <member name="M:Composite.Data.DataReference`1.GetPredicateExpression">
            <summary>
            A linq predicate that select the data item being referenced. You can use this when filtering data on the <see cref="T:Composite.Data.DataConnection"/>.
            </summary>
            <returns>Predicate for referenced data.</returns>
        </member>
        <member name="M:Composite.Data.DataReference`1.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReference`1.ToString">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataReference`1.ReferencedType">
            <summary>
            The type of the data item. This type inherits from IData.
            </summary>
        </member>
        <member name="P:Composite.Data.DataReference`1.IsSet">
            <summary>
            If the reference has not been set this is false.
            </summary>
        </member>
        <member name="P:Composite.Data.DataReference`1.KeyValue">
            <summary>
            The key value of the data item being referenced, like the Guid for a page id.
            </summary>
        </member>
        <member name="P:Composite.Data.DataReference`1.Composite#Data#IDataReference#Data">
            <summary>
            The data item being referenced.
            </summary>
        </member>
        <member name="P:Composite.Data.DataReference`1.Data">
            <summary>
            The data item being referenced.
            </summary>
        </member>
        <member name="M:Composite.Data.NullableDataReference`1.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.NullableDataReference`1.#ctor(System.Object)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataReferenceConverterAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.ValueTypeConverterHelperAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.ValueTypeConverterHelperAttribute.TryConvert(System.Object,System.Type,System.Object@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataReferenceConverterAttribute.TryConvert(System.Object,System.Type,System.Object@)">
            <exclude />
        </member>
        <member name="T:Composite.Data.ProcessControlled.ProcessControllerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllerFacade.FullDelete(Composite.Data.IData)">
            <summary>
            This method will delete the data, and its if the exists its versions and publications
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllerFacade.GetProcessControlledTypes(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            This method return the types that implements the same IProcessControlled interfaces as
            the targetType.
            </summary>
            <param name="targetType"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllerFacade.GetActions(Composite.Data.IData,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllerFacade.SetStartStatus(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllerFacade.GetValidTransitions(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllerFacade.ValidateTransition(Composite.Data.IData,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllerFacade.GetProcessControllerType``1(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllerFacade.NoProcessControllers">
            <exclude />
        </member>
        <member name="T:Composite.Data.StoreSortOrderAttribute">
            <summary>
            Add this attribute to your data interface to control the physical store sort order of data.
            This concept is known as the clustered index on SQL Server.
            </summary>
            <example> This sample shows how to use the StoreSortOrder attribute.
            <code>
            [StoreSortOrderAttribute("Date", "Title")]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                // data type properties, must include Date and Title since we ref them above
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.StoreSortOrderAttribute.#ctor(System.String[])">
            <summary>
            Sprcify the names of properties to order data by in the physical store. The specified names must exist as properties on your data type.
            </summary>
            <param name="sortOrder">Names of properties to order data by in the physical store.</param>
        </member>
        <member name="P:Composite.Data.StoreSortOrderAttribute.SortOrder">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IImageFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IMediaFile">
            <summary>    
            This data interface represents a media file in Composite C1. This can be used to query media through a <see cref="T:Composite.Data.DataConnection"/>. 
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.KeyPath">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.CompositePath">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.StoreId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.Culture">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.MimeType">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.Length">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.CreationTime">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.LastWriteTime">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFile.IsReadOnly">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.StoreIdFilter.IStorageFilter">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.StoreIdFilter.IStorageFilter.StoreId">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.#ctor(System.Linq.IQueryable{`0},System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.#ctor(System.Linq.IQueryable{`0},System.String,System.Linq.Expressions.Expression)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.CreateQuery``1(System.Linq.Expressions.Expression)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.CreateQuery(System.Linq.Expressions.Expression)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.Execute``1(System.Linq.Expressions.Expression)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.Execute(System.Linq.Expressions.Expression)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.GetEnumerator">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.System#Collections#IEnumerable#GetEnumerator">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.Expression">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.ElementType">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.Provider">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.Source">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.StoreIdFilter.StoreIdFilterQueryable`1.StoreId">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementDragAndDropInfo">
            <summary>    
            Details describing how this element may be dragged or accept dragged elements
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementDragAndDropInfo.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementDragAndDropInfo.#ctor(System.Type)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="movabilityType">Declare what this element is in terms of drag and drop by declaring a <see cref="T:System.Type"/>. 
            Element providers accepting drag and drop of this type will accept this.</param>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementDragAndDropInfo.AddDropType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementDragAndDropInfo.AddDropType(System.Type,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementDragAndDropInfo.DragType">
            <summary>
            Identifies a type of element in relation to movability. Used in conjunction with the AdoptTypeAcceptList.
            Use the MovabilitySubType to distinguish sub types.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementDragAndDropInfo.DragSubType">
            <summary>
            Optional. If the element provider presents data from multiple sources that can not exchange data and you 
            can not communicate a unique source using a Type alone, use this field to distinguish the source.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementDragAndDropInfo.SupportsIndexedPosition">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.LabeledProperty">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.LabeledProperty.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the LabeledProperty class and sets the label to the specified name.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.LabeledProperty.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the LabeledProperty class.
            </summary>
            <param name="name"></param>
            <param name="label"></param>
            <param name="value"></param>
        </member>
        <member name="P:Composite.C1Console.Elements.LabeledProperty.Name">
            <summary>
            The name of the property. The name is constant across cultures and is intended as an id other systems can use.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.LabeledProperty.Label">
            <summary>
            The label the user should see.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.LabeledProperty.Value">
            <summary>
            The value of the property
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.IDragAndDropElementProvider">
            <summary>
            You can implement this interface on your 
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementProvider.IDragAndDropElementProvider.OnElementDraggedAndDropped(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.EntityToken,System.Int32,Composite.C1Console.Elements.Plugins.ElementProvider.DragAndDropType,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <summary>
            Invoked when an element is dropped
            </summary>
            <param name="draggedEntityToken">The <see cref="T:Composite.C1Console.Security.EntityToken"/> of the element being dragged</param>
            <param name="newParentEntityToken">The <see cref="T:Composite.C1Console.Security.EntityToken"/> of the element receiving the dragged item</param>
            <param name="dropIndex">The index (position) the element was dropped</param>
            <param name="dragAndDropType">The type identifying the drang and drop action</param>
            <param name="draggedElementFlowControllerServicesContainer">handle that let you communicate to client via services (like popping a dialog)</param>
            <returns>True is action completed as expected and tree should be updated on the client</returns>
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.DragAndDropType">
            <summary>
            Specifies the kind of action that should happen on drop
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.Plugins.ElementProvider.DragAndDropType.Move">
            <summary>
            The element is moved
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.Plugins.ElementProvider.DragAndDropType.Copy">
            <summary>
            The element is copied
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.SeachTokenExtensionMethods.IsValidKeyword(Composite.C1Console.Elements.SearchToken)">
            <summary>
            This method return true if the searchToken is NOT null and the keyword is NOT null or empty
            </summary>
            <param name="searchToken"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Extensions.StringExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.FormatWith(System.String,System.Object[])">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.IsNullOrEmpty(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.StartsWith(System.String,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.EndsWith(System.String,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.IsCorrectNamespace(System.String,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.CreateNamespace(System.String,System.String,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.CreateNamespace(System.String,System.String)">
            <summary>
            Default separator is '.'
            </summary>
            <param name="namespaceName"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.GetNameFromNamespace(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.GetNamespace(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.IsCorrectFolderName(System.String,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.IsDirectChildOf(System.String,System.String,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.IsParentOf(System.String,System.String,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.GetFolderName(System.String,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.GetNameWithoutExtension(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.GetDirectory(System.String,System.Char)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.Combine(System.String,System.String,System.Char)">
            <summary>
            Combines URL paths using / as seperator
            </summary>
            <param name="path"></param>
            <param name="otherPath"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Extensions.StringExtensionMethods.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replaces old value with new value using the specified string comparison method for searching for the oldValue.
            </summary>
            <param name="str">The string.</param>
            <param name="oldValue">The old subsvalue.</param>
            <param name="newValue">The new value.</param>
            <param name="comparison">The comparison.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextEditorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextEditorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextEditorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextEditorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextEditorTemplateUserControlBase.Text">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextEditorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextEditorTemplateUserControlBase.MimeType">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeFieldDesignerTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeFieldDesignerTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeFieldDesignerTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeFieldDesignerTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeFieldDesignerTemplateUserControlBase.Fields">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeFieldDesignerTemplateUserControlBase.LabelFieldName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeFieldDesignerTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.FunctionCallsDesignerTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.FunctionCallsDesignerTemplateUserControlBase.SessionStateProvider">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.FunctionCallsDesignerTemplateUserControlBase.SessionStateId">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.FunctionParameterDesignerTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.FunctionParameterDesignerTemplateUserControlBase.SessionStateProvider">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.FunctionParameterDesignerTemplateUserControlBase.SessionStateId">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceSelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceSelectorTemplateUserControlBase.Selected">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.DataReferenceSelectorTemplateUserControlBase.DataType">
            <exclude />
        </member>
        <member name="F:Composite.Functions.Foundation.MetaFunctionContainer.FunctionTypesToReturn.StaticDependentFunctions">
            <summary>
            Only functions that DOES NOT relay on dynamic types may be returned
            IFunctionProvider.Functions
            </summary>
        </member>
        <member name="F:Composite.Functions.Foundation.MetaFunctionContainer.FunctionTypesToReturn.DynamicDependentOnlyFunctions">
            <summary>
            Only functions that DOES relay on dynamic types may be return
            IDynamicTypeFunctionProvider.DynamicTypeDependentFunctions
            </summary>
        </member>
        <member name="F:Composite.Functions.Foundation.MetaFunctionContainer.FunctionTypesToReturn.AllFunctions">
            <summary>
            All functions may be returned
            IFunctionProvider.Functions 
            AND
            IDynamicTypeFunctionProvider.DynamicTypeDependentFunctions
            </summary>
        </member>
        <member name="T:Composite.Functions.IFunctionResultToXEmbedableMapper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.IFunctionResultToXEmbedableMapper.TryMakeXEmbedable(Composite.Functions.FunctionContextContainer,System.Object,System.Xml.Linq.XNode@)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IParameter">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.OwnerId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.ParameterId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.Label">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.HelpText">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.Position">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.TypeManagerName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.WidgetFunctionMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.DefaultValueFunctionMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IParameter.TestValueFunctionMarkup">
            <exclude />
        </member>
        <member name="T:Composite.Functions.ManagedParameters.ManagedParameterDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.ManagedParameters.ManagedParameterDefinition.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.Id">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.Name">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.Label">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.HelpText">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.Position">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.Type">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.WidgetFunctionMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.DefaultValueFunctionMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ManagedParameters.ManagedParameterDefinition.TestValueFunctionMarkup">
            <exclude />
        </member>
        <member name="T:Composite.Functions.ManagedParameters.ManagedParameterManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.ManagedParameters.ManagedParameterManager.Load(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ManagedParameters.ManagedParameterManager.Save(System.Guid,System.Collections.Generic.IEnumerable{Composite.Functions.ManagedParameters.ManagedParameterDefinition})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ManagedParameters.ManagedParameterManager.GetParameterProfiles(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ManagedParameters.ManagedParameterManager.GetParameterProfiles(System.Collections.Generic.IEnumerable{Composite.Functions.ManagedParameters.ManagedParameterDefinition})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ManagedParameters.ManagedParameterManager.GetParametersListForTest(System.Collections.Generic.IEnumerable{Composite.Functions.ManagedParameters.ManagedParameterDefinition})">
            <exclude />
        </member>
        <member name="T:Composite.Functions.NamedFunctionCall">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.NamedFunctionCall.#ctor(System.String,Composite.Functions.BaseFunctionRuntimeTreeNode)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.NamedFunctionCall.Name">
            <exclude />
        </member>
        <member name="P:Composite.Functions.NamedFunctionCall.FunctionCall">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.FunctionProvider.FunctionNotifier">
            <summary>
            A function provider can use this class to notify if the providers list of functions
            has been changed.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.Plugins.FunctionProvider.FunctionNotifier.FunctionsUpdated">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.WidgetFunctionProvider.WidgetFunctionNotifier">
            <summary>
            A widget function provider can use this class to notify if the providers list of functions
            has been changed.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.Plugins.WidgetFunctionProvider.WidgetFunctionNotifier.WidgetFunctionsUpdated">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IMediaFileFolder">
            <summary>    
            This data interface represents a media folder in Composite C1. This can be used to query media folders through a <see cref="T:Composite.Data.DataConnection"/>. 
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.KeyPath">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.CompositePath">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.StoreId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.Path">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileFolder.IsReadOnly">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IMediaFileFolderUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IMediaFileFolderUtils.CreateFolderPath(Composite.Data.Types.IMediaFileFolder,System.String)">
            <summary>
            Creates a folder path given folder path and the name of the folder
            </summary>
            <param name="parentMediaFolder"></param>
            <param name="folderName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Types.IMediaFileFolderUtils.CreateFolderPath(System.String,System.String)">
            <summary>
            Creates a folder path given folder path and the name of the folder
            </summary>
            <param name="parentFolderPath"></param>
            <param name="folderName"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Types.IMediaFileFolderUtils.GetParentFolderPath(Composite.Data.Types.IMediaFileFolder)">
            <summary>
            Returns the parent folder for the given media folder
            </summary>
            <param name="mediaFileFolder"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Types.IMediaFileFolderUtils.GetParentFolderPath(System.String)">
            <summary>
            Returns the parent folder for the given media folder path
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Types.IMediaFileFolderUtils.DoesFolderExists(Composite.Data.Types.IMediaFileFolder)">
            <summary>
            Returns true if the given media folder exists
            </summary>
            <param name="mediaFileFolder"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Types.IMediaFileFolderUtils.DoesFolderExists(System.String)">
            <summary>
            Returns true if the given media folder path exists
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Types.IMediaFileFolderUtils.DoesParentFolderExists(Composite.Data.Types.IMediaFileFolder)">
            <summary>
            Returns true if the given media folders parent folder exists
            </summary>
            <param name="mediaFileFolder"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.Types.IMediaFileStore">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileStore.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileStore.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileStore.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileStore.IsReadOnly">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileStore.ProvidesMetadata">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.FileUploadTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.FileUploadTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.FileUploadTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.FileUploadTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.FileUploadTemplateUserControlBase.UploadedFile">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.FileUploadTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedFileUploadUiControl.BindStateToControlProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedFileUploadUiControl.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedFileUploadUiControl.BuildWebControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedFileUploadUiControl.IsFullWidthControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedFileUploadUiControl.ClientName">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XhtmlDocument">
            <summary>
            Represents an XHTML Document inside Composite C1. 
            
            This structure can contain both head elements and body elements (content) and XhtmlDocuments that are being rendered
            can be nested within each other. The Composite C1 core will normalize such a nested structure when rendering a page, ensuring head elementsa flow to the top level
            document and body content is left, ultimately yielding one complete and correctly structured xhtml page.
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XhtmlDocument.#ctor">
            <summary>
            Constructs an empty XhtmlDocument
            </summary>
        </member>
        <member name="M:Composite.Core.Xml.XhtmlDocument.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Constructs a XhtmlDocument based on an existing html element
            </summary>
            <param name="htmlElement">Existing html element the XhtmlDocument should be cloned from</param>
        </member>
        <member name="M:Composite.Core.Xml.XhtmlDocument.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            Constructs a XhtmlDocument based on an existing XDocument
            </summary>
            <param name="other">Existing XDocument instance the XhtmlDocument should be cloned from</param>
        </member>
        <member name="M:Composite.Core.Xml.XhtmlDocument.Parse(System.String)">
            <summary>
            Parses a serialized xhtml document and returns XhtmlDocument.
            </summary>
            <param name="xhtml">xhtml to parse.</param>
            <returns>XhtmlDocument representing the supplied string</returns>
        </member>
        <member name="M:Composite.Core.Xml.XhtmlDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
            <summary>
            Parses a serialized xhtml document and returns XhtmlDocument.
            </summary>
            <param name="xhtml">xhtml to parse.</param>
            <param name="options">This parameter is here for informative purposes - only LoadOptions.None is accepted, since anything else is a change to the DOM and a breeding ground for bugs</param>
            <returns>XhtmlDocument representing the supplied string</returns>
        </member>
        <member name="P:Composite.Core.Xml.XhtmlDocument.Head">
            <summary>
            The head element for the XHTML Document
            </summary>
        </member>
        <member name="P:Composite.Core.Xml.XhtmlDocument.Body">
            <summary>
            The body element for the XHTML Document
            </summary>
        </member>
        <member name="P:Composite.Core.Xml.XhtmlDocument.IsEmpty">
            <summary>
            Returns true if the XhtmlDocument has empty head and body sections.
            </summary>
        </member>
        <member name="T:Composite.Core.Instrumentation.TimerProfiler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.TimerProfiler.Dispose">
            <exclude />
        </member>
        <member name="T:Composite.Core.Instrumentation.TimerProfilerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.TimerProfilerFacade.CreateTimerProfiler">
            <exclude />
        </member>
        <member name="M:Composite.Core.Instrumentation.TimerProfilerFacade.CreateTimerProfiler(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.IO.MimeTypeInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.MimeTypeInfo.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.MimeTypeInfo.GetCanonical(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.MimeTypeInfo.GetResourceHandleFromMimeType(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.MimeTypeInfo.GetCanonicalFromExtension(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.MimeTypeInfo.GetMimeType(Composite.C1Console.Forms.CoreUiControls.UploadedFile)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.MimeTypeInfo.IsTextFile(System.String)">
            <summary>
            Indicates whether a file of a specific MIME type can be edited with a text editor
            </summary>
            <param name="mimeType"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.MimeTypeInfo.IsIisServable(System.String)">
            <summary>
            Indicates whether a file of a specific extension is expected to be allowed by IIS
            </summary>
            <param name="extension">The extension.</param>
            <returns>
              <c>true</c> if the extension is 'IIS servable'; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Jpeg">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Default">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Gif">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Bmp">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Png">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Tiff">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Css">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Js">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Xml">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Text">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Html">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Flash">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.QuickTime">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Wmv">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Asf">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Avi">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Flv">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Director">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.CSharp">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.CsHtml">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Ascx">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Aspx">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Ashx">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.Resx">
            <exclude />
        </member>
        <member name="P:Composite.Core.IO.MimeTypeInfo.MasterPage">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.ActionExecutorAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ActionExecutorAttribute.#ctor(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.ActionExecutorAttribute.ActionExecutorType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.ActionExecutorFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ActionExecutorFacade.Execute(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ActionExecutorFacade.Execute(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken,Composite.C1Console.Actions.FlowControllerServicesContainer,Composite.C1Console.Tasks.TaskManagerEvent)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ActionExecutorFacade.ExecuteEntityTokenLocked(Composite.C1Console.Security.ActionToken,Composite.C1Console.Security.EntityToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.ActionExecutorFacade.ExecuteSecurityViolation(Composite.C1Console.Security.ActionToken,Composite.C1Console.Security.EntityToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.ActionResult">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.ActionResult.ResponseType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.ActionResult.Url">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.ActionResultResponseType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Actions.ActionResultResponseType.None">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Actions.ActionResultResponseType.OpenDocument">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Actions.ActionResultResponseType.OpenModalDialog">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.FlowControllerFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.Initialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.GetCurrentUiDefinition(Composite.C1Console.Actions.FlowToken,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.CancelFlow(Composite.C1Console.Actions.FlowToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.CancelFlowsByConsoleId(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.GetFlowTokensByUsername(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.GetConsoleIdsByUsername(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.FlowComplete(Composite.C1Console.Actions.FlowToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerFacade.Scavenge">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.FlowControllerServicesContainer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerServicesContainer.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerServicesContainer.#ctor(Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerServicesContainer.AddService(Composite.C1Console.Actions.IFlowControllerService)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerServicesContainer.RemoveService(Composite.C1Console.Actions.IFlowControllerService)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerServicesContainer.GetService``1">
            <summary>
            <para>Returns a concrete service interface, if available. Sample service interfaces are:</para>
            <para> - Composite.C1Console.Events.IManagementConsoleMessageService</para>
            <para> - Composite.C1Console.Actions.IActionExecutionService</para>
            <para> - Composite.C1Console.Forms.Flows.IFormFlowRenderingService</para>
            <para> - Composite.C1Console.Actions.IElementInformationService</para>
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Actions.FlowControllerServicesContainer.GetService(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.FlowHandle">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowHandle.#ctor(Composite.C1Console.Actions.FlowToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowHandle.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowHandle.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowHandle.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.FlowHandle.FlowToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Actions.FlowToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Actions.FlowToken.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.IFlowController.ServicesContainer">
            <summary>
            Set by the the system (mediator)
            </summary>
        </member>
        <member name="T:Composite.C1Console.Actions.IFlowUiContainerType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.IFlowUiContainerType.ContainerName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.IFlowUiContainerType.ActionResultResponseType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.Plugins.DataActionProvider.IDataActionProvider.Context">
            <summary>
            This property will be called by the system. 
            The provider can use the DataActionProviderContext for creating DataActionSourceId's
            </summary>
        </member>
        <member name="T:Composite.C1Console.Actions.StandardUiContainerTypes">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.StandardUiContainerTypes.Document">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.StandardUiContainerTypes.EmptyDocument">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.StandardUiContainerTypes.Wizard">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.StandardUiContainerTypes.DataDialog">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.StandardUiContainerTypes.ConfirmDialog">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.StandardUiContainerTypes.WarningDialog">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Actions.StandardUiContainerTypes.Null">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.CloseViewMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.CloseViewMessageQueueItem.ViewId">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.ConsoleMessageQueueFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleMessageQueueFacade.Enqueue(Composite.C1Console.Events.IConsoleMessageQueueItem,System.String)">
            <summary>
            
            </summary>
            <param name="consoleMessageQueueItem"></param>
            <param name="receiverConsoleId">null or empty string is a broardcast</param>
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleMessageQueueFacade.GetQueueElements(System.Int32,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleMessageQueueFacade.GetLatestMessageNumber(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.ConsoleMessageQueueFacade.DoDebugSerializationToFileSystem">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.ConsoleMessageQueueFacade.CurrentChangeNumber">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.DialogType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.DialogType.Message">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.DialogType.Question">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.DialogType.Warning">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.DialogType.Error">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.Foundation.ConsoleMessageQueue.Enqueue(Composite.C1Console.Events.IConsoleMessageQueueItem,System.String)">
            <summary>
            
            </summary>
            <param name="queueItem"></param>
            <param name="receiverConsoleId">null or empty string is a broardcast</param>        
        </member>
        <member name="T:Composite.C1Console.Events.Foundation.ConsoleMessageQueueElement">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.Foundation.ConsoleMessageQueueElement.ReceiverConsoleId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.Foundation.ConsoleMessageQueueElement.QueueItemNumber">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.Foundation.ConsoleMessageQueueElement.EnqueueTime">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.Foundation.ConsoleMessageQueueElement.QueueItem">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.IManagementConsoleMessageService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.CloseCurrentView">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.RefreshTreeSection(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.ShowMessage(Composite.C1Console.Events.DialogType,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.ShowGlobalMessage(Composite.C1Console.Events.DialogType,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.ShowLogEntry(System.Type,System.Exception)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.ShowLogEntry(System.Type,Composite.Core.Logging.LogLevel,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.RebootConsole">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.CollapseAndRefresh">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.LockSystem">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.BroadcastMessage(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.SaveStatus(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.BindEntityTokenToView(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.IManagementConsoleMessageService.SelectElement(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.IManagementConsoleMessageService.HasView">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.IManagementConsoleMessageService.CloseCurrentViewRequested">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.IManagementConsoleMessageService.CurrentConsoleId">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.LogEntryMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.LogEntryMessageQueueItem.Sender">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.LogEntryMessageQueueItem.Level">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.LogEntryMessageQueueItem.Message">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.MessageBoxMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.MessageBoxMessageQueueItem.Title">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.MessageBoxMessageQueueItem.Message">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.MessageBoxMessageQueueItem.DialogType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.OpenViewMessageQueueItem">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.OpenViewMessageQueueItem.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.ViewId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.FlowHandle">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.Url">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.UrlPostArguments">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.ViewType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.Label">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.OpenViewMessageQueueItem.IconResourceHandle">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.RefreshTreeMessageQueueItemSerializerHandler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.RefreshTreeMessageQueueItemSerializerHandler.Serialize(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.RefreshTreeMessageQueueItemSerializerHandler.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.RefreshTreeMessageQueueItem">
            <summary>    
            Refreshed children of the elements with the specified entity token
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.RefreshTreeMessageQueueItem.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Events.RefreshTreeMessageQueueItem.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.ViewType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.ViewType.Main">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.ViewType.ModalDialog">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.ViewType.RightTop">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.ViewType.RightBottom">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.ViewType.BottomLeft">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.ViewType.BottomRight">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Events.ViewType.External">
            <exclude />
        </member>
        <member name="T:Composite.Data.BuildNewHandlerAttribute">
            <summary>  
            This attribute is used to override the default behavior when creating new data items.
            See <see cref="T:Composite.Data.IBuildNewHandler"/> for mor information on this subject.
            </summary>
        </member>
        <member name="M:Composite.Data.BuildNewHandlerAttribute.#ctor(System.Type)">
            <summary>
            Creates a new BuildNewHandlerAttribute
            </summary>
            <param name="buildNewHandlerType">This should be a type that inherits <see cref="T:Composite.Data.IBuildNewHandler"/></param>
        </member>
        <member name="P:Composite.Data.BuildNewHandlerAttribute.BuildNewHandlerType">
            <summary>
            The build handle type that inherits <see cref="T:Composite.Data.IBuildNewHandler"/>
            </summary>
        </member>
        <member name="T:Composite.Data.DataEntityToken">
            <summary>
            EntityToken that represents a C1 Data item. EntityToken is used through out Composite C1 to describe artifacts that can have security settings and be navigated and this class make it easy
            to move between data items and EntityToken.
            </summary>
        </member>
        <member name="M:Composite.Data.DataEntityToken.IsValid">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEntityToken.OnGetPrettyHtml(Composite.C1Console.Security.EntityTokenHtmlPrettyfier)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataEntityToken.InterfaceType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataEntityToken.DataSourceId">
            <summary>
            The <see cref="T:Composite.Data.DataSourceId"/> for the data object. 
            </summary>
        </member>
        <member name="P:Composite.Data.DataEntityToken.Data">
            <summary>
            Retrieve the data object. Cast this to the expected IData interface to access the data fields.
            </summary>
        </member>
        <member name="T:Composite.Data.DataEntityTokenExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEntityTokenExtensions.GetDataEntityToken(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataMoveEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.DataMoveEventArgs.TargetDataScopeIdentifier">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataEventSystemFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeAdd``1(Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeAdd``1(Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeAdd(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeAdd(System.Type,Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.UnsubscribeToDataBeforeAdd(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterAdd(System.Type,Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterAdd(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterAdd``1(Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterAdd``1(Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToStoreChanged(System.Type,Composite.Data.StoreEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToStoreChanged``1(Composite.Data.StoreEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.UnsubscribeToDataAfterAdd(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.UnsubscribeToStoreChanged(System.Type,Composite.Data.StoreEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeUpdate(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeUpdate(System.Type,Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeUpdate``1(Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataBeforeUpdate``1(Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.UnsubscribeToDataBeforeUpdate(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterUpdate(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterUpdate(System.Type,Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterUpdate``1(Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterUpdate``1(Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.UnsubscribeToDataAfterUpdate(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataDeleted(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataDeleted(System.Type,Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataDeleted``1(Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataDeleted``1(Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.UnsubscribeToDataDeleted(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterBuildNew(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterBuildNew(System.Type,Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterBuildNew``1(Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SubscribeToDataAfterBuildNew``1(Composite.Data.DataEventHandler,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.UnsubscribeToDataAfterBuildNew(System.Type,Composite.Data.DataEventHandler)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.FireExternalStoreChangedEvent(System.Type,Composite.Data.PublicationScope,System.Globalization.CultureInfo)">
            <summary>
            Fire this when an external store has changed outside the process to notify subscribers to the StoreChangeEvent.  
            </summary>
            <param name="dataType"></param>
            <param name="publicationScope"></param>
            <param name="locale"></param>
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.FireStoreChangedEvent(System.Type,Composite.Data.IData)">
            <summary>
            Follow up event for intally fired events
            </summary>
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.FireStoreChangedEvent(System.Type,Composite.Data.PublicationScope,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Call this indirectly. Use FireStoreChangedEvent or FireExternalStoreChangedEvent above.
            </summary>
        </member>
        <member name="P:Composite.Data.DataEventSystemFacade.SuppressEvents">
            <exclude />
        </member>
        <member name="T:Composite.Data.DataEventSystemFacade.DataAfterMoveDelegate">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataEventSystemFacade.SuppressEventScope.Counter(System.Int32)">
            <summary>
            Adds a value to counter, and  returns result value.
            </summary>
            <param name="incrementValue">Value to be added.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.Foundation.DataProviderRegistry">
            <summary>
            This should only be used intern in the Composite.Data namespace!
            </summary>
        </member>
        <member name="M:Composite.Data.Foundation.DataProviderRegistry.AddNewDataType(System.Type,System.String,System.Boolean)">
            <summary>
            This method adds a new supported data type to the registry.
            This should be used if a data provider has extended the
            number of supported interfaces at runtime.
            </summary>
            <param name="interaceType"></param>
            <param name="providerName"></param>
            <param name="isWritableProvider"></param>
        </member>
        <member name="P:Composite.Data.Foundation.DataProviderRegistry.AllKnownInterfaces">
            <summary>
            This will include currently non-supported interfaces.
            That is, interfaces that exists, but for some reason
            does nok work as a data type.
            </summary>
        </member>
        <member name="T:Composite.Data.DataSourceId">
            <summary>    
            Uniquely identify a data element (table record in sql speak), its type and what provider it came from.
            </summary>
        </member>
        <member name="M:Composite.Data.DataSourceId.#ctor(Composite.Data.IDataId,System.String,System.Type)">
            <summary>
            This is for internal use only!
            </summary>
        </member>
        <member name="M:Composite.Data.DataSourceId.#ctor(Composite.Data.IDataId,System.String,System.Type,Composite.Data.DataScopeIdentifier,System.Globalization.CultureInfo)">
            <summary>
            This is for internal use only!
            </summary>
        </member>
        <member name="M:Composite.Data.DataSourceId.#ctor(System.Type)">
            <summary>
            This is for internal use only!
            </summary>
        </member>
        <member name="M:Composite.Data.DataSourceId.Serialize">
            <summary>
            Serialize to string
            </summary>
            <returns>Serialized as string</returns>
        </member>
        <member name="M:Composite.Data.DataSourceId.Deserialize(System.String)">
            <summary>
            Recreate a DataSourceId based on a serialized string representation of it.
            </summary>
            <param name="serializedDataSourceId">A serialized DataSourceId</param>
            <returns>The DataSourceId deserialized</returns>
        </member>
        <member name="M:Composite.Data.DataSourceId.TryDeserialize(System.String,Composite.Data.DataSourceId@)">
            <summary>
            Tries to deserialize a string as a DataSourceId.
            </summary>
            <param name="serializedDataSourceId">A serialized DataSourceId</param>
            <param name="dataSourceId">DataSourceId reference to set, if deserialization succeeded</param>
            <returns>True if the deserialization succeeded, otherwise false</returns>
        </member>
        <member name="M:Composite.Data.DataSourceId.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataSourceId.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataSourceId.Equals(Composite.Data.DataSourceId)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DataSourceId.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Data.DataSourceId.DataId">
            <summary>
            Object which the data provider can use to uniquely identify the 'table record' in its own store matching a data element. 
            </summary>
        </member>
        <member name="P:Composite.Data.DataSourceId.ProviderName">
            <summary>
            Name of the data provider responsible for the data element.
            </summary>
        </member>
        <member name="P:Composite.Data.DataSourceId.InterfaceType">
            <summary>
            The interface used for the data element. This is expected to be inpmelenting IData.
            </summary>
        </member>
        <member name="P:Composite.Data.DataSourceId.DataScopeIdentifier">
            <summary>
            The data scope (language and published/unpublished) from which the data element originate.
            </summary>
        </member>
        <member name="P:Composite.Data.DataSourceId.PublicationScope">
            <summary>
            The publication scope (published or unpublished) from which the data element originate.
            </summary>
        </member>
        <member name="P:Composite.Data.DataSourceId.LocaleScope">
            <summary>
            The language from which the data element originate.
            </summary>
        </member>
        <member name="P:Composite.Data.DataSourceId.ExistsInStore">
            <summary>
            True when the data element represents a physically stored element
            </summary>
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataFieldDescriptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.#ctor(System.Guid,System.String,Composite.Data.DynamicTypes.StoreFieldType,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.#ctor(System.Guid,System.String,Composite.Data.DynamicTypes.StoreFieldType,System.Type,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.Clone">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.ToXml">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.FromXml(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.Equals(Composite.Data.DynamicTypes.DataFieldDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptor.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.Position">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.GroupByPriority">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.FormRenderingProfile">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.TreeOrderingProfile">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.ForeignKeyReferenceTypeName">
            <summary>
            Specify the TypeManager type name for the type this field references. Null if this is not a reference field.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.InstanceType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.StoreType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.DefaultValue">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.IsNullable">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.Inherited">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.IsReadOnly">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.ValidationFunctionMarkup">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptor.NewInstanceDefaultFieldValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataFieldDescriptorCollection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.Add(Composite.Data.DynamicTypes.DataFieldDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.Insert(System.Int32,Composite.Data.DynamicTypes.DataFieldDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.Remove(Composite.Data.DynamicTypes.DataFieldDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.Contains(Composite.Data.DynamicTypes.DataFieldDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.GetEnumerator">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.Count">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.Item(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldDescriptorCollection.Item(System.Guid)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataFieldNameCollection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldNameCollection.Add(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldNameCollection.Add(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldNameCollection.Remove(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldNameCollection.Clear">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldNameCollection.Contains(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldNameCollection.GetEnumerator">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataFieldNameCollection.System#Collections#IEnumerable#GetEnumerator">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldNameCollection.Count">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataFieldNameCollection.Item(System.Int32)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeChangeDescriptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.#ctor(Composite.Data.DynamicTypes.DataTypeDescriptor,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.AlteredTypeHasChanges">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.OriginalType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.AlteredType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.OriginalTypeDataExists">
            <summary>
            True when the system contains data of the original type. Allowable schema changes can be limited when data exists.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.DeletedFields">
            <summary>
            Returns original fields that are no longer part of the altered type.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.AddedFields">
            <summary>
            Returns added fields that were not part of the original type.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.ExistingFields">
            <summary>
            Returns fields that exists in both the original and altered type. Fields may have changed name or type.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.DeletedDataScopes">
            <summary>
            Returns original DataScopes that are no longer part of the altered type.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.AddedDataScopes">
            <summary>
            Returns new DataScopes that was not part of the original type.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.ExistingDataScopes">
            <summary>
            Returns new DataScopes that was not part of the original type.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.DeletedKeyFields">
            <summary>
            Returns original key fields that are not part of the altered types key. Fields may have been deleted or demoted to normal fields.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.AddedKeyFields">
            <summary>
            Returns added key fields that were not part of the original types key. Fields may be new or promoted from normal fields.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.KeyFieldsOrderChanged">
            <summary>
            Returns true if order of key properties have been changed
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.ExistingKeyFields">
            <summary>
            Returns key fields that exists in both the original and altered type. Fields may have changed name or type.
            </summary>
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.ExistingFieldInfo">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.ExistingFieldInfo.OriginalField">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.ExistingFieldInfo.AlteredField">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeChangeDescriptor.ExistingFieldInfo.AlteredFieldHasChanges">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeDescriptor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.#ctor(System.Guid,System.String,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.#ctor(System.Guid,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.#ctor(System.Guid,System.String,System.String,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.GetInterfaceType">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.AddSuperInterface(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.RemoveSuperInterface(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.Clone">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.ToXml">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.FromXml(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.Equals(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptor.ToString">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.DataTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.KeyPropertyNames">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.TypeManagerTypeName">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.StoreSortOrderFieldNames">
            <summary>
            A list of field names that the provider should use when physically storing data. 
            Select ordering is not (necessarily) influenced by this setting.
            </summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.Fields">
            <summary>The fields (aka properties or columns) of the type.</summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.Name">
            <summary>The short name of the type, without namespace and assembly info</summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.LabelFieldName">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.IsCodeGenerated">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.Cachable">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.HasCustomPhysicalSortOrder">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.DataScopes">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.Localizeable">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.BuildNewHandlerTypeName">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.SuperInterfaces">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.DataAssociations">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.IsPageFolderDataType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DataTypeDescriptor.IsPageMetaDataType">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DataTypeDescriptorExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorExtensions.GetFullInterfaceName(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            This method returns the full interface name with out assembly name
            and other C1 specific prefixes like DynamicType:
            </summary>
            <param name="dataTypeDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.DynamicTypes.DataTypeDescriptorExtensions.ValidateRuntimeType(Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            This method will return false if the type is not code generated and does exists
            </summary>
            <param name="dataTypeDescriptor"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.DynamicTypes.DefaultValue">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.String(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.Integer(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.Decimal(System.Decimal)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.Boolean(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.DateTime(System.DateTime)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.Guid(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.Clone">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DefaultValue.CompareTo(System.Object)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DefaultValue.Now">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DefaultValue.NewGuid">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DefaultValue.Value">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.DefaultValue.ValueType">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DefaultValueType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.DateTimeNow">
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.String">
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.Integer">
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.Decimal">
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.Boolean">
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.DateTime">
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.Guid">
            <exclude />
        </member>
        <member name="F:Composite.Data.DynamicTypes.DefaultValueType.NewGuid">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.DynamicTypeManagerImpl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.BuildNewDataTypeDescriptor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.TryGetDataTypeDescriptor(System.Guid,Composite.Data.DynamicTypes.DataTypeDescriptor@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.UpdateDataTypeDescriptor(Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.CreateStore(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.AlterStore(Composite.Data.DynamicTypes.UpdateDataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.DropStore(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.AddLocale(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.DynamicTypeManagerImpl.RemoveLocale(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.Foundation.ReflectionBasedDescriptorBuilder">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.Foundation.ReflectionBasedDescriptorBuilder.Build(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.NameValidation">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.NameValidation.ValidateNamespace(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.NameValidation.TryValidateNamespace(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.NameValidation.TryValidateNamespace(System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.NameValidation.ValidateName(System.String)">
            <summary>
            Returns the name if all characters are valid in a type and field name. Invalid characters generate an exception.
            </summary>
            <param name="name">The name to validate</param>
            <returns>The name that was validated</returns>
        </member>
        <member name="M:Composite.Data.DynamicTypes.NameValidation.TryValidateName(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.NameValidation.TryValidateName(System.String,System.String@)">
            <exclude />
        </member>
        <member name="T:Composite.Data.DynamicTypes.StoreFieldType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.StoreFieldType.String(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.StoreFieldType.Decimal(System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.StoreFieldType.IsConvertibleTo(Composite.Data.DynamicTypes.StoreFieldType)">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.StoreFieldType.ToString">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.StoreFieldType.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Data.DynamicTypes.StoreFieldType.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.StringMaximumLength">
            <summary>The maximum number of characters allowed in a string (2048). For larger strings use the LargeString type.</summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.NumericPrecisionMaximum">
            <summary>The maximum number of digits a decimal may contain (28).</summary>
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.Integer">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.Long">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.DateTime">
            <exclude />        
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.LargeString">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.Boolean">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.Guid">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.PhysicalStoreType">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.IsString">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.IsLargeString">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.IsDecimal">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.IsDateTime">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.IsGuid">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.IsNumeric">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.IsBoolean">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.MaximumLength">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.NumericPrecision">
            <exclude />
        </member>
        <member name="P:Composite.Data.DynamicTypes.StoreFieldType.NumericScale">
            <exclude />
        </member>
        <member name="T:Composite.Data.Foundation.CodeGeneration.EmptyDataClassBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Foundation.CodeGeneration.EmptyDataClassBase.DataSourceId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Foundation.CodeGeneration.EmptyDataClassBase._InterfaceType">
            <exclude />
        </member>
        <member name="M:Composite.Data.Foundation.PluginFacades.DataProviderPluginFacade.AllowsResultsWrapping(System.String)">
            <summary>
            Indicates whether it has sense to cache the query results.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.Data.Hierarchy.DataAncestorProviders.NoAncestorDataAncestorProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Hierarchy.DataAncestorProviders.NoAncestorDataAncestorProvider.GetParent(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="T:Composite.Data.IBuildNewHandler">
            <summary>
            This interface is used togehter with the attribute <see cref="T:Composite.Data.BuildNewHandlerAttribute"/>.
            It is possible to overwrite the default behavior when a new data item is created through the method <see cref="M:Composite.Data.DataConnection.New``1"/>
            To do this, you have to implement this interface and attach it to your <see cref="T:Composite.Data.IData"/> type by using the attribute <see cref="T:Composite.Data.BuildNewHandlerAttribute"/>
            <example>
            <code>
            [BuildNewHandlerAttribute(typeof(MyBuildNewHandler))
            [AutoUpdateble]
            [KeyPropertyName("Id")]
            [DataAncestorProvider(typeof(NoAncestorDataAncestorProvider))]
            [ImmutableTypeId("{10D6CA29-5B01-45EE-9405-9B027F4C949C}")]    
            interface IMyDataType : IData
            {
                [StoreFieldType(PhysicalStoreFieldType.Guid)]
                [ImmutableFieldId("{B99F4AF2-859D-4235-887B-E5A06BBB9892}")]
                Guid Id { get; set; }
                    
                [StoreFieldType(PhysicalStoreFieldType.String, 256)]
                [ImmutableFieldId("{A8127C77-5083-4409-9EA6-1E3BB696310D}")]
                string Name { get; set; }
            }
            
            class MyBuildNewHandler : IBuildNewHandler
            {
                public Type GetTypeToBuild(Type dataType)
                {
                    /* dataType will always be typeof(IMyDataType) */
                    
                    return typeof(MyDataType);
                }
            }
            
            
            class MyDataType : IMyDataType
            {
                puglic MyDataType()
                {
                    /* All new instances of IMyDataType will becrated through this constructor */
                    this.Id = Guid.NewGuid();
                    this.Name = "RandomName";
                }
                
                public Id { get; set; }
                
                public Name { get; set; }
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Composite.Data.IBuildNewHandler.GetTypeToBuild(System.Type)">
            <summary>
            The method should return a type with parameterless constructor that will be used to create a new <see cref="T:Composite.Data.IData"/> instance.
            The returned type is used by C1 to construct a new object when <see cref="M:Composite.Data.DataConnection.New``1"/> is called.
            </summary>
            <param name="dataType">
            The data interface type in question. This interface type is inheriting <see cref="T:Composite.Data.IData"/>.
            And the interface type is also decorated with the attribute <see cref="T:Composite.Data.BuildNewHandlerAttribute"/>.
            </param>
            <returns>Should return a type that will be used to create an object that implements the given <paramref name="dataType"/> interface.</returns>
        </member>
        <member name="T:Composite.Data.IDataId">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.ImmutableFieldIdAttribute">
            <summary>
            Assigns an immutable id to this property. The id must be unique and is used to identify the property even if 
            the name should change. The Dynamic Type system uses this value to detect data schema changes.
            </summary>
            <example> This sample shows how to use the ImmutableFieldId attribute:
            <code>
            // (IData attributes)
            interface IMyDataType : IData
            {
                [ImmutableFieldId("b3bada55-0e7e-4195-86e6-92770c381df4")]
                string Title { get; set; }
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.ImmutableFieldIdAttribute.#ctor(System.String)">
            <summary>
            Specify the immutable id of this data type. This value must be unique among types and should not change.
            </summary>
            <param name="immutableFieldId">Unique GUID string</param>
        </member>
        <member name="P:Composite.Data.ImmutableFieldIdAttribute.ImmutableFieldId">
            <exclude />
        </member>
        <member name="T:Composite.Data.ImmutableTypeIdAttribute">
            <summary>
            Assigns an immutable id to this type. The id must be unique and is used to identify the type even if 
            the type name, namespace or version should change. The Dynamic Type system uses this value to detect data schema changes.
            </summary>
            <example> This sample shows how to use the ImmutableTypeId attribute:
            <code>
            [ImmutableTypeId("b3bada55-0e7e-4195-86e6-92770c381df3")]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                // data type properties
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.ImmutableTypeIdAttribute.#ctor(System.String)">
            <summary>
            Specify the immutable id of this data type. This value must be unique among types and should not change.
            </summary>
            <param name="immutableTypeId">Unique GUID string</param>
        </member>
        <member name="P:Composite.Data.ImmutableTypeIdAttribute.ImmutableTypeId">
            <exclude />
        </member>
        <member name="T:Composite.Data.KeyPropertyNameAttribute">
            <summary>
            Add this attribute to your data interface to specify one or more primary key fields.
            </summary>
            <example> This sample shows how to use the KeyPropertyName attribute:
            <code>
            [KeyPropertyName("Id")]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                Guid Id { get; set; }
                
                // other data type properties
            }
            </code>
            
            This example shows how to specify a compound key:
            <code>
            [KeyPropertyName("FolderName")]
            [KeyPropertyName("FileName")]
            // (other IData attributes)
            interface IMyDataType : IData
            {
                string FolderName { get; set; }
                string FileName { get; set; }
                
                // other data type properties
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.KeyPropertyNameAttribute.#ctor(System.String)">
            <summary>
            Specify the name of a data property to be used as primary key.
            </summary>
            <param name="propertyName">Name of data property</param>
        </member>
        <member name="P:Composite.Data.KeyPropertyNameAttribute.KeyPropertyName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.Streams.FileSystemFileBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Plugins.DataProvider.Streams.FileSystemFileBase.CurrentWriteStream">
            <exclude />
        </member>
        <member name="P:Composite.Data.Plugins.DataProvider.Streams.FileSystemFileBase.SystemPath">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IFileEmptyDataClassBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileEmptyDataClassBase.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFileEmptyDataClassBase.CurrentWriteStream">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IFileEmptyDataClassBase._InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IFileEmptyDataClassFileStreamManager">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileEmptyDataClassFileStreamManager.GetReadStream(Composite.Data.Types.IFile)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileEmptyDataClassFileStreamManager.GetNewWriteStream(Composite.Data.Types.IFile)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileEmptyDataClassFileStreamManager.SubscribeOnFileChanged(Composite.Data.Types.IFile,Composite.Data.Streams.OnFileChangedDelegate)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Drawing.ImageTemplatedBoxCreator">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.#ctor(System.Drawing.Bitmap,System.Drawing.Point,System.Drawing.Point)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.SetTitle(System.String,System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.String,System.Single,System.Drawing.FontStyle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.SetWrappedText(System.String,System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.String,System.Single,System.Drawing.FontStyle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.SetTextLines(System.Collections.Generic.IEnumerable{System.String},System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.String,System.Single,System.Drawing.FontStyle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.SetIcon(System.Drawing.Bitmap,System.Drawing.Point,System.Drawing.Point)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.CreateBitmap">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.AdjustedWidth(System.Int32,System.Int32,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.MinWidth">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.MaxWidth">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.MinHeight">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.LinePadding">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Drawing.ImageTemplatedBoxCreator.SeparatorChar">
            <exclude />
        </member>
        <member name="T:Composite.Functions.ConstantObjectParameterRuntimeTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.ConstantObjectParameterRuntimeTreeNode.#ctor(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ConstantObjectParameterRuntimeTreeNode.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ConstantObjectParameterRuntimeTreeNode.GetAllSubFunctionNames">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ConstantObjectParameterRuntimeTreeNode.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ConstantObjectParameterRuntimeTreeNode.ContainsNestedFunctions">
            <exclude />
        </member>
        <member name="T:Composite.Functions.ConstantValueProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Functions.BaseValueProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseValueProvider.GetValue">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseValueProvider.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseValueProvider.GetValue``1(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.BaseValueProvider.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ConstantValueProvider.#ctor(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ConstantValueProvider.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ConstantValueProvider.Serialize">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Foundation.FunctionTreeConfigurationNames">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.NamespaceName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.ParamTagName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.ParamElementTagName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.FunctionTagName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.WidgetFunctionTagName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.HelpDefinitionTagName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.NameAttributeName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.ValueAttributeName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.LabelAttributeName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.BindingSourceNameAttributeName">
            <summary /> 
            <exclude />
        </member>
        <member name="P:Composite.Functions.Foundation.FunctionTreeConfigurationNames.HelpTextAttributeName">
            <summary /> 
            <exclude />
        </member>
        <member name="T:Composite.Functions.Foundation.PluginFacades.FunctionWrapper">
            <summary>
            This class is used for catching exceptions from plugins and handling them correctly
            </summary>
        </member>
        <member name="T:Composite.Functions.Foundation.PluginFacades.WidgetFunctionWrapper">
            <summary>
            This class is used for caching exceptions from plugins and hadling them correcty
            </summary>
        </member>
        <member name="T:Composite.Functions.FunctionContextContainer">
            <summary>    
            Used for passing parameters into nested function calls. Applicable in implementation of some of the xml template rendering logic.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionContextContainer.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionContextContainer.#ctor(Composite.Functions.ParameterList)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionContextContainer.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionContextContainer.#ctor(Composite.Functions.FunctionContextContainer,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionContextContainer.GetParameterValue(System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionContextContainer.MakeXEmbedable(System.Object)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.FunctionContextContainer.XEmbedableMapper">
            <exclude />
        </member>
        <member name="T:Composite.Functions.FunctionFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetFunction(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.TryGetFunction(Composite.Functions.IMetaFunction@,System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.TryGetFunction(Composite.Functions.IFunction@,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.TryGetWidgetFunction(Composite.Functions.IWidgetFunction@,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetWidgetFunction(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetFunctionsByProvider(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetFunctionNamesByProvider(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetFunctionNamesByType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetWidgetFunctionNamesByType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.FunctionExists(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.BuildTree(Composite.Functions.IFunction,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.BuildTree(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.Execute``1(Composite.Functions.IFunction,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.Execute``1(Composite.Functions.IFunction,System.Collections.Generic.IDictionary{System.String,System.Object},Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.Execute``1(Composite.Functions.IFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.Execute``1(Composite.Functions.IFunction,System.Collections.Specialized.NameValueCollection)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetWidgetMarkup(Composite.Functions.IWidgetFunction,System.Type,System.Collections.Generic.IEnumerable{Composite.Functions.BaseParameterRuntimeTreeNode},System.String,Composite.Functions.HelpDefinition,System.String,Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.BuildUniqueFunctionName(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionFacade.GetFunctionCompositionName(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.FunctionFacade.FunctionNames">
            <exclude />
        </member>
        <member name="P:Composite.Functions.FunctionFacade.WidgetFunctionNames">
            <exclude />
        </member>
        <member name="P:Composite.Functions.FunctionFacade.FunctionSupportedTypes">
            <exclude />
        </member>
        <member name="P:Composite.Functions.FunctionFacade.WidgetFunctionSupportedTypes">
            <exclude />
        </member>
        <member name="T:Composite.Functions.FunctionParameterRuntimeTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionParameterRuntimeTreeNode.#ctor(System.String,Composite.Functions.FunctionRuntimeTreeNode)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionParameterRuntimeTreeNode.GetHostedFunction">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionParameterRuntimeTreeNode.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionParameterRuntimeTreeNode.GetAllSubFunctionNames">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionParameterRuntimeTreeNode.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.Functions.FunctionParameterRuntimeTreeNode.ContainsNestedFunctions">
            <exclude />
        </member>
        <member name="T:Composite.Functions.FunctionRuntimeTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionRuntimeTreeNode.#ctor(Composite.Functions.IFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionRuntimeTreeNode.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionRuntimeTreeNode.GetAllSubFunctionNames">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionRuntimeTreeNode.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.Functions.FunctionRuntimeTreeNode.HostedFunction">
            <exclude />
        </member>
        <member name="T:Composite.Functions.FunctionTreeBuilder">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionTreeBuilder.Build(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionTreeBuilder.BuildFunction(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.FunctionTreeBuilder.BuildWidgetFunction(System.String,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Functions.HelpDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.HelpDefinition.GetLocalized">
            <exclude />
        </member>
        <member name="M:Composite.Functions.HelpDefinition.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.HelpDefinition.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Functions.HelpDefinition.Deserialize(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.HelpDefinition.HelpText">
            <exclude />
        </member>
        <member name="T:Composite.Functions.IMetaFunctionExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.IMetaFunctionExtensionMethods.CompositeName(Composite.Functions.IMetaFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.IMetaFunctionExtensionMethods.CompositeName(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.IMetaFunctionExtensionMethods.IsNamespaceCorrectFormat(Composite.Functions.IMetaFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.IMetaFunctionExtensionMethods.ValidateParameterProfiles(Composite.Functions.IMetaFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.IMetaFunctionExtensionMethods.DescriptionLocalized(Composite.Functions.IMetaFunction)">
            <exclude />
        </member>
        <member name="T:Composite.Functions.NoValueValueProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.NoValueValueProvider.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.NoValueValueProvider.Serialize">
            <exclude />
        </member>
        <member name="T:Composite.Functions.ParameterList">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterList.GetParameter``1(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterList.TryGetParameter``1(System.String,``0@)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterList.GetParameter(System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterList.GetParameter(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterList.TryGetParameterRuntimeTreeNode(System.String,Composite.Functions.BaseRuntimeTreeNode@)">
            <summary>
            Fetches the tree node object of a parameter, if available. In contrast to the TryGetValue() function
            this will give you the 'value definition' rather than the result of calling it.
            </summary>
            <param name="parameterName">Name of the parameter</param>
            <param name="runtimeTreeNode"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Functions.ParameterList.TryGetParameter(System.String,System.Object@)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterList.IsDefaultValue(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterList.AllParameterNames">
            <exclude />
        </member>
        <member name="T:Composite.Functions.ParameterProfile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterProfile.#ctor(System.String,System.Type,System.Boolean,Composite.Functions.BaseValueProvider,Composite.Functions.WidgetFunctionProvider,System.String,Composite.Functions.HelpDefinition)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.ParameterProfile.#ctor(System.String,System.Type,System.Boolean,Composite.Functions.BaseValueProvider,Composite.Functions.WidgetFunctionProvider,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,Composite.Functions.HelpDefinition)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.Name">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.Type">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.IsRequired">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.FallbackValueProvider">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.WidgetFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.WidgetFunctionParameters">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.Label">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.HelpDefinition">
            <exclude />
        </member>
        <member name="P:Composite.Functions.ParameterProfile.LabelLocalized">
            <exclude />
        </member>
        <member name="T:Composite.Functions.Plugins.WidgetFunctionProvider.WidgetFunctionProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Functions.StandardWidgetFunctions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetDefaultWidgetFunctionNameByType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetDefaultWidgetFunctionProviderByType(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetDataReferenceWidget(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetDataReferenceWidget``1">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetNullableDataReferenceWidget``1">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetImageSelectorWidget(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetMediaFileSelectorWidget(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.GetBoolSelectorWidget(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.BuildBasicFormsMarkup(System.Xml.Linq.XNamespace,System.String,System.String,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.BuildStaticCallPopulatedSelectorFormsMarkup(Composite.Functions.ParameterList,System.String,Composite.Functions.HelpDefinition,System.String,System.Type,System.String,System.Object,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.DropDownList(System.Type,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a WidgetFunctionProvider that yields a drop down list populated with options from a static method call. You can return anonymous types.
            </summary>
            <param name="optionsGeneratingStaticType">The type containing the static method to call</param>
            <param name="optionsGeneratingStaticMethodName">The name of the static method to call. The method should take no parameters and return an IEnumerable.</param>
            <param name="optionsObjectKeyPropertyName">The name of the property on the return item type to use as key in the drop down</param>
            <param name="optionsObjectLabelPropertyName">The name of the property on the return item type to use as label in the drop down</param>
            <param name="multiSelector"></param>
            <param name="required"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.DropDownList(System.Type,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a WidgetFunctionProvider that yields a drop down list populated with options from a static method call. You can return anonymous types.
            </summary>
            <param name="optionsGeneratingStaticType">The type containing the static method to call</param>
            <param name="optionsGeneratingStaticMethodName">The name of the static method to call. The method should take no parameters and return an IEnumerable.</param>
            <param name="optionsObjectKeyPropertyName">The name of the property on the return item type to use as key in the drop down</param>
            <param name="optionsObjectLabelPropertyName">The name of the property on the return item type to use as label in the drop down</param>
            <param name="multiSelector"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.DropDownList(System.Type,System.String,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.DropDownList(System.Type,System.String,System.Object,System.String,System.String,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.StandardWidgetFunctions.DropDownList(System.Type,System.String,System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.DateSelectorWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.DateTimeSelectorWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.TextBoxWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.GuidTextBoxWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.DataTypeSelectorWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.TextAreaWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.UrlComboBoxWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.VisualXhtmlDocumentEditorWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.IntegerTextBoxWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.DecimalTextBoxWidget">
            <exclude />
        </member>
        <member name="P:Composite.Functions.StandardWidgetFunctions.CheckBoxWidget">
            <exclude />
        </member>
        <member name="T:Composite.Functions.WidgetFunctionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionProvider.BuildNoWidgetProvider">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionProvider.#ctor(Composite.Functions.IWidgetFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionProvider.#ctor(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionProvider.WidgetFunctionCompositeName">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionProvider.WidgetFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionProvider.WidgetFunctionParameters">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionProvider.SerializedWidgetFunction">
            <exclude />
        </member>
        <member name="T:Composite.Functions.WidgetFunctionRuntimeTreeNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionRuntimeTreeNode.#ctor(Composite.Functions.IWidgetFunction)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionRuntimeTreeNode.#ctor(Composite.Functions.IWidgetFunction,System.Collections.Generic.List{Composite.Functions.BaseParameterRuntimeTreeNode})">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionRuntimeTreeNode.#ctor(Composite.Functions.IWidgetFunction,System.String,Composite.Functions.HelpDefinition,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionRuntimeTreeNode.GetWidgetFunction">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionRuntimeTreeNode.GetValue(Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionRuntimeTreeNode.GetAllSubFunctionNames">
            <exclude />
        </member>
        <member name="M:Composite.Functions.WidgetFunctionRuntimeTreeNode.Serialize">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionRuntimeTreeNode.Label">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionRuntimeTreeNode.HelpDefinition">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionRuntimeTreeNode.BindingSourceName">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionRuntimeTreeNode.HostedFunction">
            <exclude />
        </member>
        <member name="P:Composite.Functions.WidgetFunctionRuntimeTreeNode.ContainsNestedFunctions">
            <exclude />
        </member>
        <member name="T:Composite.Core.IO.DirectoryUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.DirectoryUtils.EnsurePath(System.String)">
            <summary>
            Ensures that the directories in the path exists and if they dont they will be created
            </summary>
        </member>
        <member name="M:Composite.Core.IO.DirectoryUtils.EnsureDirectoryExists(System.String)">
            <summary>
            Ensures that the directory exists 
            </summary>
        </member>
        <member name="M:Composite.Core.IO.DirectoryUtils.DeleteFile(System.String,System.Boolean)">
            <summary>
            Delete a file. If the deleteEmptyDirectoresRecursively is true all empty directories
            from buttom up are also deleted.
            </summary>
            <param name="path"></param>
            <param name="deleteEmptyDirectoresRecursively"></param>
        </member>
        <member name="M:Composite.Core.IO.DirectoryUtils.DeleteFilesRecursively(System.String)">
            <summary>
            Deletes all files recursively leaving all sub directories.
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Composite.Core.IO.DirectoryUtils.RemoveReadOnlyRecursively(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.DirectoryUtils.GetFilesRecursively(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Page.PageStructureInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.SitemapNamespaceString">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.PageListInDocumentOrder">
            <summary>
            Builds a list of [Page Id, Page label] pairs.
            The items in the list is returned in document order and the labels are indented with one space for each depth level
            of the page.
            </summary>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetSiteMap">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetSiteMapWithActivePageAnnotations">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetSiteMapWithActivePageAnnotations(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetSitemapByScope(Composite.Data.SitemapScope,System.Guid)">
            <summary>
            Returns portions of the sitemap in acordance with the specified scope. Sitemap elements are hierarchically
            ordered and are marked with 'isopen' and 'iscurrent' attributes when open/selected relative to the supplied pageId.
            </summary>
            <param name="associationScope">The scope of pages to return. This is relative to the specified pageId.</param>
            <param name="pageId">The C1 Page ID to use when defining the scope. This must be a valid page id.</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetAssociatedPageIds(System.Guid,Composite.Data.SitemapScope)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetAssociatedPageIds(System.Guid,Composite.Data.SitemapScope,System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.TryGetPageUrl(System.Guid,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.TryGetPageUrlByFriendlyUrl(System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetUrlToIdLookup">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetLowerCaseUrlToIdLookup">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetPageUrlBuilder(Composite.Data.PublicationScope,System.Globalization.CultureInfo,Composite.Core.Routing.UrlSpace)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetIdToUrlLookup">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.GetIdToUrlLookup(System.String,System.Globalization.CultureInfo)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Page.PageStructureInfo.Map">
            <summary>
            An immutable instanse of a pages map
            </summary>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Page.IXElementToControlMapper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.IXElementToControlMapper.TryGetControlFromXElement(System.Xml.Linq.XElement,System.Web.UI.Control@)">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions.AsAspNetControl(Composite.Core.Xml.XhtmlDocument)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions.AsAspNetControl(Composite.Core.Xml.XhtmlDocument,Composite.Core.WebClient.Renderings.Page.IXElementToControlMapper)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions.AsAspNetControl(System.Xml.Linq.XNode)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions.AsAspNetControl(System.Xml.Linq.XNode,Composite.Core.WebClient.Renderings.Page.IXElementToControlMapper)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions.AsAspNetControl(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions.AsAspNetControl(System.Xml.Linq.XElement,Composite.Core.WebClient.Renderings.Page.IXElementToControlMapper)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.XElementToAspNetExtensions.CopyAttributes(System.Xml.Linq.XElement,System.Web.UI.HtmlControls.HtmlControl)">
            <exclude />
        </member>
        <member name="T:Composite.Core.ResourceSystem.IconSize">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.ResourceSystem.IconSize.Normal">
            <exclude />
        </member>
        <member name="F:Composite.Core.ResourceSystem.IconSize.Large">
            <exclude />
        </member>
        <member name="F:Composite.Core.ResourceSystem.IconSize.XLarge">
            <exclude />
        </member>
        <member name="T:Composite.Core.ResourceSystem.Icons.BuildInIconProviderName">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.ResourceSystem.Icons.BuildInIconProviderName.ProviderName">
            <exclude />
        </member>
        <member name="T:Composite.Core.ResourceSystem.StringResourceSystemFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.Initialize">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetString(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetString(System.String,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetLocalizationSectionNames">
            <summary>
            Returns a list of all defined localization sections
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.TryGetString(System.String,System.String,System.String@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetLocalization(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetSupportedCultures">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetDefaultStringCulture">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetApplicationRegionAndLanguageList">
            <summary>
            Returns a (localized) list of cultures, where the value is "(region) / (language)", where (language) is the language 
            application users will get, if they select the specified culture.
            </summary>
            <returns>A list of (culture name, region/language label) </returns>
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetCultureTitle(System.Globalization.CultureInfo)">
            <summary>
            Returns a localized label for a culture. Fall back to system display name.
            </summary>
            <param name="culture">culture to get a localized label for</param>
            <returns>Label for the culture</returns>
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetAllCultures">
            <summary>
            Returns a (localized) list of all cultures
            </summary>
            <returns>A dictionary of (culture name, region/language label) </returns>
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.GetSupportedCulturesList">
            <summary>
            Returns a (localized) list of cultures supported by the C1 Console 
            </summary>
            <returns>A list of (culture name, region/language label) </returns>
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.ParseString(System.String)">
            <summary>
            Parses the <paramref name="stringToParse"/> for any localization strings
            if there is any matches and these have a value, then the string is replaced
            the result string is returned.
            </summary>
            <param name="stringToParse"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.ResourceSystem.StringResourceSystemFacade.SplitParseableStrings(System.String,System.Char)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.Cryptography.Cryptographer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Cryptography.Cryptographer.Encrypt(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Cryptography.Cryptographer.Decrypt(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Cryptography.Cryptographer.EncryptBytes(System.Byte[])">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Cryptography.Cryptographer.DecryptBytes(System.Byte[])">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.EntityTokenSerializer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenSerializer.Serialize(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenSerializer.Serialize(Composite.C1Console.Security.EntityToken,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenSerializer.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenSerializer.Deserialize(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenSerializer.Deserialize``1(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Foundation.PluginFacades.LoginProviderPluginFacade.CheckType``1">
            <summary>
            Returns a Type object containing the type of the current plugin
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.C1Console.Security.EntityTokenHook">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHook.#ctor(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHook.AddHookie(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.EntityTokenHook.AddHookies(System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityToken})">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.EntityTokenHook.Hooker">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.EntityTokenHook.Hookies">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.DirtyHooksCallbackDelegate">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.HookingFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.EnsureInitialization">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.GetHookies(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.GetParentHookers">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.GetParentToChildHooks(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.RemoveHook(Composite.C1Console.Security.EntityTokenHook)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.RemoveHooks(System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityTokenHook})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.AddHook(Composite.C1Console.Security.EntityTokenHook)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.AddHooks(System.Collections.Generic.IEnumerable{Composite.C1Console.Security.EntityTokenHook})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.RegisterDirtyCallback(System.String,Composite.C1Console.Security.DirtyHooksCallbackDelegate)">
            <summary>
            Use this method to register a callback method that will be called when fully updated hooks are needed.
            </summary>
            <param name="id">
            The id of the callback method. This ensures that only one callback is registered
            for each id.
            </param>
            <param name="dirtyHooksCallbackDelegate"></param>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.SubscribeToNewElementProviderRootEntitiesEvent(Composite.C1Console.Security.HookingFacade.NewElementProviderRootEntitiesDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.UnsubscribeFromNewElementProviderRootEntitiesEvent(Composite.C1Console.Security.HookingFacade.NewElementProviderRootEntitiesDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.HookingFacade.FireNewElementProviderRootEntitiesEvent(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.HookingFacade.NewElementProviderRootEntitiesDelegate">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginProvider.NonConfigurableLoginProvider">
            <summary>
            Default login provider configuration, you can use this if you require no custom configuration fields.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginProvider.NonConfigurableLoginProviderAssembler">
            <summary>
            Assembles login providers based on type only, i.e. without anhy custom configuration. 
            If your provider require custom configuration you should also make your own assembler and configuration classes.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginProvider.NonConfigurableLoginProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.C1Console.Security.Plugins.LoginProvider.LoginProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginSessionStore.NonConfigurableLoginSessionStore">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginSessionStore.LoginSessionStoreData">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginSessionStore.LoginSessionStoreData.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginSessionStore.LoginSessionStoreData.#ctor(System.String,System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.Plugins.LoginSessionStore.NonConfigurableSessionDataProviderAssembler">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.Plugins.LoginSessionStore.NonConfigurableSessionDataProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.C1Console.Security.Plugins.LoginSessionStore.LoginSessionStoreData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipOrientedGraphNodeExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipOrientedGraphNodeExtensions.GetAllPaths(Composite.C1Console.Security.RelationshipOrientedGraphNode)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipOrientedGraphNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipOrientedGraphNode.#ctor(Composite.C1Console.Security.EntityToken,System.Action{Composite.C1Console.Security.RelationshipOrientedGraphNode})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipOrientedGraphNode.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipOrientedGraphNode.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipOrientedGraphNode.Equals(Composite.C1Console.Security.RelationshipOrientedGraphNode)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipOrientedGraphNode.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipOrientedGraphNode.Parents">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipOrientedGraph">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipOrientedGraph.#ctor(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipOrientedGraph.Root">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipGraphSearchOption">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.RelationshipGraphSearchOption.Native">
            <summary>
            Parent items get from <see cref="T:Composite.C1Console.Security.ISecurityAncestorProvider"/>
            </summary>
        </member>
        <member name="F:Composite.C1Console.Security.RelationshipGraphSearchOption.Hooked">
            <summary>
            Parent items get from <see cref="T:Composite.C1Console.Security.IAuxiliarySecurityAncestorProvider"/> and <see cref="T:Composite.C1Console.Security.HookingFacade"/>
            </summary>
        </member>
        <member name="F:Composite.C1Console.Security.RelationshipGraphSearchOption.Both">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipGraph">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipGraph.#ctor(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.RelationshipGraphSearchOption)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipGraph.#ctor(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.RelationshipGraphSearchOption,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.RelationshipGraph.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraph.Levels">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraph.TopNodes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraph.BottomNodes">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipGraphLevel">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphLevel.Level">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphLevel.Entities">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphLevel.HookedEntities">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphLevel.AllEntities">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipGraphNodeType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.RelationshipGraphNodeType.Entity">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.RelationshipGraphNodeType.Hooking">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.RelationshipGraphNode">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphNode.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphNode.Level">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphNode.NodeType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphNode.ParentNodes">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.RelationshipGraphNode.ChildNode">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.SecurityAncestorProviderAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.SecurityAncestorProviderAttribute.#ctor(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.SecurityAncestorProviderAttribute.SecurityAncestorProviderType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.SecurityAncestorProviders.NoAncestorSecurityAncestorProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.SecurityAncestorProviders.NoAncestorSecurityAncestorProvider.GetParents(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.SecurityResolver">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.SecurityResolver.Resolve(Composite.C1Console.Security.UserToken,Composite.C1Console.Security.ActionToken,Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserPermissionDefinition},System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserGroupPermissionDefinition})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.SecurityResolver.Resolve(Composite.C1Console.Security.UserToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.PermissionType},Composite.C1Console.Security.EntityToken,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserPermissionDefinition},System.Collections.Generic.IEnumerable{Composite.C1Console.Security.UserGroupPermissionDefinition})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.SecurityResolver.Resolve(Composite.C1Console.Security.SecurityToken)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.SecurityResult">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.SecurityResult.Disallowed">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.SecurityResult.Allowed">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.SecurityResult.Unspecified">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.SecurityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.SecurityToken.#ctor(Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken,Composite.C1Console.Security.UserToken)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.SecurityToken.EntityToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.SecurityToken.ActionToken">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.SecurityToken.UserToken">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.UserToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserToken.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserToken.Username">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.UserValidationFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.GetValidationType">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.FormValidateUser(System.String,System.String)">
            <summary>
            Validates and persists a form based login
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns>True if the user was validated</returns>
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.FormValidateUserWithoutLogin(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.FormSetUserPassword(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.WindowsValidateUser(System.String,System.String)">
            <summary>
            Validates and persists a windows based login. Actual Windows username / password validation should precede this call.
            </summary>
            <param name="userName"></param>
            <param name="domainName"></param>
            <returns>True if the user was validated</returns>
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.Logout">
            <summary>
            Flushes the username from the login session
            </summary>
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.IsLoggedIn">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.GetUserToken">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Security.UserValidationFacade.GetUsername">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserValidationFacade.AllUsernames">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Security.UserValidationFacade.CanSetUserPassword">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Security.UserValidationFacade.ValidationType">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.UserValidationFacade.ValidationType.None">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.UserValidationFacade.ValidationType.Form">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Security.UserValidationFacade.ValidationType.Windows">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IMediaFileData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.FolderPath">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.FileName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.CultureInfo">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.MimeType">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.Length">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.CreationTime">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFileData.LastWriteTime">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IMediaFolderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFolderData.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFolderData.Path">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFolderData.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMediaFolderData.Description">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.Foundation.InterfaceConfigurationManipulator.AddNew(System.String,Composite.Data.DynamicTypes.DataTypeDescriptor)">
            <summary>
            Create an invariant store
            </summary>
            <param name="providerName"></param>
            <param name="dataTypeDescriptor"></param>
        </member>
        <member name="T:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.Draft">
            <exclude />
        </member>
        <member name="F:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.AwaitingApproval">
            <exclude />
        </member>
        <member name="F:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.AwaitingPublication">
            <exclude />
        </member>
        <member name="F:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.Published">
            <exclude />
        </member>
        <member name="F:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.WorkflowActionGroup">
            <exclude />
        </member>
        <member name="F:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.AwaitingPublicationActionPermissionType">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.GetActions(Composite.Data.IData,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SetStartStatus(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.GetValidTransitions(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.OnAfterBuildNew(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.OnAfterDataUpdated(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.ValidateTransition(Composite.Data.IData,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendForwardForApproval">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendForwardForPublication">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.Publish">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.Unpublish">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.UndoUnpublishedChanges">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendBackToDraft">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendBackForApproval">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendBackForPublication">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendToDraftDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendForApprovalDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.SendForPublicationDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Data.ProcessControlled.ProcessControllers.GenericPublishProcessController.GenericPublishProcessController.PublishDisabled">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelper`1.AttachElementActions(Composite.C1Console.Elements.Element,`0)">
            <summary>
            Call this method to add actions to the element which represents the data of type T
            </summary>
            <param name="associatedDataElement"></param>
            <param name="data">Null is allowed</param>
        </member>
        <member name="T:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.#ctor(System.String,System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.GetInterfaceType">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.GetData">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHelpers.AssociatedDataElementProviderHelper.AssociatedDataElementProviderHelperEntityToken.Payload">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.DataTypeDescriptorToXmlActionToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.DataTypeDescriptorToXmlActionToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.DataTypeDescriptorToXmlActionToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.DataTypeDescriptorToXmlActionToken.PermissionTypes">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.ListUnpublishedItemsIcon">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.ShowincontentareaIcon">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.DataIconLookup">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.#ctor(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.GetRoots(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.GetForeignRoots(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.GetChildren(Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.GetForeignChildren(Composite.C1Console.Security.EntityToken,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.RootOpen">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.RootClosed">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.InterfaceOpen">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.InterfaceClosed">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.AddDataTypeIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.EditDataTypeIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.DeleteDataTypeIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.LocalizeDataTypeIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.DelocalizeDataTypeIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.AddDataIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.EditDataIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.DeleteDataIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.LocalizeDataIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.EditFormMarkupIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.ToXmlIcon">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.Context">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProvider.ContainsLocalizedData">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderData.OnlyShowGlobalDatas">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.GlobalDataTypeFolderId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.PageDataFolderTypeFolderId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderRootEntityToken.PageMetaDataTypeFolderId">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.#ctor(System.String,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.GeneratedDataTypesElementProvider.GeneratedDataTypesElementProviderTypeEntityToken.SerializedTypeName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaFileSearchToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaFileSearchToken.MimeTypes">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaFileSearchToken.Extensions">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaFileSearchToken.Folder">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaFileSearchToken.HideSubfolders">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaRootFolderProviderEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaRootFolderProviderEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaRootFolderProviderEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaRootFolderProviderEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaRootFolderProviderEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaRootFolderProviderEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.MediaRootFolderProviderEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.#ctor(Composite.Data.Types.IMediaFile)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.KeyPath">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.CompositePath">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.StoreId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.Title">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.Description">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.Culture">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.MimeType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.Length">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.CreationTime">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.LastWriteTime">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.IsReadOnly">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.FolderPath">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.FileName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.WorkflowMediaFile.DataSourceId">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.ZipMediaFileExtractor">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.MediaFileProviderElementProvider.ZipMediaFileExtractor.AddZip(System.String,System.String,System.IO.Stream,System.Boolean,System.Boolean)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProviderEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProviderEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProviderEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProviderEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProviderEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProviderEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProviderEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.AllFunctionsElementProvider.AllFunctionsElementProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.AllFunctionsElementProvider.AllFunctionsElementProviderSearchToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.AllFunctionsElementProvider.AllFunctionsElementProviderSearchToken.Build(System.Type[])">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.AllFunctionsElementProvider.AllFunctionsElementProviderSearchToken.AcceptableTypes">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.OnGetFunctionInfos(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.OnGetEntityTokenTypes">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.OnIsEntityOwner(Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.OnGetFolderActions">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.OnGetFunctionActions(Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.IFunctionTreeBuilderLeafInfo)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.AddFunction">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.EditFunction">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.DeleteFunction">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.RootFolderLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.XsltBasedFunctionProviderElementProvider.XsltBasedFunctionProviderElementProvider.RootFolderToolTip">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.StandardFunctionProvider.Foundation.EntityTokenFactory">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.StandardFunctionProvider.Foundation.EntityTokenFactory.#ctor(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.Update(System.Collections.Generic.IEnumerable{Composite.Data.IData})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.AddNew``1(System.Collections.Generic.IEnumerable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.Delete(System.Collections.Generic.IEnumerable{Composite.Data.DataSourceId})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.GetSupportedInterfaces">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.GetData``1">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.GetData``1(Composite.Data.IDataId)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.Context">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.MediaDataId">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.MediaDataId.MediaType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.MediaFileProvider.MediaFileProvider.MediaDataId.Id">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.SqlFunctionElementProvider.SqlFunctionProviderFolderEntityToken.ConnectionId">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.#ctor(Composite.Data.Types.ISqlFunctionInfo,System.Collections.Generic.IEnumerable{Composite.Functions.ParameterProfile})">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.#ctor(Composite.Data.Types.ISqlFunctionInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.Execute(Composite.Functions.ParameterList,Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.Name">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.Description">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.ReturnType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.ParameterProfiles">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.SqlFunctionProvider.SqlFunction.EntityToken">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.ISqlConnection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlConnection.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlConnection.IsMsSql">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlConnection.EncryptedConnectionString">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlConnection.Name">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.ISqlFunctionInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.ConnectionId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.IsStoredProcedure">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.ReturnsXml">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.IsQuery">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.Command">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.ISqlFunctionInfo.Description">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IVisualFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.TypeManagerName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.XhtmlTemplate">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.MaximumItemsToList">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.OrderbyFieldName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IVisualFunction.OrderbyAscending">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.VisualFunctionProvider.RenderingHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.VisualFunctionProvider.RenderingHelper.RenderCompleteDataList(Composite.Data.Types.IVisualFunction,Composite.Core.Xml.XhtmlDocument,Composite.Data.DynamicTypes.DataTypeDescriptor,Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.VisualFunctionProvider.RenderingHelper.RenderDataList``1(Composite.Data.Types.IVisualFunction,Composite.Core.Xml.XhtmlDocument,Composite.Data.DynamicTypes.DataTypeDescriptor,Composite.Functions.FunctionContextContainer,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.INamedFunctionCall">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.INamedFunctionCall.XsltFunctionId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.INamedFunctionCall.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.INamedFunctionCall.SerializedFunction">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.TransformationInputs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.TransformationInputs.InputDocument">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.TransformationInputs.ExtensionDefinitions">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.RenderHelper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.RenderHelper.XsltInput10">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.RenderHelper.BuildInputDocument(System.Collections.Generic.IEnumerable{Composite.Functions.NamedFunctionCall},System.Collections.Generic.List{Composite.Functions.ManagedParameters.ManagedParameterDefinition},System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.RenderHelper.BuildInputDocument(System.Collections.Generic.IEnumerable{Composite.Functions.NamedFunctionCall},Composite.Functions.ParameterList,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.RenderHelper.GetValidFunctionCalls(System.Guid,System.Collections.Generic.List{System.String}@)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.Id">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.FunctionNamespace">
            <summary>
            Gets the function namespace.
            </summary>
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.BaseFunctionProviderElementProvider.BaseFunctionFolderElementEntityToken.ElementProviderName">
            <summary>
            Gets the name of the function provider.
            </summary>
            <value>
            The name of the function provider.
            </value>
        </member>
        <member name="T:Composite.Data.Types.IMethodBasedFunctionInfo">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMethodBasedFunctionInfo.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMethodBasedFunctionInfo.Type">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMethodBasedFunctionInfo.MethodName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMethodBasedFunctionInfo.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IMethodBasedFunctionInfo.UserMethodName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.MethodBasedFunctionProvider.MethodBasedDefaultValueAttribute">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.MethodBasedFunctionProvider.MethodBasedDefaultValueAttribute.#ctor(System.String,System.Object)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.MethodBasedFunctionProvider.MethodBasedDefaultValueAttribute.ParameterName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.MethodBasedFunctionProvider.MethodBasedDefaultValueAttribute.DefaultValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IXsltFunction">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXsltFunction.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXsltFunction.Name">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXsltFunction.Namespace">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXsltFunction.Description">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXsltFunction.OutputXmlSubType">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXsltFunction.XslFilePath">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.OutputXmlSubType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.OutputXmlSubType.XHTML">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.OutputXmlSubType.XML">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.XsltBasedFunctionProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.XsltBasedFunctionProvider.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.XsltBasedFunctionProvider.ResolveImportIncludePaths(System.Xml.Linq.XContainer)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.XsltBasedFunctionProvider.FunctionNotifier">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.XsltBasedFunctionProvider.DynamicTypeDependentFunctions">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Functions.FunctionProviders.XsltBasedFunctionProvider.XsltBasedFunctionProvider.Functions">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.EntityTokenFactory">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.Foundation.EntityTokenFactory.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.ImageSelectorWidgetFunction.GenerateSelectorOptions(Composite.Data.DataReference{Composite.Data.Types.IMediaFileFolder})">
            <summary>
            Provides data for the drop down list. Left here only for backwards compatibility
            </summary>
            <param name="folderReference"></param>
            <returns></returns>
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.TextAreaWidgetFuntion.CompositeName">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.TextAreaWidgetFuntion.SpellCheckParameterName">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.TextBoxWidgetFuntion.CompositeName">
            <exclude />
        </member>
        <member name="F:Composite.Plugins.Functions.WidgetFunctionProviders.StandardWidgetFunctionProvider.String.TextBoxWidgetFuntion.SpellCheckParameterName">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.Plugins.GlobalSettingsProvider.IGlobalSettingsProvider.NonProbableAssemblyNames">
            <summary>
            List of assembly names to exclude from type probing. Use "*" as wildcard, like. "System.*"
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.Plugins.GlobalSettingsProvider.IGlobalSettingsProvider.AutoCreatedAdministratorUserName">
            <summary>
            If specified, the system will accept this user with any password on a clean system, that has a writeable login provider
            The user will then be created.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.Plugins.GlobalSettingsProvider.IGlobalSettingsProvider.OnlyTranslateWhenApproved">
            <summary>
            When <value>true</value> only pages that are published or awaiting publication can be translated in console.
            </summary>
        </member>
        <member name="T:Composite.Core.Configuration.IResourceCacheSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.IResourceCacheSettings.CachePath">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.IResourceCacheSettings.ServerCacheMinutes">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.IResourceCacheSettings.ClientCacheMinutes">
            <exclude />
        </member>
        <member name="M:Composite.Data.Foundation.DataFacadeQueryable`1.#ctor(System.Collections.Generic.List{System.Linq.IQueryable},System.Linq.Expressions.Expression)">
            <summary>
            DO NOT USE! For internal use only
            </summary>
        </member>
        <member name="T:Composite.Data.StoreFieldTypeAttribute">
            <summary>
            Specifies what physical store type should be used to store this property.
            </summary>
            <example> This sample shows how to use the StoreFieldType attribute. 
            Here a string field with a maximum of 40 characters.
            <code>
            // data interface attributes ...
            interface IMyDataType : IData
            {
                [StoreFieldType(PhysicalStoreFieldType.String, 40)]
                [ImmutableFieldId("{D75EA67F-AD14-4BAB-8547-6D87002809F1}")]
                string ProductName { get; set; }
                
                // more data properties ...
                
            }
            </code>
            </example>    
        </member>
        <member name="M:Composite.Data.StoreFieldTypeAttribute.#ctor(Composite.Data.PhysicalStoreFieldType)">
            <summary>
            Specifies what physical store type should be used to store this property.
            This overload is intended for int, long, large string, date time, guid and bool.
            For decimal and string, use other overload where you can specify length values also.
            </summary>
            <param name="physicalStoreFieldType">PhysicalStoreFieldType to use</param>
        </member>
        <member name="M:Composite.Data.StoreFieldTypeAttribute.#ctor(Composite.Data.PhysicalStoreFieldType,System.Int32)">
            <summary>
            Specifies what physical store type should be used to store this property.
            This overload is intended for string.
            </summary>
            <param name="physicalStoreFieldType">PhysicalStoreFieldType to use - PhysicalStoreFieldType.String expected</param>
            <param name="maxLength">Number of characters to reserve in physical store</param>
        </member>
        <member name="M:Composite.Data.StoreFieldTypeAttribute.#ctor(Composite.Data.PhysicalStoreFieldType,System.Int32,System.Int32)">
            <summary>
            Specifies what physical store type should be used to store this property.
            This overload is intended for decimal.
            </summary>
            <param name="physicalStoreFieldType">PhysicalStoreFieldType to use - PhysicalStoreFieldType.Decimal expected</param>
            <param name="numericPrecision">Numeric precision for decimal</param>
            <param name="numericScale">Numeric scale for decimal</param>
        </member>
        <member name="P:Composite.Data.StoreFieldTypeAttribute.StoreFieldType">
            <exclude />
        </member>
        <member name="P:Composite.Data.StoreFieldTypeAttribute.IsNullable">
            <summary>
            When true the data store can allow null values. Default is false.
            </summary>
        </member>
        <member name="T:Composite.Data.PhysicalStoreFieldType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.Integer">
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.Long">
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.String">
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.LargeString">
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.DateTime">
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.Decimal">
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.Guid">
            <exclude />
        </member>
        <member name="F:Composite.Data.PhysicalStoreFieldType.Boolean">
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.DataInterfaceValidator">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataInterfaceValidator.TryValidate(System.Type,System.Collections.Generic.IEnumerable{System.String}@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataInterfaceValidator.TryValidate(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataInterfaceValidator.TryValidate``1(System.Collections.Generic.IEnumerable{System.String}@)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataInterfaceValidator.TryValidate``1">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataInterfaceValidator.Validate(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataInterfaceValidator.Validate``1">
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.DataProviderContext">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataProviderContext.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataProviderContext.CreateDataSourceId(Composite.Data.IDataId,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataProviderContext.UpdateDataSourceId(Composite.Data.IData,Composite.Data.IDataId,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.DataProviderContext.UpdateDataSourceIdDataScope(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Plugins.DataProvider.DataProviderContext.ProviderName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.NonConfigurableDataProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.NonConfigurableDataProviderAssembler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Plugins.DataProvider.NonConfigurableDataProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.Data.Plugins.DataProvider.DataProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Plugins.DataProvider.Runtime.DataProviderSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Data.Plugins.DataProvider.Runtime.DataProviderSettings.SectionName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Plugins.DataProvider.Runtime.DataProviderSettings.DefaultDynamicTypeDataProviderName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Plugins.DataProvider.Runtime.DataProviderSettings.DataProviderPlugins">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IFileUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileUtils.ValidateValueLengths(Composite.Data.Types.IFile)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IFileExtensions">
            <summary>
            Extension methods for IFile
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileExtensions.GetReadStream(Composite.Data.Types.IFile)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileExtensions.GetNewWriteStream(Composite.Data.Types.IFile)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileExtensions.SubscribeOnChanged(Composite.Data.Types.IFile,Composite.Data.Streams.OnFileChangedDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileExtensions.ReadAllText(Composite.Data.Types.IFile)">
            <summary>
            Returns all text from the stream associated with the provided IFile
            </summary>
        </member>
        <member name="M:Composite.Data.Types.IFileExtensions.SetNewContent(Composite.Data.Types.IFile,System.String)">
            <summary>
            Replaces the all files content with some new content
            </summary>
            <param name="file"></param>
            <param name="newContent"></param>
        </member>
        <member name="T:Composite.Data.Types.IFileServices">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileServices.GetFile``1(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.IFileServices.TryGetFile``1(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IPage">
            <summary>
            This data interface represents a page in Composite C1. This can be used to query pages through a <see cref="T:Composite.Data.DataConnection"/>. 
            Note that a lot of page related tasks can be done with a <see cref="T:Composite.Data.SitemapNavigator"/>. 
            And any changes done through this interface and a <see cref="T:Composite.Data.DataConnection"/> should be done with care. 
            </summary>
        </member>
        <member name="P:Composite.Data.Types.IPage.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPage.TemplateId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPage.PageTypeId">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPage.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPage.MenuTitle">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPage.UrlTitle">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPage.FriendlyUrl">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IPage.Description">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.IXmlPageTemplate">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXmlPageTemplate.Id">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXmlPageTemplate.Title">
            <exclude />
        </member>
        <member name="P:Composite.Data.Types.IXmlPageTemplate.PageTemplateFilePath">
            <exclude />
        </member>
        <member name="T:Composite.Data.Types.PageServices">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.GetParentId(Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.GetLocalOrdering(Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.GetChildren(Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.GetChildren(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.GetChildrenCount(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.IsChildrenAlphabeticOrdered(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.GetPageFromLocalOrder(System.Guid,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.AddPageAtTop(Composite.Data.Types.IPage,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.AddPageAtTop(Composite.Data.Types.IPage,System.Guid,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.AddPageAtBottom(Composite.Data.Types.IPage,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.AddPageAtBottom(Composite.Data.Types.IPage,System.Guid,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.AddPageAlphabetic(Composite.Data.Types.IPage,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.AddPageAfter(Composite.Data.Types.IPage,System.Guid,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.MoveTo(Composite.Data.Types.IPage,System.Guid,System.Int32,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.InsertIntoPosition(Composite.Data.Types.IPage,System.Guid,System.Int32,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.AddPageAfter(Composite.Data.Types.IPage,System.Guid,System.Guid,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.GetSubChildren(Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Types.PageServices.DeletePageStructure(Composite.Data.Types.IPage)">
            <summary>
            This method will delete the pagestructure corrosponding to the given page if this 
            page is the last page.
            </summary>
            <param name="page">The page that is about to be deleted.</param>
        </member>
        <member name="T:Composite.C1Console.Elements.ElementAction">
            <summary>    
            Define an action you can attach to an <see cref="T:Composite.C1Console.Elements.Element"/>.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementAction.#ctor(Composite.C1Console.Elements.ActionHandle)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="actionHandle"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementAction.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementAction.Equals(Composite.C1Console.Elements.ElementAction)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementAction.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementAction.ActionHandle">
            <summary>
            The action handle
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementAction.VisualData">
            <summary>
            The visual representation (label, icon) of the action
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementAction.TagValue">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ActionType">
            <summary>
            Enumeration of different types of actions. If in doupt use 'Other'.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionType.Edit">
            <summary>
            The action will enable the user to edit the element.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionType.Add">
            <summary>
            The action will enable the user to add a child element.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionType.Delete">
            <summary>
            The action will enable the user to delete the element.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionType.Other">
            <summary>
            The action will enable the user to get a report, manage meta dtata or other non add/edit/delete actions
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionType.DeveloperMode">
            <summary>
            The action will should only appear in debug builds, where the C1 Console is running in developer mode. Normal users are very unlikely to ever see this action.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ActionGroupPriority">
            <summary>
            The priority/relevance of an action group. Use 'PrimaryHigh' if actions in this group are the most relevant actions available. Otherwise use another value to move actions down in menus. 
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.PrimaryHigh">
            <summary>
            Use this when actions in the group are of the outmost importance/relevance, like 'Edit Page' og a page.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.PrimaryMedium">
            <summary>
            Use this when actions in the group are primary for the element it is attached to, but not used very often.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.PrimaryLow">
            <summary>
            Use this when actions in the group are primary for the element it is attached to, but very seldom not used.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.TargetedAppendHigh">
            <summary>
            Use this when actions in the group are often used and relevant (but not primary) for the element it is attached to.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.TargetedAppendMedium">
            <summary>
            Use this when actions in the group are used and relevant (but not primary) for the element it is attached to.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.TargetedAppendLow">
            <summary>
            Use this when actions in the group are seldom used and relevant (but not primary) for the element it is attached to.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.GeneralAppendHigh">
            <summary>
            Use this when actions in the group are attached to elements in general, without specific relevance to those elements.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.GeneralAppendMedium">
            <summary>
            Use this when actions in the group are attached to elements in general, without specific relevance to those elements.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionGroupPriority.GeneralAppendLow">
            <summary>
            Use this when actions in the group are attached to elements in general, without specific relevance to those elements.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ActionCheckedStatus">
            <summary>    
            Actions may have a checkbox associated with them, indicating it they are turned on or not or uncheckable.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionCheckedStatus.Uncheckable">
            <summary>
            The action can not be checked/unchecked. This is typical default behaviour of an action.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionCheckedStatus.Unchecked">
            <summary>
            The action is unchecked and can be checked.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionCheckedStatus.Checked">
            <summary>
            The action is checked and can be unchecked.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ActionGroup">
            <summary>
            Define a priority/relevance and optional named group for an action. The priority/relevance influence the position of the action in menus.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ActionGroup.#ctor(Composite.C1Console.Elements.ActionGroupPriority)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="priority">the priority/relecance of the action in relation to the element it is attached to</param>
        </member>
        <member name="M:Composite.C1Console.Elements.ActionGroup.#ctor(System.String,Composite.C1Console.Elements.ActionGroupPriority)">
            <summary>
            Initializes a new instance with a custom named group.
            </summary>
            <param name="name">A name of your choosing. If this name is used by multiple actions they may be bundled into the same group.</param>
            <param name="priority">the priority/relecance of the action in relation to the element it is attached to</param>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionGroup.Name">
            <summary>
            The custom name of the group. An empty string if the group is not named.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionGroup.Priority">
            <summary>
            Priority/relevance of the action.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ActionLocation">
            <summary>
            Define the location of an action in menus. Actions can be grouped by type (add,edit,delete,other) and in primary and secondary.
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionLocation.AddPrimaryActionLocation">
            <summary>
            A primary action, adding data. This will make the action show up between add and delete, next to other add actions (if any).
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionLocation.EditPrimaryActionLocation">
            <summary>
            A primary action, editing data. This will make the action show up as one of the first, next to other edit actions (if any).
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionLocation.DeletePrimaryActionLocation">
            <summary>
            A primary action, deleting data. This will make the action show up after edit and add actions, next to other delete actions (if any).
            </summary>
        </member>
        <member name="F:Composite.C1Console.Elements.ActionLocation.OtherPrimaryActionLocation">
            <summary>
            A primary action, doing something besides from add, edit and delete. This can be a view/report actions etc. 
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ActionLocation.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ActionLocation.ActionGroup">
            <summary>
            Where the action should be grouped. Grouping is typically based on a priority, but can be a unique named group you define. 
            If your action is a primary action for the element it is attacted to you should ensure the ActionGroupPriorty  is set to PrimaryHigh.
            The lower priority, the lower in a menu list the action will appear.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionLocation.ActionType">
            <summary>
            Declare what type of action this is: Edit, Add, Delete, Other. You may also use 'DeveloperMode' which will hide the action when the C1 Console run in normal operations mode.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionLocation.IsInToolbar">
            <summary>
            Set to true if your action is important enough to be shown in the toolbar. If this is a very specialized command, consider not showing it in the toolbar.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionLocation.IsInFolder">
            <summary>
            Not implemented at client level. Setting this to true will have no effect.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionLocation.FolderName">
            <summary>
            Not implemented at client level. Setting a folder name will have no effect.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ActionHandle">
            <summary>    
            A handle to an action - a unique and serializable way to identify actions.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ActionHandle.#ctor(Composite.C1Console.Security.ActionToken)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="actionToken"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.ActionHandle.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ActionHandle.Equals(Composite.C1Console.Elements.ActionHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ActionHandle.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ActionHandle.ActionToken">
            <summary>
            <see cref="P:Composite.C1Console.Elements.ActionHandle.ActionToken"/> represented by this handle.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ActionVisualizedData">
            <summary>    
            Describe how an action should appear visually (label, icon).
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ActionVisualizedData.#ctor">
            <summary>
            Constructs a new instance
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ActionVisualizedData.#ctor(Composite.C1Console.Elements.ActionVisualizedData)">
            <summary>
            Constructs a new instance, copying from an existing instance.
            </summary>
            <param name="copy"></param>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionVisualizedData.ActionCheckedStatus">
            <summary>
            Controls if a check box should be shown next to the action command, and if this checkbox is checked.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionVisualizedData.Label">
            <summary>
            Label of the action
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionVisualizedData.Disabled">
            <summary>
            When disabled, the action will be shown but grayed out and cannot be invoked.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionVisualizedData.Icon">
            <summary>
            The actions icon
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionVisualizedData.ToolTip">
            <summary>
            The actions tool tip
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionVisualizedData.ActionLocation">
            <summary>
            Where the action should show up, relative to toher actions.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ActionVisualizedData.ActivePositions">
            <summary>
            Where the action should be shown - when elements are shown in a selection tree (as opposed to the normal navigation tree) some actions may be desired.
            Default is NavigatorTree only.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ElementExternalActionAdding">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Elements.ElementExternalActionAdding.AllowGlobal">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Elements.ElementExternalActionAdding.AllowProcessConotroller">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Elements.ElementExternalActionAdding.AllowManageUserPermissions">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Element">
            <summary> 
            Define a tree element to be displayed in the C1 Console tree structure
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.#ctor(Composite.C1Console.Elements.ElementHandle)">
            <summary>
            Constructs a new <see cref="T:Composite.C1Console.Elements.Element"/> from the given <see cref="P:Composite.C1Console.Elements.Element.ElementHandle"/>.
            </summary>
            <param name="elementHandle"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.#ctor(Composite.C1Console.Elements.ElementHandle,Composite.C1Console.Elements.ElementVisualizedData)">
            <summary>
            Constructs a new <see cref="T:Composite.C1Console.Elements.Element"/> from the given <see cref="P:Composite.C1Console.Elements.Element.ElementHandle"/> and <see cref="T:Composite.C1Console.Elements.ElementVisualizedData"/>.
            </summary>
            <param name="elementHandle"></param>
            <param name="visualData"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.#ctor(Composite.C1Console.Elements.ElementHandle,Composite.C1Console.Elements.ElementDragAndDropInfo)">
            <summary>
            Constructs a new <see cref="T:Composite.C1Console.Elements.Element"/> from the given <see cref="P:Composite.C1Console.Elements.Element.ElementHandle"/> and <see cref="T:Composite.C1Console.Elements.ElementDragAndDropInfo"/>.
            </summary>
            <param name="elementHandle"></param>
            <param name="movabilityInfo"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.#ctor(Composite.C1Console.Elements.ElementHandle,Composite.C1Console.Elements.ElementVisualizedData,Composite.C1Console.Elements.ElementDragAndDropInfo)">
            <summary>
            Constructs a new <see cref="T:Composite.C1Console.Elements.Element"/> from the given <see cref="P:Composite.C1Console.Elements.Element.ElementHandle"/>, <see cref="T:Composite.C1Console.Elements.ElementVisualizedData"/> and <see cref="T:Composite.C1Console.Elements.ElementDragAndDropInfo"/>.
            </summary>
            <param name="elementHandle"></param>
            <param name="visualData"></param>
            <param name="movabilityInfo"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.AddAction(Composite.C1Console.Elements.ElementAction)">
            <summary>
            Add an action to the element
            </summary>
            <param name="elementAction">The action to add</param>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.AddAction(System.Collections.Generic.IEnumerable{Composite.C1Console.Elements.ElementAction})">
            <summary>
            Add one or more actions to the element
            </summary>
            <param name="elementActions">The actions to add</param>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.RemoveAction(Composite.C1Console.Elements.ElementAction)">
            <summary>
            Remove an action from the element
            </summary>
            <param name="elementAction">The action to remove</param>
        </member>
        <member name="M:Composite.C1Console.Elements.Element.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Element.Equals(Composite.C1Console.Elements.Element)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Element.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Element.ElementHandle">
            <summary>
            The <see cref="P:Composite.C1Console.Elements.Element.ElementHandle"/> for this Element.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.Element.VisualData">
            <summary>
            The <see cref="T:Composite.C1Console.Elements.ElementVisualizedData"/> for this Element.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.Element.MovabilityInfo">
            <summary>
            The <see cref="T:Composite.C1Console.Elements.ElementDragAndDropInfo"/> for this Element.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.Element.IsLocaleAware">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Element.PropertyBag">
            <summary>
            Custom properties to attach to this Element
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.Element.TagValue">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Element.TreeLockBehavior">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Element.ElementExternalActionAdding">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Element.ActionCount">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.Element.Actions">
            <summary>
            Actions declared on this element
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ElementFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetRoots(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetRoots(Composite.C1Console.Elements.ElementProviderHandle,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetChildren(Composite.C1Console.Elements.ElementHandle,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetLabeledProperties(Composite.C1Console.Elements.ElementHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.ContainsLocalizedData(Composite.C1Console.Elements.ElementProviderHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetForeignRoots(Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetForeignRoots(Composite.C1Console.Elements.ElementProviderHandle,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetForeignChildren(Composite.C1Console.Elements.ElementHandle,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetForeignLabeledProperties(Composite.C1Console.Elements.ElementHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetData(Composite.C1Console.Elements.ElementProviderHandle,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.ExecuteElementDraggedAndDropped(Composite.C1Console.Elements.ElementHandle,Composite.C1Console.Elements.ElementHandle,System.Int32,System.Boolean,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetNewSearchToken(Composite.C1Console.Elements.ElementHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetSearchFormMarkup(Composite.C1Console.Elements.ElementHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetSearchFormBindings(Composite.C1Console.Elements.ElementHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetRootsWithNoSecurity">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetRootsWithNoSecurity(Composite.C1Console.Elements.ElementProviderHandle,Composite.C1Console.Elements.SearchToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetPerspectiveElements(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementFacade.GetPerspectiveElementsWithNoSecurity">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementHandle">
            <summary>    
            A "identity token" which identifies a specific element from a specific provider. 
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementHandle.#ctor(System.String,Composite.C1Console.Security.EntityToken)">
            <summary>
            Constructs a new ElementHandle
            </summary>
            <param name="providerName"></param>
            <param name="entityToken"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementHandle.#ctor(System.String,Composite.C1Console.Security.EntityToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Constructs a new ElementHandle
            </summary>
            <param name="providerName"></param>
            <param name="entityToken"></param>
            <param name="piggyback"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementHandle.#ctor(System.String,Composite.C1Console.Security.EntityToken,System.String)">
            <summary>
            Constructs a new ElementHandle
            </summary>
            <param name="providerName"></param>
            <param name="entityToken"></param>
            <param name="piggyback"></param>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementHandle.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementHandle.Equals(Composite.C1Console.Elements.ElementHandle)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementHandle.GetHashCode">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementHandle.ProviderName">
            <summary>
            Name of provider this ElementHandle originate from
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementHandle.EntityToken">
            <summary>
            The entity token of the element
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementHandle.Piggyback">
            <summary>
            Custom values appended to this ElementHandle
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementHandle.SerializedPiggyback">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementProviderContext">
            <summary>   
            Context assigned to element providers when they are constructed. Contains a helper method for constructing a provider specific <see cref="T:Composite.C1Console.Elements.ElementHandle"/> and the configuation based name of the provider.
            </summary>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderContext.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:Composite.C1Console.Elements.ElementProviderContext"/>
            </summary>
            <param name="providerName">Name of the provider</param>
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderContext.CreateElementHandle(Composite.C1Console.Security.EntityToken)">
            <summary>
            Created a provider instance (based on name) specific <see cref="T:Composite.C1Console.Elements.ElementHandle"/> for a given <see cref="T:Composite.C1Console.Security.EntityToken"/>, making it possible to tie an entiry token to a specific provider instance. 
            </summary>
            <param name="entityToken"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderContext.ProviderName">
            <summary>
            The name if the provider instance. This name typically originate from configuration. A given provider type may exist as multiple instances, but all with have a unique name.
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.ElementProviderHandle">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHandle.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHandle.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHandle.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.ElementProviderHandle.ToString">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Elements.ElementProviderHandle.ProviderName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.ElementVisualizedData">
            <summary>    
            Describe an elements visual appearance
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementVisualizedData.Label">
            <summary>
            Label to be shown in tree
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementVisualizedData.HasChildren">
            <summary>
            If this element has (may have) chrildren. When true navigation for opening the element will be provided.
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementVisualizedData.IsDisabled">
            <summary>
            When true the element will be shown in the UI but in a grayed out way with all actions disabled
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementVisualizedData.Icon">
            <summary>
            The icon of the element (when closed)
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementVisualizedData.OpenedIcon">
            <summary>
            The icon of the element when open (when children are shown)
            </summary>
        </member>
        <member name="P:Composite.C1Console.Elements.ElementVisualizedData.ToolTip">
            <summary>
            Tooltip for the element - typically shown when hovering the element
            </summary>
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.ElementProviderData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.IElementProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementProvider.IElementProvider.GetHooks">
            <summary>
            Hooks are not affected by searches.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.NonConfigurableElementProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Elements.Plugins.ElementProvider.NonConfigurableElementProviderAssembler">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Elements.Plugins.ElementProvider.NonConfigurableElementProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Composite.C1Console.Elements.Plugins.ElementProvider.ElementProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.Foundation.UserControlUtils">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.Foundation.UserControlUtils.ActivateAsUserControl``1(System.Type,System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiContainerFactories.TemplatedUiContainerBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiContainerFactories.TemplatedUiContainerBase.GetFormPlaceHolder">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiContainerFactories.TemplatedUiContainerBase.GetMessagePlaceHolder">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiContainerFactories.TemplatedUiContainerBase.SetContainerTitle(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiContainerFactories.TemplatedUiContainerBase.SetContainerIcon(Composite.Core.ResourceSystem.ResourceHandle)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiContainerFactories.TemplatedUiContainerBase.OnInit(System.EventArgs)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiContainerFactories.TemplatedUiContainerBase.ShowFieldMessages(System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.ButtonTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ButtonTemplateUserControlBase.FormControlClickEventHandler">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ButtonTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.CheckBoxTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.CheckBoxTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.CheckBoxTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.CheckBoxTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.CheckBoxTemplateUserControlBase.Checked">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.CheckBoxTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.CheckBoxTemplateUserControlBase.ItemLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase">
            <summary>
            Use this as base type for User Controls that render a Forms UiControl Container.
            Access details about child elements through the FormControlDefinitions property.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.RegisterLazyChildControl(System.Int32,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.Label">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.Help">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.PreSelectedIndex">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.Settings">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.FormControlDefinitions">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.FormControlDefinition">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.FormControlDefinition.IsFullWidthControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.FormControlDefinition.Help">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.FormControlDefinition.ToolTip">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.FormControlDefinition.Label">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.ContainerTemplateUserControlBase.FormControlDefinition.FormControl">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.EnumSelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.EnumSelectorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.EnumSelectorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.EnumSelectorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.EnumSelectorTemplateUserControlBase.Selected">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.EnumSelectorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.EnumSelectorTemplateUserControlBase.Options">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.PreviewTabPanelTemplateUserControlBase">
            <summary>
            Use this as base type for User Controls that render a Forms UiControl PreviewTabPanel.
            Access details about child elements through the FormControlDefinitions property.
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.PreviewTabPanelTemplateUserControlBase.FormControlClickEventHandler">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.PreviewTabPanelTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.PreviewTabPanelTemplateUserControlBase.CustomTabId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.PreviewTabPanelTemplateUserControlBase.EventControl">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase.Queries">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase.Parameters">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase.UserProvidedPreviewXml">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.QueryCallDefinitionsEditorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.KeyLabelPair">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.KeyLabelPair.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.KeyLabelPair.Key">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.KeyLabelPair.Label">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.GetOptions">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.Required">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.MultiSelector">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.CompactMode">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.SelectedIndexChangedEventHandler">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.SelectedKeys">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.KeyLabelPair">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.KeyLabelPair.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.KeyLabelPair.Key">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.SelectorTemplateUserControlBase.KeyLabelPair.Label">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.Text">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.Required">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.SpellCheck">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.ClientValidationRules">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextInputTemplateUserControlBase.Type">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextTemplateUserControlBase.Text">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TextTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeSelectorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeSelectorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeSelectorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeSelectorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeSelectorTemplateUserControlBase.SelectedType">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeSelectorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TypeSelectorTemplateUserControlBase.TypeOptions">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedTypeSelectorUiControl.BindStateToControlProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedTypeSelectorUiControl.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedTypeSelectorUiControl.BuildWebControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedTypeSelectorUiControl.IsFullWidthControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.TemplatedTypeSelectorUiControl.ClientName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase.BindStateToProperties">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase.GetDataFieldClientName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase.Xhtml">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase.FormControlLabel">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase.EmbedableFieldsTypes">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.XhtmlEditorTemplateUserControlBase.ClassConfigurationName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Forms.WebChannel.UiControlFactories.WebEmbeddedFormUiControl">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.WebEmbeddedFormUiControl.#ctor(Composite.C1Console.Forms.IFormChannelIdentifier)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.WebEmbeddedFormUiControl.InitializeViewState">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Forms.WebChannel.UiControlFactories.WebEmbeddedFormUiControl.BuildWebControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.WebEmbeddedFormUiControl.IsFullWidthControl">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Forms.WebChannel.UiControlFactories.WebEmbeddedFormUiControl.ClientName">
            <exclude />
        </member>
        <member name="T:Composite.Data.Hierarchy.DataAncestorProviderAttribute">
            <summary> 
            This attribute is requried if data items of this type is used as elements in a tree view.
            This attribute points to a type that can resolve parent relations. 
            See <see cref="T:Composite.Data.Hierarchy.IDataAncestorProvider"/> for more information on parent relations.
            In case that the data items do not have natural parents, use the default implementaion <see cref="T:Composite.Data.Hierarchy.DataAncestorProviders.NoAncestorDataAncestorProvider"/>
            </summary>
        </member>
        <member name="M:Composite.Data.Hierarchy.DataAncestorProviderAttribute.#ctor(System.Type)">
            <summary>
            Create a instance of <see cref="T:Composite.Data.Hierarchy.DataAncestorProviderAttribute"/> given the <paramref name="dataAncestorProviderType"/> type.
            </summary>
            <param name="dataAncestorProviderType">The type that can resolve parent relations. See <see cref="T:Composite.Data.Hierarchy.IDataAncestorProvider"/>.</param>
        </member>
        <member name="P:Composite.Data.Hierarchy.DataAncestorProviderAttribute.DataAncestorProviderType">
            <summary>
            The type that can resolve parent relations. See <see cref="T:Composite.Data.Hierarchy.IDataAncestorProvider"/>.
            </summary>
        </member>
        <member name="T:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProviderAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProviderAttribute.#ctor(System.String,System.Type,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="idPropertyName">The name of the property that contains the value of the parent id property</param>
            <param name="parentDataType">The type of the parent</param>
            <param name="parentIdPropertyName">The name of the id property on the parent</param>
            <param name="nullValue"></param>
        </member>
        <member name="P:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProviderAttribute.IdPropertyName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProviderAttribute.ParentIdPropertyName">
            <exclude />
        </member>
        <member name="P:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProviderAttribute.ParentDataType">
            <exclude />
        </member>
        <member name="P:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProviderAttribute.NullValue">
            <exclude />
        </member>
        <member name="T:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProvider">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Hierarchy.DataAncestorProviders.PropertyDataAncestorProvider.GetParent(Composite.Data.IData)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProvider.GetElements(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{Composite.Plugins.Elements.ElementProviders.PageElementProvider.PageElementProvider.PageLocaleState,Composite.Data.Types.IPage}})">
            <summary>
            
            </summary>
            <param name="pages">isLocalized -> IPage</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken.Type">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken.Source">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Elements.ElementProviders.VirtualElementProvider.VirtualElementProviderEntityToken.Id">
            <exclude />
        </member>
        <member name="T:Composite.Core.Linq.ExpressionCreator">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.Select(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.Where(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.Count(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.Distinct(System.Linq.Expressions.Expression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.OrderBy(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.OrderByDescending(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.ThenBy(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.ThenByDescending(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ExpressionCreator.Join(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Linq.DictionaryExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.DictionaryExtensions.GetContentHashCode(System.Collections.IDictionary)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Linq.IEnumerableExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.IEnumerableExtensions.Evaluate``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns evaluated collection. It allows avoiding of multiple calculations for the same enumerator.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="enumerable">Enumerable object to be evaluated.</param>
            <returns>Evaluated collection.</returns>
        </member>
        <member name="M:Composite.Core.Linq.IEnumerableExtensions.EvaluateOrNull``1(System.Collections.Generic.IEnumerable{``0})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.IEnumerableExtensions.SingleOrException``1(System.Linq.IQueryable{``0},System.String,System.String,System.Object[])">
            <summary>
            Extends standard IQueryable<typeparamref name="T"/>.Single method, allows specifying exception text.
            </summary>
            <param name="query"></param>
            <param name="exceptionOnEmpty">Exception format for not a single row found</param>
            <param name="exceptionOnMultipleResults">Exception format for multiple rows found</param>
            <param name="formatArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Linq.IEnumerableExtensions.SingleOrDefaultOrException``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Object[])">
            <summary>
            Extends standard IQueryable<typeparamref name="T"/>.Single method, allows specifying exception text.
            </summary>
            <param name="query"></param>
            <param name="exceptionOnMultipleResults">Exception format for multiple rows found</param>
            <param name="formatArgs">Format arguments</param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.Linq.IEnumerableExtensions.FirstOrException``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            Extends standard IQueryable<typeparamref name="T"/>.First() method, allows specifying exception text.
            </summary>
            <param name="query"></param>
            <param name="exceptionOnEmpty">Exception format for not a single row found</param>
            <param name="formatArgs">Format arguments</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Linq.ListExtensions">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ListExtensions.ToList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ListExtensions.ToListOfObjects(System.Collections.IEnumerable)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Linq.ListExtensions.ToEnumerableOfObjects(System.Collections.IEnumerable)">
            <exclude />
        </member>
        <member name="M:Composite.Compare.ObjectCompare(System.Object,System.Object)">
            <summary>
            Compares to objects by comparing all public getters value recursive.
            Does not handle cycles.
            </summary>
            <returns>Returns true if the two objects are equal.</returns>
        </member>
        <member name="T:Composite.Core.WebClient.Renderings.Page.PageRenderer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.GetPageRenderFunctionContextContainer">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.Render(Composite.Data.Types.IPage,System.Collections.Generic.IEnumerable{Composite.Data.Types.IPagePlaceholderContent},Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.ParsePlaceholderContent(Composite.Data.Types.IPagePlaceholderContent)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.Render(Composite.Data.Types.IPage,System.Collections.Generic.IEnumerable{Composite.Data.Types.IPagePlaceholderContent})">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.GetCurrentPageAssociatedData(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.GetCurrentPageAssociatedData``1">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.Render(System.Xml.Linq.XDocument,Composite.Functions.FunctionContextContainer,Composite.Core.WebClient.Renderings.Page.IXElementToControlMapper,Composite.Data.Types.IPage)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.AppendC1MetaTags(Composite.Data.Types.IPage,Composite.Core.Xml.XhtmlDocument)">
            <summary>
            Appends the c1 meta tags to the head section. Those tag are used later on by SEO assistant.
            </summary>
            <param name="page">The page.</param>
            <param name="xhtmlDocument">The XHTML document.</param>
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.ResolveRelativePaths(Composite.Core.Xml.XhtmlDocument)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.ExecuteEmbeddedFunctions(System.Xml.Linq.XElement,Composite.Functions.FunctionContextContainer)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.NormalizeXhtmlDocument(Composite.Core.Xml.XhtmlDocument)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.Renderings.Page.PageRenderer.DisableAspNetPostback(System.Web.UI.Control)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Page.PageRenderer.CurrentPageId">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Page.PageRenderer.CurrentPage">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.Renderings.Page.PageRenderer.CurrentPageCulture">
            <exclude />
        </member>
        <member name="T:Composite.Core.ResourceSystem.Icons.CommonCommandIcons">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.AddNew">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.Edit">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.Refresh">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.Delete">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.Search">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.SetSecurity">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.ShowHistory">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonCommandIcons.ShowReport">
            <exclude />
        </member>
        <member name="T:Composite.Core.ResourceSystem.Icons.CommonElementIcons">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Advanced">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Clock">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Cancel">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.CancelDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Close">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Data">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.DataAwaitingApproval">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.DataAwaitingPublication">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.DataDraft">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.DataPublished">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.DeletedItems">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Earth">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Error">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Folder">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.FolderOpen">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.FolderDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeApplicationMsWord">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeApplicationPdf">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeApplicationRtf">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeApplicationVndMsExcel">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeApplicationVndMsPowerpoint">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeApplicationZip">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeImageBmp">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeImageGif">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeImageJpeg">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeImagePng">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeTextPlain">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.MimeTextXml">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Nodes">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Options">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Page">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Popup">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Search">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Report">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Template">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Tools">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.User">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.UserDisabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.UserGroup">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.Icons.CommonElementIcons.Question">
            <exclude />
        </member>
        <member name="T:Composite.Core.ResourceSystem.ResourceHandle">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.ResourceHandle.Build(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.ResourceHandle.BuildIconFromDefaultProvider(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.ResourceSystem.ResourceHandle.#ctor">
            <summary>
            DO NOT USE! For serializing only!
            </summary>        
        </member>
        <member name="M:Composite.Core.ResourceSystem.ResourceHandle.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.ResourceHandle.ResourceNamespace">
            <exclude />
        </member>
        <member name="P:Composite.Core.ResourceSystem.ResourceHandle.ResourceName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.Common.PropertyNameMappingConfigurationElement">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.Common.PropertyNameMappingConfigurationElement.PropertyName">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.Common.PropertyNameMappingConfigurationElement.SourcePropertyName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.Common.PropertyNameMappingConfigurationElementCollection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.Common.PropertyNameMappingConfigurationElementCollection.Add(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.Common.PropertyNameMappingConfigurationElementCollection.CreateNewElement">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.Common.PropertyNameMappingConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFile.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFile.DataSourceId">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFile.FolderPath">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFile.FileName">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFileDataId">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFileDataId.#ctor">
            <exclude />
        </member>
        <member name="P:Composite.Plugins.Data.DataProviders.FileSystemDataProvider.Foundation.FileSystemFileDataId.FullPath">
            <exclude />
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.CodeGeneration.DataProviderHelperClassGenerator">
            <summary>
            Creates a implementation of DataProviderHelperBase
            It does NOT depend on the data type to exist
            </summary>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.Foundation.XmlDataProviderDocumentCache.RegisterExternalFileChangeAction(System.String,System.Action)">
            <summary>
            Register an action that will be invoked on external file changes (new file copied in or file edited by external process).
            On Flush system event registrations are cleared and you should reregister.
            </summary>
            <param name="filename">File path</param>
            <param name="action">Action to execute on external changes</param>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.Foundation.XmlDataProviderDocumentCache.GetCandidateFiles(System.String)">
            <summary>
            Fetches a list of files that contain data - both the stable file and tmp files.
            List is ordered with newest files first.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.Foundation.XmlDataProviderDocumentCache.LoadFileRecordFromDisk(System.String,System.String,System.Func{System.Xml.Linq.XElement,Composite.Data.IDataId})">
            <summary>
            Will pull up most recent from disk - if no good file is found an empty store will be constructed anyway
            </summary>
            <param name="filePath"></param>
            <param name="elementName"></param>
            <param name="keyGetter"></param>
            <returns></returns>
        </member>
        <member name="T:Composite.Plugins.Data.DataProviders.XmlDataProvider.IXElementWrapper">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Plugins.Data.DataProviders.XmlDataProvider.IXElementWrapper.CommitData(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="M:Composite.Plugins.ResourceSystem.XmlStringResourceProvider.XmlStringResourceProvider.GetStringsForCulture(System.Globalization.CultureInfo)">
            <summary>
            Returns strings for the specified culture or null if no strings exists.
            </summary>
        </member>
        <member name="T:Composite.Data.Types.IXsltFile">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Transactions.TransactionsFacade">
            <summary>
            Ensures C1 compiant System.Transactions.TransactionScope services.
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Transactions.TransactionsFacade.CreateNewScope">
            <exclude />
        </member>
        <member name="M:Composite.Data.Transactions.TransactionsFacade.Create(System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Transactions.TransactionsFacade.Create(System.Boolean,System.TimeSpan)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Transactions.TransactionsFacade.CreateNewScope(System.TimeSpan)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Transactions.TransactionsFacade.SuppressTransactionScope">
            <exclude />
        </member>
        <member name="P:Composite.Data.Transactions.TransactionsFacade.DefaultTransactionTimeout">
            <exclude />
        </member>
        <member name="P:Composite.Data.Transactions.TransactionsFacade.DefaultTransactionIsolationLevel">
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.ExtendedNullable`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.ExtendedNullable`1.op_Implicit(`0)~Composite.Core.Types.ExtendedNullable{`0}">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.ExtendedNullable`1.HasValue">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.ExtendedNullable`1.Value">
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.KeyValuePair">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.KeyValuePair.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.KeyValuePair.#ctor(System.String,System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.KeyValuePair.Key">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.KeyValuePair.Value">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.ConfigurationServices">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.ConfigurationServices.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.ConfigurationServices.SaveConfigurationSection(System.String,System.Configuration.ConfigurationSection)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.ConfigurationServices.TransformConfiguration(System.Xml.Linq.XDocument,System.Boolean)">
            <summary>
            Transforms the current configuration file based on the supplied XSLT document. The resulting 
            configuration document is validated and no errors are tollerated. Configurationerrors are handled
            as exceptions.
            </summary>
            <param name="xsltDocument">XSLT document to apply to the configuration document</param>
            <param name="simulationOnly">When true the configuration transformation will only be validated, not executed. When false, the configuration change will be persisted.</param>
        </member>
        <member name="M:Composite.Core.Configuration.ConfigurationServices.TransformConfiguration(System.Func{System.Xml.Linq.XDocument,System.Boolean})">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.ConfigurationServices.ConfigurationSource">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.NameTypeManagerTypeConfigurationElementCollection`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.NameTypeManagerTypeConfigurationElementCollection`1.RetrieveConfigurationElementType(System.Xml.XmlReader)">
            <summary>
            Get the configuration object for each <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElement"/> object in the collection.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> that is deserializing the element.</param>
        </member>
        <member name="T:Composite.Core.Configuration.SimpleNameTypeConfigurationElement">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.SimpleNameTypeConfigurationElement.Name">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.SimpleNameTypeConfigurationElement.Type">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.SimpleNameTypeConfigurationElementCollection">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.SimpleNameTypeConfigurationElementCollection.Add(System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.SimpleNameTypeConfigurationElementCollection.CreateNewElement">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.SimpleNameTypeConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.FlushEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.PostFlushEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.ShutDownEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.PrepareForShutDownEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.GlobalEventSystemFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.SubscribeToFlushEvent(Composite.C1Console.Events.GlobalEventSystemFacade.FlushEventDelegate)">
            <summary>
            Flush code MAY NOT do ANY kind of re-initialization. 
            </summary>
            <param name="eventDelegate"></param>
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.SubscribeToPostFlushEvent(Composite.C1Console.Events.GlobalEventSystemFacade.PostFlushEventDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.UnsubscribeFromFlushEvent(Composite.C1Console.Events.GlobalEventSystemFacade.FlushEventDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.FlushTheSystem">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.SubscribeToPrepareForShutDownEvent(Composite.C1Console.Events.GlobalEventSystemFacade.PrepareForShutDownEventDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.SubscribeToShutDownEvent(Composite.C1Console.Events.GlobalEventSystemFacade.ShutDownEventDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.UnsubscribeFromPrepareForShutDownEvent(Composite.C1Console.Events.GlobalEventSystemFacade.PrepareForShutDownEventDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.UnsubscribeFromShutDownEvent(Composite.C1Console.Events.GlobalEventSystemFacade.ShutDownEventDelegate)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.PrepareForShutDown">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Events.GlobalEventSystemFacade.ShutDownTheSystem">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.GlobalEventSystemFacade.FlushEventDelegate">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.GlobalEventSystemFacade.PostFlushEventDelegate">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.GlobalEventSystemFacade.ShutDownEventDelegate">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Events.GlobalEventSystemFacade.PrepareForShutDownEventDelegate">
            <exclude />
        </member>
        <member name="T:Composite.Core.Configuration.CachingSettings">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.Configuration.CachingSettings.DefaultCacheSize">
            <exclude />
        </member>
        <member name="F:Composite.Core.Configuration.CachingSettings.NoCacheSize">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.CachingSettings.GetSize(System.Int32)">
            <summary>
            Returns the configured size or if the configured size is default size, then it uses
            the <paramref name="defaultSize"/> value.
            </summary>
            <param name="defaultSize"></param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.Configuration.CachingSettings.Enabled">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.CachingSettings.Size">
            <summary>
            One of three values:
            NoCacheSize: The caller should use not use caching
            DefaultCacheSize: The caller should use its own default size
            All other values (&gt; 0): The caller should use this sizee
            See <see cref="M:Composite.Core.Configuration.CachingSettings.GetSize(System.Int32)"/>
            </summary>
        </member>
        <member name="T:Composite.Core.Configuration.GlobalSettingsFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.GlobalSettingsFacade.AddNonProbableAssemblyName(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.GlobalSettingsFacade.RemoveNonProbableAssemblyName(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Configuration.GlobalSettingsFacade.GetNamedCaching(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.ApplicationName">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.DefaultCultureInfo">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.DefaultCultureName">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.DefaultLocalizationCultureInfo">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.ConfigurationDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.GeneratedAssembliesDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.SerializedWorkflowsDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.SerializedConsoleMessagesDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.AppCodeDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.BinDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.TempDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.PackageDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.AutoPackageInstallDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.TreeDefinitionsDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.PageTemplateFeaturesDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.DataMetaDataDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.InlineCSharpFunctionDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.PackageLicenseDirectory">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.ResourceCacheSettings">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.NonProbableAssemblyNames">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.ApplicationCultures">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.ConsoleMessageQueueItemSecondToLive">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.EnableDataTypesAutoUpdate">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.BroadcastConsoleElementChanges">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.AutoCreatedAdministratorUserName">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.WorkflowTimeout">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.ConsoleTimeout">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.DefaultReaderLockWaitTimeout">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.DefaultWriterLockWaitTimeout">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.Caching">
            <exclude />
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.OnlyTranslateWhenApproved">
            <summary>
            When <value>true</value> only pages that are published or awaiting publication can be translated in console.
            </summary>
        </member>
        <member name="P:Composite.Core.Configuration.GlobalSettingsFacade.MaximumRootPathLength">
            <summary>
            The maximum number of characters the path to the application root (like 'C:\InetPub\MySite') can contain.
            Composite C1 create files below this path, some of which have very long paths - if the root path is long enough the combined length
            can exceed a limitation in Microsoft Windows - see http://msdn.microsoft.com/en-us/library/aa365247%28VS.85%29.aspx#paths
            </summary>
        </member>
        <member name="T:Composite.Core.IO.PathUtil">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.PathUtil.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.PathUtil.Resolve(System.String)">
            <summary>
            Resolves a (tilde based) partial path to a full path
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.Core.IO.PathUtil.CleanFileName(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.PathUtil.CleanFileName(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.PathUtil.GetWebsitePath(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.IO.PathUtil.WritePermissionGranted(System.String)">
            <summary>
            Indicates whether current Windows user has the NTFS write permission to a file or a folder
            </summary>
            <param name="fileOrDirectoryPath">Path to a file or a folder</param>
            <returns></returns>
        </member>
        <member name="P:Composite.Core.IO.PathUtil.BaseDirectory">
            <summary>
            Root directory of website 
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Core.Logging.LoggingService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogEntry(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Diagnostics.TraceEventType,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogEntry(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Diagnostics.TraceEventType,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogEntry(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Diagnostics.TraceEventType)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogError(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogError(System.String,System.String,Composite.Core.Logging.LoggingService.Category)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogError(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogError(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogError(System.String,System.Exception)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogCritical(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogCritical(System.String,System.String,Composite.Core.Logging.LoggingService.Category)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogCritical(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogCritical(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogCritical(System.String,System.Exception)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogInformation(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogVerbose(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogVerbose(System.String,System.String,Composite.Core.Logging.LoggingService.Category)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogVerbose(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogVerbose(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogWarning(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogWarning(System.String,System.String,Composite.Core.Logging.LoggingService.Category)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogWarning(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogWarning(System.String,System.String,Composite.Core.Logging.LoggingService.Category,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Logging.LoggingService.LogWarning(System.String,System.Exception)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Logging.LoggingService.Category">
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LoggingService.Category.General">
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LoggingService.Category.Audit">
            <exclude />
        </member>
        <member name="T:Composite.Core.Logging.LogLevel">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LogLevel.Info">
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LogLevel.Debug">
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LogLevel.Fine">
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LogLevel.Warning">
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LogLevel.Error">
            <exclude />
        </member>
        <member name="F:Composite.Core.Logging.LogLevel.Fatal">
            <exclude />
        </member>
        <member name="T:Composite.Core.Logging.NullLogTraceListener">
            <summary>
            This is used when the Composite.Mocks.Plugins.Logging.LogTraceListeners.WinFormTraceListener.WinFormTraceListener
            is not available to the system.
            </summary>
        </member>
        <member name="T:Composite.Core.Serialization.CodeGeneration.Foundation.ISerializer">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.CodeGeneration.Foundation.ISerializer.Serialize(System.Object,System.Text.StringBuilder)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.CodeGeneration.Foundation.ISerializer.Deserialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <exclude />
        </member>
        <member name="T:Composite.Core.Serialization.CodeGeneration.PropertySerializerTypeCodeGenerator">
            <summary>
            This class creates the CodeDOM for a given property class
            </summary>
        </member>
        <member name="T:Composite.Core.Serialization.StringConversionServices">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.DateTime)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.DateTime)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.DateTime)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueDateTime(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueInt(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.Int64)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.Int64)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.Int64)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueLong(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.Decimal)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.Decimal)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.Decimal)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueDecimal(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueBool(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueGuid(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueType(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueString(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair``1(System.Text.StringBuilder,System.String,``0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String,``0)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue``1(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValueArrayPair``1(System.Text.StringBuilder,System.String,``0[])">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueArray``1(System.String,``0[])">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValueArray``1(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.SerializeKeyValuePair(System.Text.StringBuilder,System.String,System.Object,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.DeserializeValue(System.String,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Serialization.StringConversionServices.ParseKeyValueCollection(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.Plugins.TypeManagerTypeHandler.ITypeManagerTypeHandler.HasTypeWithName(System.String)">
            <summary>
            
            </summary>
            <param name="typeFullname">Full name: namespace+name. X.Y.Z where X.Y is the namespace and Z is the type.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Configuration.TypeManagerTypeNameConverter">
            <summary>
            Represents a configuration converter that converts a string to <see cref="T:System.Type"/> using the Composite Type Manager.
            </summary>
        </member>
        <member name="M:Composite.Core.Configuration.TypeManagerTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Returns the name for the passed in Type.
            </summary>
            <param name="context">The container representing this System.ComponentModel.TypeDescriptor.</param>
            <param name="culture">Culture info for assembly</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Type to convert to.</param>
            <returns>Assembly Qualified Name as a string</returns>
        </member>
        <member name="M:Composite.Core.Configuration.TypeManagerTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Returns a type based on the name passed in as data.
            </summary>
            <param name="context">The container representing this System.ComponentModel.TypeDescriptor.</param>
            <param name="culture">Culture info for assembly.</param>
            <param name="value">Data to convert.</param>
            <returns>Type of the data</returns>
        </member>
        <member name="T:Composite.Core.Types.Pair`2">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.Pair`2.#ctor(`0,`1)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.Pair`2.Equals(System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.Pair`2.Equals(Composite.Core.Types.Pair{`0,`1})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.Pair`2.GetHashCode">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.Pair`2.ToString">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.Pair`2.First">
            <exclude />
        </member>
        <member name="P:Composite.Core.Types.Pair`2.Second">
            <exclude />
        </member>
        <member name="T:Composite.Core.Types.TypeExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.#cctor">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetVersionNeutralName(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetPropertiesRecursively(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetPropertiesRecursively(System.Type,System.Func{System.Reflection.PropertyInfo,System.Boolean})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetInterfacesRecursively(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetInterfacesRecursively(System.Type,System.Func{System.Type,System.Boolean})">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.SerializeValue(System.Type,System.Object)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.DeserializeValue(System.Type,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetCustomInterfaceAttributes``1(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetCustomAttributesRecursively``1(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetCustomAttributesRecursively(System.Type,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetCustomAttributesRecursively``1(System.Reflection.PropertyInfo)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.TypeExtensionMethods.GetShortLabel(System.Type)">
            <exclude />
        </member>
        <member name="F:Composite.Core.Types.TypeIncludes.InterfaceTypes">
            <summary>
            Include interfaces in the result.
            </summary>
        </member>
        <member name="F:Composite.Core.Types.TypeIncludes.ConcreteTypes">
            <summary>
            Include concrete types in the result.
            </summary>
        </member>
        <member name="F:Composite.Core.Types.TypeIncludes.PrimitiveTypes">
            <summary>
            Include primitives in the result.
            </summary>
        </member>
        <member name="M:Composite.Core.Types.TypeManagerImpl.TryGetType(System.String)">
            <summary>
            Returns the type with the provided fullName (or null).
            </summary>
            <returns>A type or null</returns>
        </member>
        <member name="M:Composite.Core.Types.TypeManagerImpl.HasTypeWithName(System.String)">
            <summary>
            This method return true if there is type with the fullname <para>typeFullname</para> anywhere in the system.
            </summary>
            <param name="typeFullname">Full name: namespace+name. X.Y.Z where X.Y is the namespace and Z is the type.</param>
            <returns></returns>
        </member>
        <member name="T:Composite.Core.Types.ValueTypeConverter">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.ValueTypeConverter.Convert(System.Object,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.ValueTypeConverter.TryConvert(System.Object,System.Type,System.Exception@)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Types.ValueTypeConverter.Convert``1(System.Object)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.ClientValidationRules.ClientValidationRule">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.ClientValidationRules.NotNullClientValidationRule">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.ClientValidationRules.RegexClientValidationRule">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.ClientValidationRules.RegexClientValidationRule.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.ClientValidationRules.RegexClientValidationRule.Expression">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.ClientValidationRules.StringLengthClientValidationRule">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.ClientValidationRules.StringLengthClientValidationRule.#ctor(System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.ClientValidationRules.StringLengthClientValidationRule.LowerBound">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.ClientValidationRules.StringLengthClientValidationRule.UpperBound">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.PropertyValidatorBuilder`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.IPropertyValidatorBuilder.GetCodeAttributeDeclaration">
            <summary>
            This method should return a CodeAttributeDeclaration that will beused for 
            code genereting the correct attribute this class represents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Validation.PropertyValidatorBuilder`1.GetCodeAttributeDeclaration">
            <summary>
            This method should return a CodeAttributeDeclaration that will beused for 
            code genereting the correct attribute this class represents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Composite.Data.Validation.PropertyValidatorBuilder`1.GetAttribute">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.DecimalPrecisionValidatorAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.DecimalPrecisionValidatorAttribute.#ctor(System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.DecimalPrecisionValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.DecimalPrecisionValidatorAttribute.Digits">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.DecimalPrecisionValidatorAttribute.Precision">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.NullStringLengthValidatorAttribute">
            <summary>
            Validator rule for data type properties.
            Validate that a string - when not null - has a length than falls within a minimum and maximum length. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.NullStringLengthValidatorAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Validator rule for data type properties.
            Validate that a string - when not null - has a length than falls within a minimum and maximum length. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.NullStringLengthValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.NullStringLengthValidatorAttribute.LowerBound">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.NullStringLengthValidatorAttribute.UpperBound">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.PasswordValidatorAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.PasswordValidatorAttribute.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.PasswordValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.IntegerRangeValidatorAttribute">
            <summary>
            Validator rule for data type properties.
            Validate that an integer has a value than falls within a minimum and maximum value. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.IntegerRangeValidatorAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Validator rule for data type properties.
            Validate that an integer has a value than falls within a minimum and maximum value. 
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.IntegerRangeValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.IntegerRangeValidatorAttribute.LowerBound">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.IntegerRangeValidatorAttribute.UpperBound">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.RegexValidatorAttribute">
            <summary>
            Validator rule for data type properties.
            Represents a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RegexValidator"/>.
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.RegexValidatorAttribute.#ctor(System.String)">
            <summary>
            Validator rule for data type properties.
            Represents a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RegexValidator"/>.
            </summary>    
        </member>
        <member name="M:Composite.Data.Validation.Validators.RegexValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.RegexValidatorAttribute.Pattern">
            <exclude />
        </member>
        <member name="T:Composite.Data.Validation.Validators.StringLengthValidatorAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.StringLengthValidatorAttribute.#ctor(System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Composite.Data.Validation.Validators.StringLengthValidatorAttribute.DoCreateValidator(System.Type)">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.StringLengthValidatorAttribute.LowerBound">
            <exclude />
        </member>
        <member name="P:Composite.Data.Validation.Validators.StringLengthValidatorAttribute.UpperBound">
            <exclude />
        </member>
        <member name="T:Composite.Core.WebClient.UrlUtils">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlUtils.ResolveAdminUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlUtils.ResolvePublicUrl(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlUtils.Combine(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlUtils.FindUrlsInHtml(System.String,System.String)">
            <summary>
            Finds all the urls that start with <paramref name="urlPrefix"/>.
            We assume that each url ends before one of the following strings:
            double quote, single quote, or &#39; which is single quote mark (') encoded in xml attribute 
            </summary>
            <param name="html">The html content.</param>
            <param name="urlPrefix">The url prefix</param>
            <returns>List of urls, sorted by the order they appear</returns>
        </member>
        <member name="M:Composite.Core.WebClient.UrlUtils.ZipContent(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.WebClient.UrlUtils.UnZipContent(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlUtils.PublicRootPath">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlUtils.AdminRootPath">
            <exclude />
        </member>
        <member name="P:Composite.Core.WebClient.UrlUtils.RenderersRootPath">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.CancelHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CancelHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CancelHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CancelHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.CancelHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.CloseCurrentViewActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CloseCurrentViewActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CloseCurrentViewActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.CloseCurrentViewActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.ChildWorkflowDoneHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ChildWorkflowDoneHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ChildWorkflowDoneHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ChildWorkflowDoneHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ChildWorkflowDoneHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity.ChildWorkflowTypeProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity.ChildWorkflowPayloadProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity.ChildWorkflowType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ExecuteChildWorkflowActivity.ChildWorkflowPayload">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.DataDialogFormActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.DataDialogFormActivity.ContainerLabelProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.DataDialogFormActivity.FormDefinitionFileNameProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.DataDialogFormActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.DataDialogFormActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.DataDialogFormActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.DataDialogFormActivity.ContainerLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.DataDialogFormActivity.FormDefinitionFileName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity.ContainerLabelProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity.FormDefinitionFileNameProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity.ContainerLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ConfirmDialogFormActivity.FormDefinitionFileName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity.FieldBindingPathProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity.MessageProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity.FieldBindingPath">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ShowFieldMessageActivity.Message">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.TitleProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.MessageProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.DialogTypeProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.DialogType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.Title">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.ShowConsoleMessageBoxActivity.Message">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.DocumentFormActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.DocumentFormActivity.ContainerLabelProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.DocumentFormActivity.FormDefinitionFileNameProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.DocumentFormActivity.CustomToolbarDefinitionFileNameProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.DocumentFormActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.DocumentFormActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.DocumentFormActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.DocumentFormActivity.ContainerLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.DocumentFormActivity.FormDefinitionFileName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.DocumentFormActivity.CustomToolbarDefinitionFileName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.FinishHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FinishHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.FinishHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FinishHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.FinishHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.NextHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.NextHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.NextHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.NextHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.NextHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.PreviewHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.PreviewHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.PreviewHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.PreviewHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.PreviewHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.PreviousHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.PreviousHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.PreviousHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.PreviousHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.PreviousHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.SaveHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.SaveHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.SaveHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.SaveHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.SaveHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.SaveAndPublishHandleExternalEventActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.SaveAndPublishHandleExternalEventActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.SaveAndPublishHandleExternalEventActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.SaveAndPublishHandleExternalEventActivity.EventName">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.SaveAndPublishHandleExternalEventActivity.InterfaceType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Activities.WizardFormActivity">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.WizardFormActivity.ContainerLabelProperty">
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.Activities.WizardFormActivity.FormDefinitionFileNameProperty">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.WizardFormActivity.#ctor">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.WizardFormActivity.#ctor(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Activities.WizardFormActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.WizardFormActivity.ContainerLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Activities.WizardFormActivity.FormDefinitionFileName">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.ActivityExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.ActivityExtensionMethods.GetRoot(System.Workflow.ComponentModel.Activity)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.ActivityExtensionMethods.GetRoot``1(System.Workflow.ComponentModel.Activity)">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.WorkflowPersistingType">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="F:Composite.C1Console.Workflow.WorkflowPersistingType.Never">
            <summary>
            Never persisted
            </summary>
        </member>
        <member name="F:Composite.C1Console.Workflow.WorkflowPersistingType.Idle">
            <summary>
            Workflow with this type of persistence will be unloaded after entering "Idle" state
            </summary>
        </member>
        <member name="F:Composite.C1Console.Workflow.WorkflowPersistingType.Shutdown">
            <summary>
            Workflow will be unloaded and serialized while shutting down
            </summary>
        </member>
        <member name="T:Composite.C1Console.Workflow.AllowPersistingWorkflowAttribute">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.AllowPersistingWorkflowAttribute.#ctor(Composite.C1Console.Workflow.WorkflowPersistingType)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.AllowPersistingWorkflowAttribute.WorkflowPersistingType">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.EntityTokenLockAttribute">
            <summary>
            If this attribute is specified on a workflow, then the EntityToken will be locked
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.EntityTokenLockAttribute.#ctor">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.FormEventArgs">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.FormEventArgs.#ctor(System.Guid,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.FormEventArgs.#ctor(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.FormEventArgs.#ctor(System.Guid,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.FormEventArgs.WorkflowResult">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.FormEventArgs.Bindings">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.Foundation.FormData">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Foundation.FormData.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.Foundation.FormData.Deserialize(System.Xml.Linq.XElement)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.ContainerLabel">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.FormDefinition">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.CustomToolbarDefinition">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.CustomToolbarMarkupProvider">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.FormMarkupProvider">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.Bindings">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.BindingsValidationRules">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.ContainerType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.EventHandleFilterType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.Foundation.FormData.ExcludedEvents">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.IFormsWorkflowEventService">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.Save">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.SaveAndPublish">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.Next">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.Previous">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.Finish">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.Cancel">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.Preview">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.CustomEvent01">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.CustomEvent02">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.CustomEvent03">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.CustomEvent04">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.CustomEvent05">
            <exclude />
        </member>
        <member name="E:Composite.C1Console.Workflow.IFormsWorkflowEventService.ChildWorkflowDone">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.WorkflowActionToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowActionToken.#ctor(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowActionToken.#ctor(System.Type,System.Collections.Generic.IEnumerable{Composite.C1Console.Security.PermissionType})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowActionToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowActionToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.WorkflowType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.ParentWorkflowInstanceId">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.Payload">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.ExtraPayload">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.DoIgnoreEntityTokenLocking">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.EventHandleFilterType">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.IgnoreEntityTokenLocking">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowActionToken.PermissionTypes">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.WorkflowFacade">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.EnsureInitialization">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetWorkflowType(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.RunWhenInitialized(System.Action)">
            <summary>
            Runs the when initialized.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.CreateNewWorkflow(System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.CreateNewWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.StartNewWorkflow(System.Type,Composite.C1Console.Actions.FlowControllerServicesContainer,Composite.C1Console.Security.EntityToken,Composite.C1Console.Security.ActionToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetWorkflow(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetStateMachineWorkflowInstance(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.RunWorkflow(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.RunWorkflow(System.Workflow.Runtime.WorkflowInstance)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.AbortWorkflow(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.AcquireLock(System.Guid,Composite.C1Console.Security.EntityToken)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.SetFlowControllerServicesContainer(System.Guid,Composite.C1Console.Actions.FlowControllerServicesContainer)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetFlowControllerServicesContainer(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.RemoveFlowControllerServicesContainer(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.WorkflowExists(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.WaitForIdleStatus(System.Guid)">
            <summary>
            This method returns a semaphore that will be signaled when the workflow instance becomes idle.
            Or null if the workflow instance is idle at the calling moment.
            </summary>
            <param name="instanceId"></param>
            <returns></returns>
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.SetEventHandlerFilter(System.Guid,System.Type)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetEventHandleFilter(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetCurrentFormEvents(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetCurrentFormEvents(System.Workflow.Runtime.WorkflowInstance)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FireSaveEvent(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FireSaveAndPublishEvent(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FireNextEvent(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FirePreviousEvent(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FireFinishEvent(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FireCancelEvent(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FirePreviewEvent(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FireCustomEvent(System.Int32,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.FireChildWorkflowDoneEvent(System.Guid,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.TryGetFormData(System.Guid,Composite.C1Console.Workflow.Foundation.FormData@)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFacade.GetFormData(System.Guid,System.Boolean)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowFacade.WorkflowRuntime">
            <exclude />
        </member>
        <member name="T:Composite.C1Console.Workflow.WorkflowFlowToken">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFlowToken.#ctor(System.Guid)">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFlowToken.Serialize">
            <exclude />
        </member>
        <member name="M:Composite.C1Console.Workflow.WorkflowFlowToken.Deserialize(System.String)">
            <exclude />
        </member>
        <member name="P:Composite.C1Console.Workflow.WorkflowFlowToken.WorkflowInstanceId">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.Namespaces">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.BindingForms10">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.BindingFormsStdUiControls10">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.BindingFormsStdFuncLib10">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Function10">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Rendering10">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Localization10">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.AspNetControls">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Data">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.DynamicData10">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.XmlNs">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Xhtml">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Xsl">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Xsi">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.Namespaces.Xsd">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XhtmlPrettifier">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlPrettifier.Prettify(System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlPrettifier.Prettify(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XhtmlPrettifier.SuperTrim(System.String)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XNodeExtensionMethods">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XNodeExtensionMethods.GetXPath(System.Xml.Linq.XObject)">
            <summary>
            Returns an XPath to the specified XObject for documentation purposes. Namespaces
            are not handled by this function and using the returned XPath to look up the element
            is not guaranteed to work.
            </summary>
            <param name="xObject"></param>
            <returns></returns>
        </member>
        <member name="F:Composite.Core.Xml.XNodeExtensionMethods.InlineElements">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XNodeExtensionMethods.IsBlockElement(System.Xml.Linq.XNode)">
            <exclude />
        </member>
        <member name="M:Composite.Core.Xml.XNodeExtensionMethods.IsWhitespaceAware(System.Xml.Linq.XNode)">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.IXsltExtensionDefinition">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.IXsltExtensionDefinition.ExtensionNamespace">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.IXsltExtensionDefinition.EntensionObjectAsObject">
            <exclude />
        </member>
        <member name="T:Composite.Core.Xml.XsltExtensionDefinition`1">
            <summary>    
            </summary>
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.XsltExtensionDefinition`1.ExtensionNamespace">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.XsltExtensionDefinition`1.EntensionObject">
            <exclude />
        </member>
        <member name="P:Composite.Core.Xml.XsltExtensionDefinition`1.EntensionObjectAsObject">
            <exclude />
        </member>
    </members>
</doc>

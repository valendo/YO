@inherits RazorFunction

@functions {
    public override string FunctionDescription
    {
        get  { return "Show place detail"; }
    }

    string PathInfoString(int segment)
    {
        string pathInfo = Composite.Core.Routing.Pages.C1PageRoute.GetPathInfo() ?? string.Empty;
        string[] segments = pathInfo.Split('/');
        return segments.Skip(segment + 1).FirstOrDefault();
    }

    public static string GetUrlFromTitle(string title)
    {
        const string autoRemoveChars = @",./\?#!""@+'`´*():;$%&=¦§";
        var generated = new System.Text.StringBuilder();

        foreach (var c in title.Where(c => autoRemoveChars.IndexOf(c) == -1))
        {
            generated.Append(c);
        }

        var url = generated.ToString().Replace(" ", "-");

        return url.ToLower();
    }
}

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <link href="/frontend/scripts/fancybox/css/jquery.fancybox.css" rel="stylesheet" />
        <link href="/frontend/styles/places-detail.css" rel="stylesheet" />
        <link href="/frontend/styles/header-footer.css" rel="stylesheet" />

        <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
        <script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>
        <script src="/frontend/scripts/fancybox/jquery.fancybox.pack.js"></script>
        <script src="/frontend/scripts/jquery.mousewheel-3.0.6.pack.js"></script>
        <script src="/frontend/scripts/jquery.easing.1.3.js"></script>

        <script type="text/javascript">
            $(function () {
                $("#accordion-menu").accordion();
            });

            $(function () {
                $("a.fancybox").fancybox({
                    'transitionIn': 'elastic',
                    'transitionOut': 'elastic'
                });
            });
        </script>
    </head>
    <body>
        @{
            Composite.Core.Routing.Pages.C1PageRoute.RegisterPathInfoUsage();
            string area = PathInfoString(0);
            Guid areaId = Data.Get<My.Content.PlaceArea>().Where(t => GetUrlFromTitle(t.Title) == area).SingleOrDefault().Id;
            string title = PathInfoString(1);
            var place = Data.Get<My.Content.Place>().Where(t => t.Area == areaId && GetUrlFromTitle(t.Title) == title).SingleOrDefault();
            
        }
        @*<div id="breadcrumb">
            <a href="" class="item normal">places to go</a>
            <span> > </span>
            <a href="" class="item selected">@place.Title</a>
        </div>*@
        <div id="vote">
            <a href="">32 peoples like this place</a>
        </div>
        <div class="post-header">
            <h1 class="post-title">
                @place.Title
            </h1>

            <p class="post-teaster">
                @place.Teaser
            </p>
        </div>
        <div class="content-detail">
            @Html.Raw(place.Content)
        </div>
        <div class="recommend-section clearfix"></div>
    </body>
</html>